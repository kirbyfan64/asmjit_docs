<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structasmjit_1_1x86x64_1_1X86X64Assembler" kind="struct" prot="public">
    <compoundname>asmjit::x86x64::X86X64Assembler</compoundname>
    <basecompoundref refid="structasmjit_1_1BaseAssembler" prot="public" virt="non-virtual">asmjit::BaseAssembler</basecompoundref>
    <includes local="no">x86assembler.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5eb1ab081708a7d15d2db20d95b5b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASMJIT_API</type>
        <definition>ASMJIT_API asmjit::x86x64::X86X64Assembler::X86X64Assembler</definition>
        <argsstring>(BaseRuntime *runtime)</argsstring>
        <name>X86X64Assembler</name>
        <param>
          <type><ref refid="structasmjit_1_1BaseRuntime" kindref="compound">BaseRuntime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="511"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaad32b567ad4710ca211bd70809f9a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ASMJIT_API</type>
        <definition>virtual ASMJIT_API asmjit::x86x64::X86X64Assembler::~X86X64Assembler</definition>
        <argsstring>()</argsstring>
        <name>~X86X64Assembler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="512"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03342dd0dfa785b87d02d150842ab240" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ASMJIT_API void</type>
        <definition>virtual ASMJIT_API void asmjit::x86x64::X86X64Assembler::_bind</definition>
        <argsstring>(const Label &amp;label)</argsstring>
        <name>_bind</name>
        <reimplements refid="structasmjit_1_1BaseAssembler_1ad3a5c64efbaa7dca4166a45630f304f7">_bind</reimplements>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="519"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a391bc9aaa86e0b02bb1578e88071a0b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::db</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>db</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 8-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="526" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="526" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9700e7c9c60f6908bfb51e57fd3f95f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dw</definition>
        <argsstring>(uint16_t x)</argsstring>
        <name>dw</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 16-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="528" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="528" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00b0a761b66db630d66cf41b24817454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dd</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>dd</name>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 32-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="530" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="530" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab39a64fc66a4ba0e0888fdb30d0d7d23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dq</definition>
        <argsstring>(uint64_t x)</argsstring>
        <name>dq</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 64-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="532" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="532" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b00e0e0808638f1c0f006fdd5d3221b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dint8</definition>
        <argsstring>(int8_t x)</argsstring>
        <name>dint8</name>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 8-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="535" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="535" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31d7aaf4d9ad53790eef763815861fb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::duint8</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>duint8</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 8-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="537" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="537" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adce534e2886dc85d43a58b95c718f7a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dint16</definition>
        <argsstring>(int16_t x)</argsstring>
        <name>dint16</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 16-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="540" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="540" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab48365aac5ae63b2715e038e95bcd2d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::duint16</definition>
        <argsstring>(uint16_t x)</argsstring>
        <name>duint16</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 16-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="542" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="542" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a797ea3afee7522e86ecc75724b1105b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dint32</definition>
        <argsstring>(int32_t x)</argsstring>
        <name>dint32</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 32-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="545" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="545" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a4cfc87cbd158f75569e1b022c20e06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::duint32</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>duint32</name>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 32-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="547" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="547" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4277d803ab640caae8170159b073273" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dint64</definition>
        <argsstring>(int64_t x)</argsstring>
        <name>dint64</name>
        <param>
          <type>int64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 64-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="550" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="550" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5c4e115675af304ee530a1524db2799" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::duint64</definition>
        <argsstring>(uint64_t x)</argsstring>
        <name>duint64</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add 64-bit integer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="552" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="552" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a492d7c017a53c2100d9d4dfee26708a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dfloat</definition>
        <argsstring>(float x)</argsstring>
        <name>dfloat</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add float data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="555" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="555" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad49c2c9937b3117dd738d39ebe1cbb55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::ddouble</definition>
        <argsstring>(double x)</argsstring>
        <name>ddouble</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add double data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="557" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="557" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05cae54708c937155806c9163d1b200d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dptr</definition>
        <argsstring>(void *x)</argsstring>
        <name>dptr</name>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add pointer data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="560" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="560" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68555681970dabb5526f095d38be6062" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dmm</definition>
        <argsstring>(const MmData &amp;x)</argsstring>
        <name>dmm</name>
        <param>
          <type>const <ref refid="unionasmjit_1_1Vec64Data" kindref="compound">MmData</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add Mm data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="563" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="563" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad35a23b0a0bb58adb027716a551d6c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dxmm</definition>
        <argsstring>(const XmmData &amp;x)</argsstring>
        <name>dxmm</name>
        <param>
          <type>const <ref refid="unionasmjit_1_1Vec128Data" kindref="compound">XmmData</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add Xmm data to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="565" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="565" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b953f91dce73078b860882be8fa687c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void asmjit::x86x64::X86X64Assembler::dstruct</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>dstruct</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add data in a given structure instance to the instuction stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="569" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="569" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b6551b9ce0558cf5488e4ee96965f66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASMJIT_API Error</type>
        <definition>ASMJIT_API Error asmjit::x86x64::X86X64Assembler::embedLabel</definition>
        <argsstring>(const Label &amp;op)</argsstring>
        <name>embedLabel</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Embed absolute label pointer (4 or 8 bytes). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="572"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad93ad4c447740fac276ff4d44dc7b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ASMJIT_API Error</type>
        <definition>virtual ASMJIT_API Error asmjit::x86x64::X86X64Assembler::_align</definition>
        <argsstring>(uint32_t m)</argsstring>
        <name>_align</name>
        <reimplements refid="structasmjit_1_1BaseAssembler_1aceb100955bcb01645a1975369cd8ab3d">_align</reimplements>
        <param>
          <type>uint32_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Align target buffer to <emphasis>m</emphasis> bytes. </para>        </briefdescription>
        <detaileddescription>
<para>Typical usage of this is to align labels at start of the inner loops.</para><para>Inserts <computeroutput><ref refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47f8a553fc5f4840b85418e91ebf89c7" kindref="member">nop()</ref></computeroutput> instructions or CPU optimized NOPs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="583"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac90cd9a5dd8e8f2ef05a91ba2ce06206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1x86x64_1_1X86X64Assembler" kindref="compound">X86X64Assembler</ref> &amp;</type>
        <definition>X86X64Assembler&amp; asmjit::x86x64::X86X64Assembler::short_</definition>
        <argsstring>()</argsstring>
        <name>short_</name>
        <briefdescription>
<para>Force short form of jmp/jcc/other instruction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="591" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="590" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad07b9845dec35f20d615ffc524af078a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1x86x64_1_1X86X64Assembler" kindref="compound">X86X64Assembler</ref> &amp;</type>
        <definition>X86X64Assembler&amp; asmjit::x86x64::X86X64Assembler::long_</definition>
        <argsstring>()</argsstring>
        <name>long_</name>
        <briefdescription>
<para>Force long form of jmp/jcc/other instruction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="595" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="594" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a535457b9596539d18821acf82c33d6e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1x86x64_1_1X86X64Assembler" kindref="compound">X86X64Assembler</ref> &amp;</type>
        <definition>X86X64Assembler&amp; asmjit::x86x64::X86X64Assembler::taken</definition>
        <argsstring>()</argsstring>
        <name>taken</name>
        <briefdescription>
<para>Condition is likely to be taken. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="599" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="598" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecb7e0529403c55576b6968d80af2c01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1x86x64_1_1X86X64Assembler" kindref="compound">X86X64Assembler</ref> &amp;</type>
        <definition>X86X64Assembler&amp; asmjit::x86x64::X86X64Assembler::notTaken</definition>
        <argsstring>()</argsstring>
        <name>notTaken</name>
        <briefdescription>
<para>Condition is unlikely to be taken. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="603" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="602" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a658225aaf041bd3642399b5a6e6cbb4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1x86x64_1_1X86X64Assembler" kindref="compound">X86X64Assembler</ref> &amp;</type>
        <definition>X86X64Assembler&amp; asmjit::x86x64::X86X64Assembler::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
<para><ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="607" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="606" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09bb8604db0966492eebbea6ff822bb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Add with Carry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="614" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="614" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9307732fa4890ce51ade771f665b08f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="616" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="616" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adace07476380737a357ef0bfb1c27de2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="618" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="618" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71ef7d405268fcd84462140f8dc5c159" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="618" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="618" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6cc436a518032741404c4fb06b46374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="620" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="620" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a311bcdf872fffbe14ac20a0747747709" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="622" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="622" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5e9c95e1413c2c71c4eb0cea913535d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::adc</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>adc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="622" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="622" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf17346a934ca1ceef39faf2e5ee0613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Add. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="625" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="625" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a123e9debe131db86b590774e8bc7274e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="627" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="627" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c36fa922da5c95c9004c4f74b63516f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="629" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="629" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8bf1db6abbe8be983a431a7a1339a9eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="629" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="629" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa36d85712c894d1c6c4a5366ccd3ad3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="631" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="631" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a054a7c1ce066cc2fc4cb463adc824e67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="633" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="633" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abff71b6452bad1f0288f913bda2e8ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::add</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="633" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="633" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a585e196347ced0242f8fe82a70732a95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="636" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="636" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac84d11297d20c98ac684820f34ef5556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="638" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="638" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d90774d51cab52957d1804509c2554e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="640" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="640" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0889ca3355df6b46f83178e9a244dfe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="640" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="640" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae78d25229629e648235d848376fbb760" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="642" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="642" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a784623b64c88ff2fe374d825187154da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="644" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="644" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a092af0d301a1de55b3214e4e0347ad06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::and_</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>and_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="644" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="644" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa35dcdd080d05c94d808f7c5eda8257c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bsf</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>bsf</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Bit scan forward. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="647" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="647" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02bcff5e21fb10025abacc9892e4214f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bsf</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>bsf</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="649" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="649" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77afba1dc7861b0cd19abd4380dde9ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bsr</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>bsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Bit scan reverse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="652" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="652" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ae5ea82792ea4689341c96f715a1330" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bsr</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>bsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="654" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="654" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129b39773ab0e6c4845623cd1f6edcf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bswap</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>bswap</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Byte swap (32-bit or 64-bit registers only) (i486). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="657" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="657" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80c2b6c30ae88ef782cdc9ac9d775ac4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bt</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>bt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Bit test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="660" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="660" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a547a3eebce32cc1a984224d445aa20c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bt</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>bt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="662" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43a79b466f144d075e8a227b67dd5f06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bt</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>bt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="662" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cbf4d867dd41dd3426395ed66e20e57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bt</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>bt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="664" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="664" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a74087c8c60c53df4193287ea66c8e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bt</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>bt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="666" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="666" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38c94e04f5bd1b1f2d89fc8153b23ea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bt</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>bt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="666" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="666" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac648815ccd11ef9699b4f7d1c15534ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btc</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>btc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Bit test and complement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="669" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="669" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2e213b533713ae676d1966e47482966" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btc</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>btc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="671" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="671" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9fb86c5ca86998fde887bcb287cf998c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btc</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>btc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="671" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="671" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6de90e2e4b7b9669acd10cd06a156072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btc</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>btc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="673" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="673" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6b2fb605c78486fa826bce649456ba4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btc</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>btc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="675" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="675" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf9c7f4cafd560e1dca4f9307d091090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btc</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>btc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="675" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="675" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c81b2592b719d30f13b220eb2331089" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btr</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>btr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Bit test and reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="678" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="678" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2c03d765ec1a5cad8bada4a6d6e52b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btr</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>btr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="680" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4cf6392966852bb6dacd8d0551fb285b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btr</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>btr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="680" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a238aa7ba59db624f71965d756c982413" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btr</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>btr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="682" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="682" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38d9ff918a3710343f541f81c356a8d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btr</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>btr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="684" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="684" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52b1dcdc7ed87688fff06065d2280912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::btr</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>btr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="684" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="684" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e5eff364723db63dba7aafdedc1f990" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bts</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>bts</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Bit test and set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="687" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="687" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74980fc08024273cf9073a32c77505ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bts</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>bts</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="689" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9dc3bb4672134ad6648ec3d946f452ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bts</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>bts</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="689" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad365312413c3cdebd92d8674ac5c38a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bts</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>bts</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="691" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="691" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6c58d271a99fd229590abb1994e0f0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bts</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>bts</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="693" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="693" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad4d9e6e250dea08e46df4194c7451cdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bts</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>bts</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="693" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="693" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55e12c1fd997bee8416f92d7f047434f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::call</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>call</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="696" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="696" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d5b9717e9e2de4e9d5b3c93c8063abe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::call</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>call</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="698" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="698" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36c326b99f1e261ed6cd90d1fd5d4371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::call</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>call</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="700" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="700" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa457456ddcfd231041031cb8fdce8f3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::call</definition>
        <argsstring>(const Imm &amp;o0)</argsstring>
        <name>call</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="702" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="702" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9cd3b8d4b380346122e62750248bb276" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::call</definition>
        <argsstring>(void *dst)</argsstring>
        <name>call</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="704" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="704" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06f398d2713daa5a7eaa4c13e6938200" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::clc</definition>
        <argsstring>()</argsstring>
        <name>clc</name>
        <briefdescription>
<para>Clear carry flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="707" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="707" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a2fbf6d104e5792af3c660b19130d39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cld</definition>
        <argsstring>()</argsstring>
        <name>cld</name>
        <briefdescription>
<para>Clear direction flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="709" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="709" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d485e7cbc50040f04b1a8084e7adbfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmc</definition>
        <argsstring>()</argsstring>
        <name>cmc</name>
        <briefdescription>
<para>Complement carry flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="711" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="711" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c410d4d7dc54525faa3e45fd6132b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cbw</definition>
        <argsstring>()</argsstring>
        <name>cbw</name>
        <briefdescription>
<para>Convert byte to word (AX &lt;- Sign Extend AL). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="714" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="714" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb275bcb47545d8c506af0a575d35de5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cwd</definition>
        <argsstring>()</argsstring>
        <name>cwd</name>
        <briefdescription>
<para>Convert word to dword (DX:AX &lt;- Sign Extend AX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="716" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="716" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb918ac12b4fd98037d6cbb43ae2222d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cwde</definition>
        <argsstring>()</argsstring>
        <name>cwde</name>
        <briefdescription>
<para>Convert word to dword (EAX &lt;- Sign Extend AX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="718" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="718" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40bb116dd5492e9b3346d26b8a1df867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cdq</definition>
        <argsstring>()</argsstring>
        <name>cdq</name>
        <briefdescription>
<para>Convert dword to qword (EDX:EAX &lt;- Sign Extend EAX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="720" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="720" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abdaef7ae610657fa7b235386bc487d8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmov</definition>
        <argsstring>(uint32_t cc, const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmov</name>
        <param>
          <type>uint32_t</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Conditional move. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a227a1d8054d4705a9e07ae4f37ef6d90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmova</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmova</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7446429e197d0590cf1b857d085b433a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovae</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0aa02c16cda5b03549033923a75adf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovb</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2389b13fe558179e48cca6035c729f31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovbe</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7752b904e8a69e8a88e9e5898d51588a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovc</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6cc1d3afc5647a5728564a97996c80d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmove</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmove</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc9b7a00129f4d63b3369d2708e9bbf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovg</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac941e73ae15ba06b4eeaaab55e5b777c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovge</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2eb2606589d200d8ff58e20291d996b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovl</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe5af6c3c3effbdbf3cde5ef3414035b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovle</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb3bde0bc84aba8aebc5d4f93ebb22db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovna</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovna</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae46aa263f103a421b63c8135f7ec6f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnae</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b055e566524a83bd536951f989f354" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnb</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1accd940053b2bfa818599080d7fbac390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnbe</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04be10b5039999df5b63bac191553775" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnc</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5c81018dbe07ee3c95b5c8267b630d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovne</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovne</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a722abab88d0d8768f25451afdc2b23e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovng</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovng</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9cb560e81fa8037fef7e24bcd329d80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnge</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2441eb37482a410aa1e2ac56f28d8897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnl</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d177a8fb206e2b4c152fe1c364e7972" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnle</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d9869af4dd5551bf12bfdd7b9b18ad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovno</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovno</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa7322d240bcaccdb3bc0db624c80104" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnp</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e7cb886e4471e0b8a21f2dc3e8a512f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovns</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovns</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71763a1590b5eb7feb0ce759e29e6183" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnz</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovnz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcb1e7134963b2c67033065a52006fcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovo</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2fe48d6d968d5c36eb6abec2d2dac679" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovp</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8c34267a67609c6db2ca96fc23b94da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovpe</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovpe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a179fde382848a0081f03b8df0e9b526f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovpo</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovpo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3dcf5da61c9f247dafcff9a75d50e50b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovs</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovs</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6ea629980babf2c955b6ee3dbd2a4c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovz</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmovz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="723" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace67993986709ce473147baf6bd2cfc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmov</definition>
        <argsstring>(uint32_t cc, const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmov</name>
        <param>
          <type>uint32_t</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Conditional move. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42c1a2a3087e25dfce804ab5c9d2268d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmova</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmova</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d75805ce6f7d2dd07b76238a1d8f138" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovae</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade235ed645421358f9a248d055dcf499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovb</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac47a8c078fb30b5dd006dc8b18dac938" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovbe</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada16c4c4411fba1ffa5831ce95452f2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovc</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d2aef1b52106b4b477af589b115f790" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmove</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmove</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77060db4639195a8809af5b0ab69ebaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovg</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac33f8d73999cc171f113a422c57d7a53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovge</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa38d40e295e63f45382949cde10c06b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovl</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af71917fcc2a2c9bf08d3af4b73680145" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovle</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a7ef2b590c640a46c8354850c09388c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovna</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovna</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb398f90ee1a4e15a13a40ce8a2c2969" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnae</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6bacc2aa0bf7f4f258ee1e42b7c524af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnb</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82062c73b191f5a4145d9e1378edf5ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnbe</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6617cbad7e62a7007d3efd07743d5c24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnc</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac44a40875ae850c583f1847b101014f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovne</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovne</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abab58b376c40c223be9901fc9b69ec49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovng</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovng</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa186e2e5fd42cc6ca9b8b88ff5dfd890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnge</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab48fd71200f16eb5381ad56c21a8e0d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnl</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07907a6e3bbe491a0498ca2449b6c0bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnle</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a842445a0de54dadfa8294d3f9dd249c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovno</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovno</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af698618f79458448041a15584a8defcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnp</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4492c8614553bd747f948daf6da205a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovns</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovns</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0751c6f6580974c38fdb5ec0479a3778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovnz</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovnz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6175e75734f144666e0eb5fc9d8d6a75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovo</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb2061614661f2a1727b3a5fdc3c6df2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovp</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af32e1bb763656c9343bdecd2b617a4c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovpe</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovpe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa027832275b6e4bcf3efc0b5f7da4d14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovpo</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovpo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa139b68cc8d0418c477a0446bd3dff9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovs</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovs</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9901b7f67180fbd209b14c768d25776e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmovz</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmovz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="725" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f580891a731a5f667aa42c3636b598b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compare two operands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="728" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="728" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa43210fb12a06948c108b600a6313d85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="730" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="730" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee776ac43b399fc63f1a2842578e3aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="732" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="732" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33be13212ffbc794e203f23a103994c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="732" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="732" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1debfb0afef990268c44bcafeb966a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="734" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="734" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d3e95e5f33748a02e4568c3fc608514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="736" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="736" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a270f10d2723059efe3b7a7403b3be641" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmp</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>cmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="736" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="736" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0555c6be6b6412e3938c9d06a36c9134" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpxchg</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmpxchg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compare and exchange (i486). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="739" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="739" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4041b399d1e1ae8e45b2be72cbd9f68e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpxchg</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cmpxchg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="741" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="741" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d7e323d8ea8bb9b30782a23ee7b0284" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpxchg8b</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>cmpxchg8b</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compares the 64-bit value in EDX:EAX with the memory operand (Pentium). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="744" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="744" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc78c56d4044004b42327af96fbb7df9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cpuid</definition>
        <argsstring>()</argsstring>
        <name>cpuid</name>
        <briefdescription>
<para>CPU identification (i486). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="747" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="747" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2abcd2f5c396a2ba0aa968467e4465aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::crc32</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>crc32</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Accumulate crc32 value (polynomial 0x11EDC6F41) (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="750" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="750" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60d72a484631faf737594d606a129922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::crc32</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>crc32</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="752" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="752" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a4f3b80edde834d618caa61284fabfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dec</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>dec</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Decrement by 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="755" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="755" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40f0bc1162ce30dcc1847ee79fada5f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dec</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>dec</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="757" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="757" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b103414ab939ddd8e60c955d4956440" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::div</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>div</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Unsigned divide (xDX:xAX &lt;- xDX:xAX / o0). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="760" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="760" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36e6f25f420b006079c68f80ebc118bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::div</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>div</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="762" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="762" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeed513e1dc8ab8bd5238e09cf7c49519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::enter</definition>
        <argsstring>(const Imm &amp;o0, const Imm &amp;o1)</argsstring>
        <name>enter</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Make stack frame for procedure parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="765" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="765" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a66d8cbde58404e3ec4c8b56edb236c60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::idiv</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>idiv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Signed divide (xDX:xAX &lt;- xDX:xAX / op). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="768" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="768" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb6ed518a3802794e403a308e1b5d794" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::idiv</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>idiv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="770" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="770" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a773d403234b30324816b4e741d1dc643" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Signed multiply (xDX:xAX &lt;- xAX * o0). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="773" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="773" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0553a37108f8e2815f94ac1ca6179635" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="775" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="775" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5786ac5bf965455193f7c1b3b6cd5286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Signed multiply. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="778" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="778" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69e698e27aa9bcf26ee99847ac9ed288" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="780" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="780" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a726b902661c9e322a5cfcba5873f071a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="782" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="782" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b9d6a876c85e2dea0afeaee554495a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="782" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="782" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc4a3f0a5e849b0d0fff2e676745b7d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Signed multiply. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="785" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="785" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0feeb189c7d43f043678108d330c60d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="785" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="785" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad483ce1e554362986db6c566417a830d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="787" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="787" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1accd0f24512ee30fbc58aaa1f99fbb06f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::imul</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>imul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="787" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="787" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcafdf4783d90f84ca36b478c1c384df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::inc</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>inc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Increment by 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="790" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="790" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23d85c0accdad2d6bc511784c6cd2f10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::inc</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>inc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="792" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="792" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a6f8c89def17cb4f1f412d2be48c3e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::int_</definition>
        <argsstring>(const Imm &amp;o0)</argsstring>
        <name>int_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Interrupt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="795" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="795" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a78034e98e978106954cd6c8078be6ccf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::int_</definition>
        <argsstring>(int o0)</argsstring>
        <name>int_</name>
        <param>
          <type>int</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="795" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="795" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfa98159b7a7ca19320dd1ed71c9045d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::int3</definition>
        <argsstring>()</argsstring>
        <name>int3</name>
        <briefdescription>
<para>Interrupt 3 - trap to debugger. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="797" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="797" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8bcda3b9efc7f942fd66b78075edc54d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::j</definition>
        <argsstring>(uint32_t cc, const Label &amp;o0)</argsstring>
        <name>j</name>
        <param>
          <type>uint32_t</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Jump to label <emphasis>label</emphasis> if condition <emphasis>cc</emphasis> is met. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75fe70d760e26a35b4cbbde1b60980d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ja</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>ja</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46426a9dba7edc20095143edb4eaf434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jae</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea8cda9a7be47ca71af31fafbf6f9186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jb</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a183030fe37aa4ed364ad741d51621b39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jbe</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d8282d7bfa366af6e93e01de7556f33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jc</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1addc2640351df2accf5d98495d7afe3c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::je</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>je</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5cca12f64c7c4a257c4a504c04c2f506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jg</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2cda00b224e0d8ea42e8c817a896044" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jge</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9f5def9f4d8c76c0340aeb394153f5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jl</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b5294477c7f62a2dcec1d014006494" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jle</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93c098e7870279fe9d9478d51a04278c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jna</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jna</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a464a55b3286d487cdd56f73dcb7d676d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnae</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34842048603583b2f4628b58f6e99f5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnb</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acaffbc2efe83a20623621ecae5972740" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnbe</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc53bce0a4ea5a26cb841727b8ceca09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnc</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86ac4ec2370a7d9bbe6e1b3036c59bbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jne</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jne</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6467fd2497cf34665b6ce1dcf383b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jng</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jng</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab981fae3726e36bb847713db7ba22045" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnge</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30d4049aceee496a2bdbbe6c22e65f58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnl</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a699a3dcbfd5eb5c8b7fad3de026275fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnle</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e2a27d219ea4fe75f6f2289e4d1828d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jno</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jno</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c06409342954e325165064acc798e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnp</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94ebfa65550d57e32a863c5919348945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jns</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jns</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2865f33826aef19e65ce571a3496178" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jnz</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jnz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e0ea6255cedad9574d67c6ad3ffe0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jo</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab86bc453f3d22b35bc73336fc3f2546e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jp</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a638b59ddd84f4b7a9542ca7a86231e17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jpe</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jpe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8379451f08e2dda69aba88f50887b9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jpo</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jpo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d6035cb4bfdb110b6f290c42d28bda9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::js</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>js</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabaa6e87594b40254342b2a045ee4839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jz</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="800" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a679c333a1db76a27d01750db323e08c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jmp</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>jmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Jump. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="803" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="803" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a1dca6f50fa5c46a9a9021e24ac23dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jmp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>jmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="805" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="805" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3acda7b1fe809841783a45125c9ef0e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jmp</definition>
        <argsstring>(const Label &amp;o0)</argsstring>
        <name>jmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="807" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="807" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b16f297b7a23165cedbee329e925ec7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jmp</definition>
        <argsstring>(const Imm &amp;o0)</argsstring>
        <name>jmp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="809" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="809" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08e8fbb1ae7ba1cdb7081a93b766b721" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::jmp</definition>
        <argsstring>(void *dst)</argsstring>
        <name>jmp</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="811" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="811" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a209547ed81c2d3022ba6949a2bbc433d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::lahf</definition>
        <argsstring>()</argsstring>
        <name>lahf</name>
        <briefdescription>
<para>Load AH from flags. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="814" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="814" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacb33a55c07a087aff6f228ed065258e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::lea</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>lea</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Load effective address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="817" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="817" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac63f50d62bb05660721ad5b3fe117791" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::leave</definition>
        <argsstring>()</argsstring>
        <name>leave</name>
        <briefdescription>
<para>High level procedure exit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="820" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="820" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac65612674f48c7708fdac79c4b5f436a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="823" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="823" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b84f3e3792e897309082af29cb8ceac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="825" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="825" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2bb8dc3c05648652ae3f4fe888438ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="827" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="827" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33e8b4b614e6e127585c06bda144b578" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="827" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="827" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b1daeca44ec515c44b9f6e607ac1677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="829" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="829" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a296314439a02c6eec281cf4bb73be854" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="831" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="831" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a119cb05b5663bdbcedd0029c646e007f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="831" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="831" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac866bbbd762c4826542ea2da105e9999" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const GpReg &amp;o0, const SegReg &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1SegReg" kindref="compound">SegReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move from segment register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="834" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="834" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf5341332e825cfe0b1652d2043dbee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const Mem &amp;o0, const SegReg &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1SegReg" kindref="compound">SegReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="836" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="836" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e9569b4444951415032da1ecc813ff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const SegReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1SegReg" kindref="compound">SegReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move to segment register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="838" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="838" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f40e60bbbd688026d53afd1eaf4871a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov</definition>
        <argsstring>(const SegReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>mov</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1SegReg" kindref="compound">SegReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="840" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="840" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56217e58a951d3cb74f80756e6b0cd06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov_ptr</definition>
        <argsstring>(const GpReg &amp;dst, void *src)</argsstring>
        <name>mov_ptr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Move (AL|AX|EAX|RAX &lt;- absolute address in immediate). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="843" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="843" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad639320b46f8172702a3ed1c9079a402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mov_ptr</definition>
        <argsstring>(void *dst, const GpReg &amp;src)</argsstring>
        <name>mov_ptr</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Move (absolute address in immediate &lt;- AL|AX|EAX|RAX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="851" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="851" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca9bdfb4f7c271c474cf40e1fcba6ec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movbe</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move data after dwapping bytes (SSE3 - Atom). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="859" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="859" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaadf7773074aa74ec769fe96107d7e8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movbe</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>movbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="861" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="861" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7456d0f3691a8c5360e57bc2c77f8b0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>movsx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move with sign-extension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="864" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="864" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38e13eef2c3b8981eb59172a17a2005d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movsx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="866" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="866" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1328dd2fdae2c765ae899674f29daefd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movzx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>movzx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move with zero-extension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="869" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="869" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af829d4912646885ad2d03d4eaccb240d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movzx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movzx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="871" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="871" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60259d8ef4b0bb4b17d3e98362c57f06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mul</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Unsigned multiply (xDX:xAX &lt;- xAX * o0). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="874" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="874" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5302e42b7c1d7f54c3f224889a86e141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mul</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="876" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="876" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfe381dce41a9439aca7a034573636ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::neg</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>neg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Two&apos;s complement negation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="879" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="879" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd7e480ee74bf3f98d25fa7dd8b9581b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::neg</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>neg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="881" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="881" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47f8a553fc5f4840b85418e91ebf89c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::nop</definition>
        <argsstring>()</argsstring>
        <name>nop</name>
        <briefdescription>
<para>No operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="884" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="884" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7798ce53180bedd43da933cf857f139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::not_</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>not_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>One&apos;s complement negation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="887" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="887" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73cbdc2ce4827a177718fae6ec016c2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::not_</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>not_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="889" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="889" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a012b22121616f658f25af1a7bcd1b52f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Or. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="892" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="892" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1b775e8e08580467f1aea2ea3e1706b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="894" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="894" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca40799a27099ca1e939dbcbacd9f3bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="896" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="896" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a272751be7b35f51669f38e480a4e3797" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="896" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="896" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a607e45011d2542f9cedf6015dbe73722" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="898" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="898" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5908964cd7ed4392fd406ea64f58cff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="900" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="900" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afca273e71cdfbb510c0b8c12086d54e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::or_</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>or_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="900" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="900" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a739d705cd9917fd0a50140ac0b05893b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pop</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>pop</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Pop a value from the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="903" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="903" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e65442d7a0d67defa6f31245a838383" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pop</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>pop</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="905" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="905" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c0cfa4b21e43352ddedb24f725a64fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pop</definition>
        <argsstring>(const SegReg &amp;o0)</argsstring>
        <name>pop</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1SegReg" kindref="compound">SegReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Pop a segment register from the stack. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>There is no instruction to pop a cs segment register. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="910" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="910" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82da8b3f86564a77f4195227f070ab2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::popf</definition>
        <argsstring>()</argsstring>
        <name>popf</name>
        <briefdescription>
<para>Pop stack into EFLAGS register (32-bit or 64-bit). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="913" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="913" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65fa96a4c1b614cce89eab7505af8a9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::popcnt</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>popcnt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Return the count of number of bits set to 1 (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="916" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="916" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00eaac477eb482b1e55e4c00bb01e1a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::popcnt</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>popcnt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="918" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="918" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a128a78f4e29313580e6c727d420d2946" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::push</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>push</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Push word/dword/qword on the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="921" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="921" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9774b1f116c234b0857b60f3a5e7643" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::push</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>push</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Push word/dword/qword on the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="923" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="923" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afeb94572447f52773db71cf51ef21f85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::push</definition>
        <argsstring>(const SegReg &amp;o0)</argsstring>
        <name>push</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1SegReg" kindref="compound">SegReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Push segment register on the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="925" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="925" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3577b057387f08b7ec71444034f2f217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::push</definition>
        <argsstring>(const Imm &amp;o0)</argsstring>
        <name>push</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Push word/dword/qword on the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="927" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="927" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb47f11f372f50e7437c872bbbf7726f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::push</definition>
        <argsstring>(int o0)</argsstring>
        <name>push</name>
        <param>
          <type>int</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="927" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="927" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeaa8376163f5d21d7031af67a207b2d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pushf</definition>
        <argsstring>()</argsstring>
        <name>pushf</name>
        <briefdescription>
<para>Push EFLAGS register (32-bit or 64-bit) on the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="930" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="930" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fd4011d019b35fbca7047f048211586" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcl</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>rcl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits left. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="935" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="935" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a641d9acfeae3d0c117b1742ec210352c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcl</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>rcl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="937" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="937" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f8ead574f4c13a05c6f234b24c09508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcl</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>rcl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="939" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="939" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5f29024e14e03232631fbae28a439fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcl</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>rcl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="939" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="939" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a269edf51cfae07af52b48df0e7cc129a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcl</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>rcl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="941" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="941" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a1380a8c48ba2a522b39068affc300c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcl</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>rcl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="941" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="941" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafec59d5dde65388109357dc31629203" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcr</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>rcr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits right. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="946" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="946" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a861341a87e266b8ea7d7b6932300d882" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcr</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>rcr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="948" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="948" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a975205c7b64e5f6f75131567e2eed3fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcr</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>rcr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="950" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="950" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19e3cd60ecd275ec92a5ce44ae289420" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcr</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>rcr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="950" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="950" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac0f176bb4f9697d181d65ce6a325657" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcr</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>rcr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="952" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="952" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3449cbd72569f2cc3139763729a10c5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcr</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>rcr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="952" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="952" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bcd218d9e3f85bd651aa0fde62111b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rdtsc</definition>
        <argsstring>()</argsstring>
        <name>rdtsc</name>
        <briefdescription>
<para>Read time-stamp counter (Pentium). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="955" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="955" bodyend="955"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01570ca32fa10e6742dc027d114787b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rdtscp</definition>
        <argsstring>()</argsstring>
        <name>rdtscp</name>
        <briefdescription>
<para>Read time-stamp counter and processor id (Pentium). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="957" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="957" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a813f374dcebaf99bd88128637dc2f24c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_lodsb</definition>
        <argsstring>()</argsstring>
        <name>rep_lodsb</name>
        <briefdescription>
<para>Load ECX/RCX bytes from DS:[ESI/RSI] to AL. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="960" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="960" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7f56299d2be1236307901f5253efa51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_lodsd</definition>
        <argsstring>()</argsstring>
        <name>rep_lodsd</name>
        <briefdescription>
<para>Load ECX/RCX dwords from DS:[ESI/RSI] to EAX. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="962" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="962" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56150da369090b27a10af53162ecc002" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_lodsw</definition>
        <argsstring>()</argsstring>
        <name>rep_lodsw</name>
        <briefdescription>
<para>Load ECX/RCX Words from DS:[ESI/RSI] to AX. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="964" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="964" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdf4c8362786adf1b66abd325250d764" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_movsb</definition>
        <argsstring>()</argsstring>
        <name>rep_movsb</name>
        <briefdescription>
<para>Move ECX/RCX bytes from DS:[ESI/RSI] to ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="967" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="967" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f6d12cf30fc8b41c047ef4496ba9457" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_movsd</definition>
        <argsstring>()</argsstring>
        <name>rep_movsd</name>
        <briefdescription>
<para>Move ECX/RCX dwords from DS:[ESI/RSI] to ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="969" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="969" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6e2f87fc9c5fb772d5051cabbc09269" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_movsw</definition>
        <argsstring>()</argsstring>
        <name>rep_movsw</name>
        <briefdescription>
<para>Move ECX/RCX words from DS:[ESI/RSI] to ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="971" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="971" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9471851f26a731b9a0a70f3cf50b9ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_stosb</definition>
        <argsstring>()</argsstring>
        <name>rep_stosb</name>
        <briefdescription>
<para>Fill ECX/RCX bytes at ES:[EDI/RDI] with AL. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="974" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="974" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e7bea0f4db79b70cdcf396d1bf600be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_stosd</definition>
        <argsstring>()</argsstring>
        <name>rep_stosd</name>
        <briefdescription>
<para>Fill ECX/RCX dwords at ES:[EDI/RDI] with EAX. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="976" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="976" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03f8de12f4cac87c6c07aef836193830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rep_stosw</definition>
        <argsstring>()</argsstring>
        <name>rep_stosw</name>
        <briefdescription>
<para>Fill ECX/RCX words at ES:[EDI/RDI] with AX. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="978" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="978" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac45296ac53772fa2df30889d2a582b4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repe_cmpsb</definition>
        <argsstring>()</argsstring>
        <name>repe_cmpsb</name>
        <briefdescription>
<para>Repeated find nonmatching bytes in ES:[EDI/RDI] and DS:[ESI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="981" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="981" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6ea05290bca0b3deeb957e40cb869cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repe_cmpsd</definition>
        <argsstring>()</argsstring>
        <name>repe_cmpsd</name>
        <briefdescription>
<para>Repeated find nonmatching dwords in ES:[EDI/RDI] and DS:[ESI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="983" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="983" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2f469a24c4024f4c28a83184d843bfba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repe_cmpsw</definition>
        <argsstring>()</argsstring>
        <name>repe_cmpsw</name>
        <briefdescription>
<para>Repeated find nonmatching words in ES:[EDI/RDI] and DS:[ESI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="985" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="985" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2f68732f1e09ec7cb1c17a337d7658ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repe_scasb</definition>
        <argsstring>()</argsstring>
        <name>repe_scasb</name>
        <briefdescription>
<para>Find non-AL byte starting at ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="988" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="988" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3510e55661f7a2db258a4f968e463c10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repe_scasd</definition>
        <argsstring>()</argsstring>
        <name>repe_scasd</name>
        <briefdescription>
<para>Find non-EAX dword starting at ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="990" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="990" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0f0c557b2976e87e47d064f34343c23a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repe_scasw</definition>
        <argsstring>()</argsstring>
        <name>repe_scasw</name>
        <briefdescription>
<para>Find non-AX word starting at ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="992" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="992" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7faae42f969839e100edccdba98aa46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repne_cmpsb</definition>
        <argsstring>()</argsstring>
        <name>repne_cmpsb</name>
        <briefdescription>
<para>Repeated find nonmatching bytes in ES:[EDI/RDI] and DS:[ESI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="995" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="995" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01d274347fd08664c3b967517fe4f5bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repne_cmpsd</definition>
        <argsstring>()</argsstring>
        <name>repne_cmpsd</name>
        <briefdescription>
<para>Repeated find nonmatching dwords in ES:[EDI/RDI] and DS:[ESI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="997" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="997" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad643126d9c1279e3406db49822a47020" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repne_cmpsw</definition>
        <argsstring>()</argsstring>
        <name>repne_cmpsw</name>
        <briefdescription>
<para>Repeated find nonmatching words in ES:[EDI/RDI] and DS:[ESI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="999" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="999" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1affb0f23f696c9388aa6cee8d3db24652" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repne_scasb</definition>
        <argsstring>()</argsstring>
        <name>repne_scasb</name>
        <briefdescription>
<para>Find AL, starting at ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1002" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1002" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba93950d9c77109b588f956c7ab0f123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repne_scasd</definition>
        <argsstring>()</argsstring>
        <name>repne_scasd</name>
        <briefdescription>
<para>Find EAX, starting at ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1004" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1004" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab54cbac88c9cd2885fbd102fe58c90a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::repne_scasw</definition>
        <argsstring>()</argsstring>
        <name>repne_scasw</name>
        <briefdescription>
<para>Find AX, starting at ES:[EDI/RDI]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1006" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1006" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa785d84603b3a06841eded0a7826b2cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ret</definition>
        <argsstring>()</argsstring>
        <name>ret</name>
        <briefdescription>
<para>Return. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1009" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1009" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9201a8c2b33b4dcb6498b48afa4958ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ret</definition>
        <argsstring>(const Imm &amp;o0)</argsstring>
        <name>ret</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1011" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1011" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a587f692a56c42832d42c8ff89700edd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ret</definition>
        <argsstring>(int o0)</argsstring>
        <name>ret</name>
        <param>
          <type>int</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1011" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1011" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96582e738a3b3f842066f5cc396e89f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rol</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>rol</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits left. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1016" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1016" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8b6ff8e881c25d785a37d79efe487df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rol</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>rol</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1018" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1018" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a180cf4bd0d7b8ea57698d7c3fcb37998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rol</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>rol</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1020" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1020" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9eee1b0da47b7bfbfeb1eae16a751376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rol</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>rol</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1020" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1020" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1b9fc89fc2d2e0ececc771b0009d2e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rol</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>rol</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1022" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1022" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa68111e93771eac5720073e88bd4e388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rol</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>rol</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1022" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1022" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d330b4c163d961c0bd0af8b7d0dcab5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ror</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>ror</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits right. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1027" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1027" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01f843b0643e4cad9921d3afed55e7f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ror</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>ror</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1029" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1029" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4789ea48c295a889d2850a1532d0ce34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ror</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>ror</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Rotate bits right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1031" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1031" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac7a1098e4ff89b9e70231a0c9e347c1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ror</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>ror</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1031" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1031" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93c327a037591993a4fcc621e9208645" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ror</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>ror</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1033" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1033" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0156f7e12f05f2fcd212bbce81f014b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ror</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>ror</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1033" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1033" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0bf528c5aff4b0efb3294e3d4451728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sahf</definition>
        <argsstring>()</argsstring>
        <name>sahf</name>
        <briefdescription>
<para>Store AH into flags. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1036" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1036" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36733f68538df32814bc1240841aa238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Integer subtraction with borrow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1039" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1039" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a374a8ab528200f3f0f207f78dc6da6ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1041" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1041" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe8c04fa10075150a62d5de1a95bdd38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1043" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1043" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5396a6dcabb90ec97707ff8845c021ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1043" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1043" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdbffb9b2301760fb3ff8208a9d8235d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1045" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1045" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8a89a48de2e3cb60db671ac28a6f949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1047" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1047" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a422da96d778758ec4b6c222956562140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sbb</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>sbb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1047" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1047" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1ca0222b0b9b5b90b9908692d265d904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sal</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sal</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits left. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1052" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1052" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5cbb03aa2f48de75c482962fd3ebe376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sal</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sal</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1054" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1054" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af214fae96267726036ea8c9df1fdaf39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sal</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sal</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1056" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1056" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a01a6ad07a9865592649ae5900f8f6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sal</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>sal</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1056" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1056" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08d0da8f72c004ce3636605c7583c213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sal</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sal</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1058" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1058" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4eb448951ccf353feb8ddc620d769b3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sal</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>sal</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1058" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1058" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19bdf11acb846ded2b1337ed98c3308b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sar</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sar</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits right. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1063" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1063" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad67d83a75af5b7ae4d6fdabb1b6f5370" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sar</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sar</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1065" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1065" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67fe1e41fceb050b25a7a5ade03fed1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sar</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sar</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1067" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1067" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad34a9357bdc8d445c7b5c38b17a4697b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sar</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>sar</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1067" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1067" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13cfbcb1a049480ce0208aa68203ed4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sar</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sar</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1069" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1069" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2404cf786656478671618586f181f921" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sar</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>sar</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1069" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1069" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab263c44d72267fa0080837dd54b3c761" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::set</definition>
        <argsstring>(uint32_t cc, const GpReg &amp;o0)</argsstring>
        <name>set</name>
        <param>
          <type>uint32_t</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Set byte on condition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeac52490117d9e58957ad8ac23975952" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::seta</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>seta</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a561d1ec9b3332ecf57656fab01630b41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setae</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b9b740752dcb1bce2bf02ecf873b925" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setb</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a045fe0099ee0847cc0c82b09618adff7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setbe</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f2d8d8a1ccf8107cc378e6734165727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setc</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d466a06a489997cc687147d9068ed10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sete</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>sete</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6273e1adf6c193b9106c31b4a033abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setg</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46e0196332cf7d81d818ff1e47774b51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setge</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d8e840cf89e5f3b7d64cf14d431128b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setl</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abdf25142c5c98d8a27a8e91a0ca0a90e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setle</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c675195c665584da828c713b453d0a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setna</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setna</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8fffb702ac5ba494c44fbdeef37e9bc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnae</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8ba364100ed13df05c6b16124ea7fe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnb</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a538643935678d720eba12ff5c3c9c70e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnbe</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe6be687e598d64697426a3b8d79e0e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnc</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8fd544114b0d44b734c7bac7529f32f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setne</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setne</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6aa0448ff5a92162b21a817d78031baa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setng</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setng</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e8d63a29e355eedcfff008376fcc2c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnge</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e7e8934930d2158a8f7d491c5dda59f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnl</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae69d400ce7e89af52ceeba55a149d2ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnle</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c3f6764b30755355420a5cbad1956b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setno</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setno</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3ff410ed29488fe622d7f0258585abc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnp</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9bc91b7a24aa2cd2c40af047c1e3adb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setns</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setns</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa08a2181553ce721766b35cec852d9c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnz</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setnz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a16c31c2d9e85979e3877086edf20afb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::seto</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>seto</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48c3efac9ee6f5e1d18fd2c5249f48e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setp</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae38de9ab882139672f00f1a89a2cf735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setpe</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setpe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4401a3f2e85d7110384aea5b364ab64e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setpo</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setpo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ecc4302219fc1519fe965778496bb4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sets</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>sets</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaeab1b8a7c652655c46a4eb261774871" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setz</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>setz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1072" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f4ebb4a06e56cd0487a8857f578b17a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::set</definition>
        <argsstring>(uint32_t cc, const Mem &amp;o0)</argsstring>
        <name>set</name>
        <param>
          <type>uint32_t</type>
          <declname>cc</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Set byte on condition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19ce488699f9ec84b132df4251df60de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::seta</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>seta</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3311bd85e83987ae038b8bc41597de3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setae</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9584beda3c64ef056a5ce3d0b870a00e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setb</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99af1034a6829e159343e61e1b3601a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setbe</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94a21a51dc5c0659f839f1ebaf26a3e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setc</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e68d587ac982ff9712d8abbba51e613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sete</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>sete</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae78d128b35979ca7cc0cbf6759924b62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setg</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b3c742c2389994479870630f12273bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setge</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a244c64e19f3bbe3816f26b6d0e339d15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setl</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ad7b643b1385d0be909fc56e46cc8d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setle</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afcd75025f39f8033f60c042e24b6ee55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setna</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setna</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbf24a7b94ff099feb8aac986e3ecd06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnae</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnae</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a1743cefcffa303862e249ec8329a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnb</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af51d50c386fa34d8b022524b80c33056" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnbe</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129591175ae49eebd71e9b6439b580ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnc</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f9683c8e553828a644d52aaea0dbd1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setne</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setne</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82572fa2c72a26d2a497cc3ae0a41ee3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setng</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setng</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad077cfa0be5421646efe6c6838d91054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnge</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae19c5c079af63b439f0fb36b1cc0ed3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnl</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab86a387f7779d36868a3adbdd8319451" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnle</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnle</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa09ba996e4f1d58c2a34ce27fd2dda70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setno</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setno</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0df8df97cf1157e8823c2402f12be4e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2116b512a39874492636ff107bcd774" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setns</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setns</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4f311f9a4c137bd70b621ee5aa0a6fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setnz</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setnz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1da210bc4b1e16aed47519d2149f1322" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::seto</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>seto</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2513b02b9d0d1b73db2012820b1629d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a009496981c68be204fae66bd8bd2b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setpe</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setpe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4dbffc872afc5728296c41e05304866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setpo</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setpo</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4049b7b736c46225dd45fadefd826e47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sets</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>sets</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab92feb10b1c12147e2d726a48b10d724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::setz</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>setz</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1074" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a625cbf9a77b2506b0fb0d1bec7f499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shl</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>shl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits left. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1079" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1079" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adae3ffb51af172a697caf277a78ea8f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shl</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>shl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1081" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1081" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dafb2afece7af354470a1b926f011bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shl</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>shl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1083" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1083" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a6628121bcba2010ebe287b3e706da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shl</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>shl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1083" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1083" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a848be1399fce2abc63e2240ca3c654b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shl</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>shl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1085" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1085" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b4e6d550b7f5b6246355d8a3b3b723f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shl</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>shl</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1085" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1085" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41bf786351f7b6caa71d3c972a34ef4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shr</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>shr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits right. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o1</emphasis> register can be only <computeroutput>cl</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1090" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1090" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91a09009338435d4b8d0dee90a511ae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shr</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>shr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1092" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1092" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03d3b29bd7457fedb758157f606b688c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shr</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>shr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Shift bits right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1094" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1094" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af26b0edf9ba9fa6f12a61e40bcb90621" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shr</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>shr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1094" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1094" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8e44c03865f3d6387f5832c223f6c6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shr</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>shr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1096" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1096" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0dcbb696d12e130d81e51320bfc1a7a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shr</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>shr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1096" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1096" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7773fd4212c470b6c3267724e2cba761" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shld</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Double precision shift left. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o2</emphasis> register can be only <computeroutput>cl</computeroutput> register. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1101" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1101" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf4f0b22a615e69658c39a90f597ae2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shld</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1103" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1103" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad573afa732ceb01aecec01919a5f7c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shld</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Double precision shift left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1105" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1105" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4cd7108a9e31db7059cb41d7dace86c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shld</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>shld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1105" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1105" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62b47e3edae80cc9ff5b1ce638c3dbdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shld</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1107" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1107" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c4c8a8c66fb1cb2617b4fe3d7d19cae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shld</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>shld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1107" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1107" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73fdeb741a3da855f8d7dd126f8d0fd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrd</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Double precision shift right. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para><emphasis>o2</emphasis> register can be only <computeroutput>cl</computeroutput> register. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1112" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1112" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ed51697df9a30d7a143127e11161287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrd</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1114" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1114" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98dc718b2bd3e55e6fba153c76f0c88f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrd</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Double precision shift right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1116" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1116" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae1938808144ed5a01e93d4389ff59f7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrd</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>shrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1116" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1116" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a50a542de4d645479871427a8bc851a43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrd</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1118" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1118" bodyend="1118"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36751efef1e5cd5b204aa35fbf3d221f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrd</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>shrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1118" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1118" bodyend="1118"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec22c0778679f007780d41b3207c0927" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::stc</definition>
        <argsstring>()</argsstring>
        <name>stc</name>
        <briefdescription>
<para>Set carry flag to 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1121" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1121" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48beac4397c1fd86ff9d2c73e8866e37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::std</definition>
        <argsstring>()</argsstring>
        <name>std</name>
        <briefdescription>
<para>Set direction flag to 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1123" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1123" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a117a908a51de30b9cca7f7c6c506bb02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Subtract. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1126" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1126" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24e46bb6c8bfac7f258ad876f2221316" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1128" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1128" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ba487e0d16ec482693a66179d88d9dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1130" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1130" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a4018e1b64f80e9b57a0ef4f49a2a3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1130" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1130" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99f1223892df9dc196108659b00c35d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1132" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1132" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a947303284b6a8d7c962c72fdf2f64915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1134" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1134" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3f08e387a60389bec1878a939d66e34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sub</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1134" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1134" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7699830820a10662ca2485188173181e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::test</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>test</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Logical compare. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1137" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1137" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac1f58c4a9132e07c9feae142eaa83a1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::test</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>test</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1139" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1139" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6d444c7b331e561e7cc2e4f9290421c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::test</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>test</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1139" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1139" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae678d7eaeebc731740f3b7be7b36369e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::test</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>test</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1141" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1141" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9baec239f4c20af3ab32a46fab4fcd1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::test</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>test</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1143" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1143" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9852af92e4804322e0ad7ddd7286ed22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::test</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>test</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1143" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1143" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5043f0d900ff3dcfa5da023f055c649d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ud2</definition>
        <argsstring>()</argsstring>
        <name>ud2</name>
        <briefdescription>
<para>Undefined instruction - Raise #UD exception. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1146" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1146" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3dd940f3f305da92d530e5d8153a2d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xadd</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>xadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Exchange and Add. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1149" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1149" bodyend="1149"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1d96a4015f429092ffc68ac2f447713" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xadd</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>xadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1151" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1151" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2f153cf8070f4d6b0aa9a9530ed3af6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xchg</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>xchg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Exchange register/memory with register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1154" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1154" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5867d1c285b63b8935d6b2ab3ff66b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xchg</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>xchg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1156" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1156" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfb6f19167588dba6a81df452df43850" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xchg</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>xchg</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1158" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1158" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25a297390d340c7fac57eebb6a6c3907" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Xor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1161" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1161" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e0e7c584329fe087105c7bf96c874f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1163" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1163" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8463c99ae18d5ea368bcf901b237813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const GpReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1165" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1165" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab52151557c60f162f9882edcd807f3e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const GpReg &amp;o0, int o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1165" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1165" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad55725f89f1d40d55bc4edecc34d5d62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1167" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1167" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af13f24f82178915218ae7697f5778f32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1169" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1169" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36a3479cfec127f43228af40ba9d1508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xor_</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>xor_</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1169" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1169" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f7fc1d4c4e5603bad7bd50b885aaf6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::f2xm1</definition>
        <argsstring>()</argsstring>
        <name>f2xm1</name>
        <briefdescription>
<para>Compute 2^x - 1 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1176" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1176" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad02f5263a01bcf0605293e46e8ad3130" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fabs</definition>
        <argsstring>()</argsstring>
        <name>fabs</name>
        <briefdescription>
<para>Absolute value of fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1179" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1179" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa00e12bc7877ae59f313f0d270ef008" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fadd</definition>
        <argsstring>(const FpReg &amp;o0, const FpReg &amp;o1)</argsstring>
        <name>fadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Add <emphasis>o1</emphasis> to <emphasis>o0</emphasis> and store result in <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>One of dst or src must be fp0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1184" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1184" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a782bcd9c1f48c9b6e4c5ad2e225a39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fadd</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Add 4-byte or 8-byte FP <emphasis>o0</emphasis> to fp0 and store result in fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1186" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1186" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98435cae3365a20a4a6bc77ebe47e074" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::faddp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>faddp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Add fp0 to <emphasis>o0</emphasis> and POP register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1188" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1188" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a332e05884bd83e037cc01dbce591b975" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::faddp</definition>
        <argsstring>()</argsstring>
        <name>faddp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1190" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1190" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad45a4aeda5c59a30103085780bdf8821" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fbld</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fbld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Load binary coded decimal (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1193" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1193" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a15c93ea471ef906d3590184d52d7e8e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fbstp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fbstp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store BCD integer and Pop (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1195" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1195" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c3ef97898e0b33af29dc150a0076d92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fchs</definition>
        <argsstring>()</argsstring>
        <name>fchs</name>
        <briefdescription>
<para>Change fp0 sign (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1197" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1197" bodyend="1197"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c578819e1ca9f99895ea9f448196a2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fclex</definition>
        <argsstring>()</argsstring>
        <name>fclex</name>
        <briefdescription>
<para>Clear exceptions (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1200" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1200" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace6bac9107b09c09343e4c8fc7de2c8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovb</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1203" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1203" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a619e16b969a37fa4cfc144dd9570e4f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovbe</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1205" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1205" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeab1eeacbfb6f5c791b132b07786402c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmove</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmove</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1207" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1207" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab17ecfc82d1a114c72ccab431f32c01c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovnb</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovnb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1209" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1209" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bd7d38d69a5182b49be692d07deb747" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovnbe</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovnbe</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1211" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1211" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af78135b6bc68664a20fde3a3e638b942" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovne</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovne</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1213" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1213" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2555b1028863f2e95afe76fe609f846f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovnu</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovnu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1215" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1215" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a817a07cfb7d1632d1d716fd2f8540b54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcmovu</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcmovu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>FP Conditional move (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1217" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1217" bodyend="1217"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11ae9fdb6991834ae87cf4becd199804" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcom</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcom</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 with <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1220" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1220" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85ba9551aa1a070fe939e4b2fcf85477" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcom</definition>
        <argsstring>()</argsstring>
        <name>fcom</name>
        <briefdescription>
<para>Compare fp0 with fp1 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1222" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1222" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a450fe3918fdf151d3ed6d5f2e23eefe3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcom</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fcom</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 with 4-byte or 8-byte FP at <emphasis>src</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1224" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1224" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5673368bd48679fc3596b2a5599731fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcomp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcomp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 with <emphasis>o0</emphasis> and pop the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1226" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1226" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ea26dc4e91fb4f7aba33873d0a0d61d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcomp</definition>
        <argsstring>()</argsstring>
        <name>fcomp</name>
        <briefdescription>
<para>Compare fp0 with fp1 and pop the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1228" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1228" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10b5a114fe43ba523be2aa177c6c7abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcomp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fcomp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 with 4-byte or 8-byte FP at <emphasis>adr</emphasis> and pop the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1230" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1230" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01814c982a9d9656df6e732b77425bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcompp</definition>
        <argsstring>()</argsstring>
        <name>fcompp</name>
        <briefdescription>
<para>Compare fp0 with fp1 and pop register stack twice (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1232" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1232" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad68b10d2998821e121acf0456bbfc16c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcomi</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcomi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 and <emphasis>o0</emphasis> and Set EFLAGS (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1234" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1234" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e19243ca4825953673705baa068ce20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcomip</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fcomip</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 and <emphasis>o0</emphasis> and Set EFLAGS and pop the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1236" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1236" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a159699ee299ff9353ac2d68b351f85ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fcos</definition>
        <argsstring>()</argsstring>
        <name>fcos</name>
        <briefdescription>
<para>Calculate cosine of fp0 and store result in fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1239" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1239" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a107af790357ea7f634b1bc1c68571c74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdecstp</definition>
        <argsstring>()</argsstring>
        <name>fdecstp</name>
        <briefdescription>
<para>Decrement stack-top pointer (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1242" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1242" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a880bf7df28c43fa85d8be64d1cfe37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdiv</definition>
        <argsstring>(const FpReg &amp;o0, const FpReg &amp;o1)</argsstring>
        <name>fdiv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Divide <emphasis>o0</emphasis> by <emphasis>o1</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>One of <emphasis>o0</emphasis> or <emphasis>o1</emphasis> register must be fp0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1247" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1247" bodyend="1247"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3dea5ec3ac611f54b765a7fb16e76db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdiv</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fdiv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Divide fp0 by 32-bit or 64-bit FP value (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1249" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1249" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5ee38bb6bc0cb6d3a9cd19b68b15e74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdivp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fdivp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Divide <emphasis>o0</emphasis> by fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1251" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1251" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38ea53e8fde240aa95ec3f012b505b0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdivp</definition>
        <argsstring>()</argsstring>
        <name>fdivp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1253" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1253" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0d104e8222b75d79d56ae34e466f229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdivr</definition>
        <argsstring>(const FpReg &amp;o0, const FpReg &amp;o1)</argsstring>
        <name>fdivr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Reverse divide <emphasis>o0</emphasis> by <emphasis>o1</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>One of <emphasis>o0</emphasis> or <emphasis>src</emphasis> register must be fp0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1258" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1258" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3337604f4af377ca95fc2f5340549ace" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdivr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fdivr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Reverse divide fp0 by 32-bit or 64-bit FP value (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1260" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1260" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad98c21804253e29bdab18a976ddb58f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdivrp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fdivrp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Reverse divide <emphasis>o0</emphasis> by fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1262" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1262" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94c61045c2c98fc9e4dab8dd8158c394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fdivrp</definition>
        <argsstring>()</argsstring>
        <name>fdivrp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1264" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1264" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2dd9ad45b02f4220f9ca772de38118ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ffree</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>ffree</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Free FP register (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Sets the tag in the FPU tag register associated with register <emphasis>o0</emphasis> to empty (11B). The contents of <emphasis>o0</emphasis> and the FPU stack-top pointer (TOP) are not affected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1271" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1271" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abab5588d0f3d6e1d7b94ac76ff4c5f58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fiadd</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fiadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Add 16-bit or 32-bit integer to fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1274" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1274" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac3d921e0b7175e82bf21bbbd5b7732b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ficom</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>ficom</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 with 16-bit or 32-bit Integer (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1277" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1277" bodyend="1277"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbd5fb8a56fa5acd3fb39d6005cfd976" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ficomp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>ficomp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Compare fp0 with 16-bit or 32-bit Integer and pop the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1279" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1279" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04d3c548635c17d2985cb3f0cd658d6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fidiv</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fidiv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Divide fp0 by 32-bit or 16-bit integer (<emphasis>src</emphasis>) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1282" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1282" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7bed3fefd7cebd3521efb223cb3713b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fidivr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fidivr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Reverse divide fp0 by 32-bit or 16-bit integer (<emphasis>src</emphasis>) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1284" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1284" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a637e343d70a2b979f4534a82fc0fa036" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fild</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fild</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Load 16-bit, 32-bit or 64-bit Integer and push it to the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1287" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1287" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed56f8ec52b6e96d37bd31ec7c20f753" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fimul</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fimul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Multiply fp0 by 16-bit or 32-bit integer and store it to fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1290" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1290" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef6ccb3d7c7e575ae6c880aaa51c11d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fincstp</definition>
        <argsstring>()</argsstring>
        <name>fincstp</name>
        <briefdescription>
<para>Increment stack-top pointer (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1293" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1293" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa55730caa3983d6737c57a1652649ba2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::finit</definition>
        <argsstring>()</argsstring>
        <name>finit</name>
        <briefdescription>
<para>Initialize FPU (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1296" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1296" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b227ecfc1dd6b7a693e336e6576b8fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fisub</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fisub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Subtract 16-bit or 32-bit integer from fp0 and store result to fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1299" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1299" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68e3e21da6fde8663fa6af7aa4e64fce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fisubr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fisubr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Reverse subtract 16-bit or 32-bit integer from fp0 and store result to fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1301" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1301" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a744b993bc0836612038227b72dcf92bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fninit</definition>
        <argsstring>()</argsstring>
        <name>fninit</name>
        <briefdescription>
<para>Initialize FPU without checking for pending unmasked exceptions (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1304" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1304" bodyend="1304"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3785969cbf95b665f13c350920256e73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fist</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store fp0 as 16-bit or 32-bit Integer to <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1307" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1307" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab802b333ccdfc502099d339973f62d30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fistp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fistp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store fp0 as 16-bit, 32-bit or 64-bit Integer to <emphasis>o0</emphasis> and pop stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1309" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1309" bodyend="1309"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a606b21fccdb766ab4d29f2eb7ca3f70e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fld</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Push 32-bit, 64-bit or 80-bit floating point value on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1312" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1312" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4274c647d9c45c6c2b9bb2e81be0d99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fld</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Push <emphasis>o0</emphasis> on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1314" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1314" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bafa7684e43dff769bb206c0d5af16b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fld1</definition>
        <argsstring>()</argsstring>
        <name>fld1</name>
        <briefdescription>
<para>Push +1.0 on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1317" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1317" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28ab9e424781e237bd2eab22c2880e30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldl2t</definition>
        <argsstring>()</argsstring>
        <name>fldl2t</name>
        <briefdescription>
<para>Push log2(10) on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1319" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1319" bodyend="1319"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afae6e3b3c9040103a2f5cf2a9bec22db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldl2e</definition>
        <argsstring>()</argsstring>
        <name>fldl2e</name>
        <briefdescription>
<para>Push log2(e) on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1321" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1321" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d2a70f5774d791b073cd5b5fea0a683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldpi</definition>
        <argsstring>()</argsstring>
        <name>fldpi</name>
        <briefdescription>
<para>Push pi on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1323" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1323" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a37e0f0a811c65417a56dc1190c99817d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldlg2</definition>
        <argsstring>()</argsstring>
        <name>fldlg2</name>
        <briefdescription>
<para>Push log10(2) on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1325" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1325" bodyend="1325"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef0758b9c188b089a85e9f21d88c0eb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldln2</definition>
        <argsstring>()</argsstring>
        <name>fldln2</name>
        <briefdescription>
<para>Push ln(2) on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1327" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1327" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6904a3fcfbb051bd65461f178da129fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldz</definition>
        <argsstring>()</argsstring>
        <name>fldz</name>
        <briefdescription>
<para>Push +0.0 on the FPU register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1329" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1329" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8bce119e7fc6ec71a8038b9d8cc1d65b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldcw</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fldcw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Load x87 FPU control word (2 bytes) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1332" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1332" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae29e81dc82681a76a1532c20e8ed551a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fldenv</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fldenv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Load x87 FPU environment (14 or 28 bytes) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1334" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1334" bodyend="1334"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36a9cb0ff748a1fa67d1e1ba5e356c39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fmul</definition>
        <argsstring>(const FpReg &amp;o0, const FpReg &amp;o1)</argsstring>
        <name>fmul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Multiply <emphasis>o0</emphasis> by <emphasis>o1</emphasis> and store result in <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>One of dst or src must be fp0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1339" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1339" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9f6ac9f394d5110411fd56102f4df57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fmul</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fmul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Multiply fp0 by 32-bit or 64-bit <emphasis>o0</emphasis> and store result in fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1341" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1341" bodyend="1341"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a961a8f91af17582a2f260e7c90d55881" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fmulp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fmulp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Multiply fp0 by <emphasis>o0</emphasis> and POP register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1344" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1344" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd38e20218f6be6e67f762a06fdd306e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fmulp</definition>
        <argsstring>()</argsstring>
        <name>fmulp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1346" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1346" bodyend="1346"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fcb571cca1148102d078db08c14474d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnclex</definition>
        <argsstring>()</argsstring>
        <name>fnclex</name>
        <briefdescription>
<para>Clear exceptions (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1349" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1349" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21d45bfaad8c94bc7a55875621ca04d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnop</definition>
        <argsstring>()</argsstring>
        <name>fnop</name>
        <briefdescription>
<para>No operation (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1352" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1352" bodyend="1352"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25d6b4db6eeb826ebed7f75159dc8d3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnsave</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fnsave</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Save FPU state (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1355" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1355" bodyend="1355"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6662477a1d42b96900250dfd3e257d68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnstenv</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fnstenv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU environment (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1358" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1358" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acec4eb3db346be537c4dbc408f82338a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnstcw</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fnstcw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU control word (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1361" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1361" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77fe002f2357ef326b51d37b557e35ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnstsw</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>fnstsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU status word to <emphasis>o0</emphasis> (AX) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1364" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1364" bodyend="1364"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d0e2444c639aac5a00f1e897c3c088f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fnstsw</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fnstsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU status word to <emphasis>o0</emphasis> (2 bytes) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1366" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1366" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0659d1b85d0b5d12203a0b2e12f79da6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fpatan</definition>
        <argsstring>()</argsstring>
        <name>fpatan</name>
        <briefdescription>
<para>Calculate arctan(fp1 / fp0) and pop the register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1369" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1369" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ead7284ab096932c27b2877727df247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fprem</definition>
        <argsstring>()</argsstring>
        <name>fprem</name>
        <briefdescription>
<para>Calculate fprem(fp0, fp1) and pop the register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1372" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1372" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12235e33008b95304570f737f9f2c0be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fprem1</definition>
        <argsstring>()</argsstring>
        <name>fprem1</name>
        <briefdescription>
<para>Calculate IEEE fprem(fp0, fp1) and pop the register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1374" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1374" bodyend="1374"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa402d4553790ca02c334623a940ae5a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fptan</definition>
        <argsstring>()</argsstring>
        <name>fptan</name>
        <briefdescription>
<para>Calculate arctan(fp0) and pop the register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1377" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1377" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3682ce3effb6a744af3a8309675bcb4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::frndint</definition>
        <argsstring>()</argsstring>
        <name>frndint</name>
        <briefdescription>
<para>Round fp0 to Integer (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1379" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1379" bodyend="1379"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa318fc4326ac246531f3edaa85c95603" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::frstor</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>frstor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Restore FPU state from <emphasis>o0</emphasis> (94 or 108 bytes) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1382" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1382" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad1f926049b6c0a676b48b7e24522d2d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsave</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fsave</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Save FPU state to <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Store FPU state to 94 or 108-bytes after checking for pending unmasked FP exceptions. Then reinitialize the FPU. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1389" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1389" bodyend="1389"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c338d9878a541172f151f972a431057" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fscale</definition>
        <argsstring>()</argsstring>
        <name>fscale</name>
        <briefdescription>
<para>Scale (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Scale fp0 by fp1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1394" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1394" bodyend="1394"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b78463c463dca02c907d26558b2b447" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsin</definition>
        <argsstring>()</argsstring>
        <name>fsin</name>
        <briefdescription>
<para>Calculate sine of fp0 and store result in fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1397" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1397" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a2cb918927a5eee662b25a0dbc57839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsincos</definition>
        <argsstring>()</argsstring>
        <name>fsincos</name>
        <briefdescription>
<para>Sine and cosine (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Compute the sine and cosine of fp0; replace fp0 with the sine and push the cosine on the register stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1403" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1403" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5c424ebd03f444ecafc8ebc884902a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsqrt</definition>
        <argsstring>()</argsstring>
        <name>fsqrt</name>
        <briefdescription>
<para>Square root (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Calculates square root of fp0 and stores the result in fp0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1408" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1408" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23a518a11d5157adbbabd6771a791184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fst</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fst</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store floating point value (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Store fp0 as 32-bit or 64-bit floating point value to <emphasis>o0</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1413" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1413" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc6eb43b22b359606315bc801eb54739" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fst</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fst</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store floating point value to <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1416" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1416" bodyend="1416"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d537ac5b53a5d472ebd88ddf6e45008" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fstp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fstp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store floating point value and pop register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Store fp0 as 32-bit or 64-bit floating point value to <emphasis>o0</emphasis> and pop register stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1422" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1422" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6a96975edcb39bc3f1520b514089703" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fstp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fstp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store floating point value and pop register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Store fp0 to <emphasis>o0</emphasis> and pop register stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1427" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1427" bodyend="1427"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a986e2dd51ff655bd4fb5681e952d8d67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fstcw</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fstcw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU control word (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Store FPU control word to <emphasis>o0</emphasis> (2 bytes) after checking for pending unmasked floating-point exceptions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1433" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1433" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91f4549537add6de05f324420eee058b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fstenv</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fstenv</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU environment (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Store FPU environment to <emphasis>o0</emphasis> (14 or 28 bytes) after checking for pending unmasked floating-point exceptions. Then mask all floating point exceptions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1440" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1440" bodyend="1440"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3881577e7727aceaff1329a194aa81cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fstsw</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>fstsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU status word (AX) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1443" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1443" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35814d64db49e72d59591095fedd4dce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fstsw</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fstsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store x87 FPU status sord (2 bytes) (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1445" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1445" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad0028cf4a906c1ba95f6bf2c0c9934a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsub</definition>
        <argsstring>(const FpReg &amp;o0, const FpReg &amp;o1)</argsstring>
        <name>fsub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Subtract <emphasis>o0</emphasis> from <emphasis>o0</emphasis> and store result in <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>One of dst or src must be fp0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1450" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1450" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03c08ee7ae80366efccffbb4a59239ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsub</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fsub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Subtract 32-bit or 64-bit <emphasis>o0</emphasis> from fp0 and store result in fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1452" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1452" bodyend="1452"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd134873a85917cc9f0b1697dae853af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsubp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fsubp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Subtract fp0 from <emphasis>o0</emphasis> and POP register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1454" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1454" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4968650f5f855c44985f241f2a889b98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsubp</definition>
        <argsstring>()</argsstring>
        <name>fsubp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1456" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1456" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a32d85bc7bd35da913b55384426387a7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsubr</definition>
        <argsstring>(const FpReg &amp;o0, const FpReg &amp;o1)</argsstring>
        <name>fsubr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Reverse subtract <emphasis>o1</emphasis> from <emphasis>o0</emphasis> and store result in <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>One of dst or src must be fp0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1461" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1461" bodyend="1461"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe8dcfaa8e3c3be881f2b543f271bd64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsubr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fsubr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Reverse subtract 32-bit or 64-bit <emphasis>o0</emphasis> from fp0 and store result in fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1463" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1463" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4762ada7b6a051c9e757821c292dcc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsubrp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fsubrp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Reverse subtract fp0 from <emphasis>o0</emphasis> and POP register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1465" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1465" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f64d7afcfa4681faa3768586e0ee277" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fsubrp</definition>
        <argsstring>()</argsstring>
        <name>fsubrp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1467" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1467" bodyend="1467"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa32f296999c6ee6f78a8a696d6c6f6e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ftst</definition>
        <argsstring>()</argsstring>
        <name>ftst</name>
        <briefdescription>
<para>Floating point test - Compare fp0 with 0.0. (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1470" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1470" bodyend="1470"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d8de83d179523190d54656c5c5a3ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucom</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fucom</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Unordered compare fp0 with <emphasis>o0</emphasis> (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1473" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1473" bodyend="1473"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bf10a0148e2cd0bdcf057d81c403a8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucom</definition>
        <argsstring>()</argsstring>
        <name>fucom</name>
        <briefdescription>
<para>Unordered compare fp0 with fp1 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1475" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1475" bodyend="1475"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54a6fcf95f2e81b633ff2e3536f6f0c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucomi</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fucomi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Unordered compare fp0 and <emphasis>o0</emphasis>, check for ordered values and Set EFLAGS (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1477" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1477" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d93c4fe24806d33f3024f5e9249a857" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucomip</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fucomip</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Unordered compare fp0 and <emphasis>o0</emphasis>, Check for ordered values and Set EFLAGS and pop the stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1479" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1479" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f1e39bc9df4a6c5c26be9ee4169d511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucomp</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fucomp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Unordered compare fp0 with <emphasis>o0</emphasis> and pop register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1481" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1481" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a294b8d5b2db1f9ebf7a62bfaa8e6f300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucomp</definition>
        <argsstring>()</argsstring>
        <name>fucomp</name>
        <briefdescription>
<para>Unordered compare fp0 with fp1 and pop register stack (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1483" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1483" bodyend="1483"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01d2425a4173d46282513c7ac00efebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fucompp</definition>
        <argsstring>()</argsstring>
        <name>fucompp</name>
        <briefdescription>
<para>Unordered compare fp0 with fp1 and pop register stack twice (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1485" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1485" bodyend="1485"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1bbdded75d2f3576f76dc1a6893b01cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fwait</definition>
        <argsstring>()</argsstring>
        <name>fwait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1487" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1487" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae016e6f9250099aa6730014e25ba73b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fxam</definition>
        <argsstring>()</argsstring>
        <name>fxam</name>
        <briefdescription>
<para>Examine fp0 (FPU). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1490" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1490" bodyend="1490"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cc24293147a53595122450566b76fe0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fxch</definition>
        <argsstring>(const FpReg &amp;o0)</argsstring>
        <name>fxch</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1FpReg" kindref="compound">FpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Exchange register contents (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Exchange content of fp0 with <emphasis>o0</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1495" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1495" bodyend="1495"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b14b2681405b1180ee2d99179472e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fxrstor</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fxrstor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Restore FP, MMX and streaming SIMD extension states (FPU, MMX, SSE). </para>        </briefdescription>
        <detaileddescription>
<para>Load FP and MMX technology and Streaming SIMD Extension state from src (512 bytes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1501" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1501" bodyend="1501"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5db7f98b45629fb84333549387287f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fxsave</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fxsave</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store FP, MMX and streaming SIMD extension states (FPU, MMX, SSE). </para>        </briefdescription>
        <detaileddescription>
<para>Store FP and MMX technology state and Streaming SIMD Extension state to dst (512 bytes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1507" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1507" bodyend="1507"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d020c2293ac1b0199df72fbbe998be8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fxtract</definition>
        <argsstring>()</argsstring>
        <name>fxtract</name>
        <briefdescription>
<para>Extract exponent and significand (FPU). </para>        </briefdescription>
        <detaileddescription>
<para>Separate value in fp0 into exponent and significand, store exponent in fp0 and push the significand on the register stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1513" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1513" bodyend="1513"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20cfa2cf22c06af2f895bc12773c04f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fyl2x</definition>
        <argsstring>()</argsstring>
        <name>fyl2x</name>
        <briefdescription>
<para>Compute y * log2(x). </para>        </briefdescription>
        <detaileddescription>
<para>Replace fp1 with (fp1 * log2(fp0)) and pop the register stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1518" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1518" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4c8c4b4adb44da5d3a000e09b6bd3b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fyl2xp1</definition>
        <argsstring>()</argsstring>
        <name>fyl2xp1</name>
        <briefdescription>
<para>Compute y * log_2(x+1). </para>        </briefdescription>
        <detaileddescription>
<para>Replace fp1 with (fp1 * (log2(fp0)+1)) and pop the register stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1522" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1522" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b48c4e84a6565ee7fddf55282f69b62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const Mem &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move dword (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1529" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1529" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4607c8ac6520525a1fa900428c7c5a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const GpReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1531" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1531" bodyend="1531"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68cd47f521205e5606942a6379ae39d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1533" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1533" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6076e28a58d8f8454bf73076d003898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const MmReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1535" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1535" bodyend="1535"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade72365e231f52b6a3b3aec363387d7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>movq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move qword (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1538" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1538" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a97120769a5e52ae44dc31a57dbea03df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq</definition>
        <argsstring>(const Mem &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>movq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1540" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1540" bodyend="1540"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80cc4c30a999a4b398c9f60162d21727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1542" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1542" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ed46933966107200e97f61d781f07a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packsswb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>packsswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with signed saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1545" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1545" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab53328989b0e42d76f7a61e0d34ab08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packsswb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packsswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1547" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1547" bodyend="1547"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92e021e7f54feaeba3c5dbf2a783664f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packssdw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>packssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with signed saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1550" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1550" bodyend="1550"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acce5c5452b6a26d57d5a8bdb560b62c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packssdw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1552" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1552" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75cfe53ee2233d43618e6e98e6583a29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packuswb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>packuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with unsigned saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1555" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1555" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75aee6e99664faa676ae6c64e6e00fa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packuswb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1557" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1557" bodyend="1557"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a156a944157710498bb3b1abf6f5abe91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed byte add (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1560" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1560" bodyend="1560"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8cb15044ebe14efb937c1de5d18b88b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1562" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1562" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa963ad97957f84f372c65ef6e6cebfbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed word add (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1565" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1565" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecfa1f76362d3ea0c6feaa21d462dbff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1567" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1567" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afcde5e1a7863194af1ae23eede17e67e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed dword add (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1570" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1570" bodyend="1570"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8fbc792e4ff145272290cdf6722a590" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1572" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1572" bodyend="1572"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae899fe96a3ca7ed2a7964c85db1a9c68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add with saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1575" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1575" bodyend="1575"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7532f37390ae1b0f87be0ddb70f7d2f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1577" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1577" bodyend="1577"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a165ab1c5a5ff81c08f210e13de5c82be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add with saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1580" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1580" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0a191c9e44c5e3cb00aaa6d2bcab6474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1582" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1582" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ab24f91bcdf5f9898eff81980ad1ff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add unsigned with saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1585" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1585" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a3c161119710d154033f3a06f1962ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1587" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1587" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f6b6b0899695a8c4175d088db30d761" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add unsigned with saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1590" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1590" bodyend="1590"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6f0d2e85128dd02b8b430b097bf4e5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1592" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1592" bodyend="1592"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6730a7f50afdffea98a2208c0558ee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pand</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1595" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1595" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c1941155592bbfcb311160ea9e5a4ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pand</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1597" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1597" bodyend="1597"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07fa82c06feff46c1cde06755ce9f26f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pandn</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And-not (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1600" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1600" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9546554b72925fc94c0776d60d308d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pandn</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1602" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1602" bodyend="1602"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac26367e810570f11432b9f1ea3058edb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare bytes for equal (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1605" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1605" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab97be0c661ae84af91b5cde40943c4f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1607" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1607" bodyend="1607"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7901233f3888feb1ef274c0b0b8baf85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare words for equal (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1610" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1610" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a72b39c52b238f5f822c93a4b7797c3e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1612" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1612" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4a2412cc65ac43d424d134164c9f6c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare dwords for equal (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1615" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1615" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb7f7cbe849081bacdf1bb6b2126af54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1617" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1617" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d3c1af5c9e5c3c5de2d8dbca735f7ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare bytes for greater than (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1620" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1620" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8c48b13cc4177f70b1df04e65151720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1622" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1622" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ea82db10f715cf8444eaa5d162841ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare words for greater than (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1625" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1625" bodyend="1625"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fc0617f163412e8a2f1c4a08b2aad04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1627" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1627" bodyend="1627"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c400406a753bd67593ddfa8b0572009" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare dqords for greater than (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1630" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1630" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad40ff9fa8e9481df3d0c1c1ac7a7108e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1632" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1632" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa16a4e3284e540b2df528fdb7ce0b07a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply high (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1635" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1635" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab57ae5611133513da8507b29b3f127bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1637" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1637" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc751ac51972cac275e4d93229799501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmullw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply low (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1640" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1640" bodyend="1640"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc7392965bc0f113f1a7d703b27cebf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmullw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1642" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1642" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade38950fe45915edd8b79ee7e8ae72a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::por</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>por</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Or (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1645" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1645" bodyend="1645"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a84df020b4dc80a317141cb3bf59fdbeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::por</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>por</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1647" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1647" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaedfcf691d60677d21ec7a6fb8fba876" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddwd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply and add (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1650" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1650" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7adf43722d6d04f905ecafd60201c460" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddwd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1652" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1652" bodyend="1652"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa55f15bf91f4f8251fd5700e96ac393f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1655" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1655" bodyend="1655"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81463ca07f4d28f4063aa1954e6ff304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1657" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1657" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acdaab9f4eea8941b5a869ac8c7a6edf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1659" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1659" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a623d8b3010bb0c363dbcf5c4ef1376d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1659" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1659" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a221c0a400675ce8df5ae484267dde716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1662" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a611c1f528d3e32ca9a9498520ab589c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1664" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1664" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0bd44306f001a98e5b54337be0f856d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1666" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1666" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ae8f41d3a458b9481d85e7e34db0809" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1666" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1666" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec93ad20cfdcb191002a1f34bc3f606c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1669" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1669" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a44b7fa587a82a55c20e1824aeccb0aee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1671" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1671" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d0a32cc3c158eeda7240c7ad372e0bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1673" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1673" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1af5cbf93eee58e4d4297640910092b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1673" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1673" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13b9ecc85162fb316e4eddd9cb69d6f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right arithmetic (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1676" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1676" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e2d81c8c54359022a394f7ec0f5bffe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1678" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1678" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3a0376efd490c9c5b4dc200fe7991e2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1680" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1680" bodyend="1680"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea7d396efa8d5413cf6f6866a98cddab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1680" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1680" bodyend="1680"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77bfe6e59b8cf5ca54f47d003fe1c57f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right arithmetic (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1683" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1683" bodyend="1683"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e16b545c3fabce89474056c2cc95a7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1685" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1685" bodyend="1685"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a2a6dda795758352a6c85726092b376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1687" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1687" bodyend="1687"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6a05faab1c7ebfa07dfb632652032d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1687" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1687" bodyend="1687"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9cc65ca040c046b7e3863b6e4046c28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right logical (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1690" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1690" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afbbb0be96ece3159b56def658344b28e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1692" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1692" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5ec85f776bc24e1776535739b3bb914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1694" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1694" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a585f4eac4390d1f0cd4c4fc70d29c2bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1694" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1694" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe7dcb31b4836756ff98e5e9a2315ad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right logical (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1697" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1697" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa83eba27cf1c6b4f8527e56a865b6125" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1699" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1699" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad86a39408ee9a470c2a48f86200093a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1701" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1701" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedf59a61a4cd7c5f6b07de3dc948a8d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1701" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1701" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77c0c084a026a94ae5e1a9d67d3e0966" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right logical (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1704" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1704" bodyend="1704"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac70c3bb66871c2999eed64685c8f0c29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1706" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1706" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae57bb3e0cfef8a57cf0d55f05bc8cfec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const MmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1708" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1708" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ea2b890a31753d9d81bafda43ef795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const MmReg &amp;o0, int o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1708" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1708" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04c0a82c47a90719435c9b833ecb2443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1711" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1711" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad650be2d922df124698b560866304b18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1713" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1713" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ca88b960241bd5f25be1b7803930c83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1716" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1716" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3b7d062a53dc374bc17a40df8de8c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1718" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1718" bodyend="1718"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f5aa141751e25ffee568f3e9d7147a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1721" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1721" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90cb625693db0b762852c4742a6ea345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1723" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1723" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab14f14e7c062b4fa66847240a2aef2e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1726" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1726" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99a63475a672ed6264820a14b3b77feb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1728" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1728" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c195bd9303d08dd051b538ec99818a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1731" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1731" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19b0c1b4f0d69c3da899262872fabd89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1733" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1733" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfee711cdb72e75fe89e2e4e60266c6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with unsigned saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1736" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1736" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6beb0cd7a8877d3b78e8e2ffacc71ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1738" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1738" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1addd8227d5371d1b82de689303593c2d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with unsigned saturation (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1741" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1741" bodyend="1741"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac17db2a99303a734fa62c86c5a0bc6d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1743" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1743" bodyend="1743"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf6e7f1a4ac2bcba7fdb137a6518d5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhbw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>punpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed data (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1746" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1746" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00511753929cfa464eda70c9fa9d6c09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhbw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1748" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1748" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a84c0eb8f9ee322e91f0e48098765b607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhwd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>punpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed data (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1751" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1751" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2bb1223884dc3ab32ce37f257e85ce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhwd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1753" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1753" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f4e3c7a4eddc6558998b66ad0f207e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhdq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>punpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed data (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1756" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1756" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a29f2cc99b0157977573c8ea1487d708d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhdq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1758" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1758" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52ed02f6fddeb946aa1cd6bbd59d9cfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklbw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>punpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed data (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1761" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1761" bodyend="1761"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad059757a4685faa25cea9c4dace3eaca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklbw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1763" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1763" bodyend="1763"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4271319655650beed40aa8a1ab7ac05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklwd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>punpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed data (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1766" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1766" bodyend="1766"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73dfdf9057210e61b2e8176633fef305" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklwd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1768" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1768" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a703445ec657aaf57e2faf2c3452a1e30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckldq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>punpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed data (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1771" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1771" bodyend="1771"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a884bf8390c8f569af50d1bb5b73e68eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckldq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1773" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1773" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac1e5293ef936b85b08a4fd050fd3e116" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pxor</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Xor (MMX). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1776" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1776" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af43ac1f08b408f3397d52ae59fc8e0cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pxor</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1778" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1778" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28b1a3263824d8edea4b6aae6722d5ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::emms</definition>
        <argsstring>()</argsstring>
        <name>emms</name>
        <briefdescription>
<para>Empty MMX state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1781" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1781" bodyend="1781"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35aef9ee20ed94788d5b2ac9cdc7ea90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pf2id</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pf2id</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP to integer convert (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1788" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1788" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af60e72666ebe775caf99c58c2c8886f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pf2id</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pf2id</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1790" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1790" bodyend="1790"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08d13a0ad479c349afdb570316824637" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pf2iw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pf2iw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP to integer word convert (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1793" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1793" bodyend="1793"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9f7f1c3480c14b3212023f3dd9b7f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pf2iw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pf2iw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1795" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1795" bodyend="1795"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a863624de2325983d960f8b06d7d36079" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfacc</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfacc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP accumulate (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1798" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1798" bodyend="1798"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43a5d0702988df7115a2379b29400433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfacc</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfacc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1800" bodyend="1800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6859a6bc427421202f3ff616420165f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfadd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP addition (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1803" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1803" bodyend="1803"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afce9ba78cd2a0d27fcfdf6ef6856ba1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfadd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfadd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1805" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1805" bodyend="1805"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80c835fd74b7c6b2fcd970b92635c764" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfcmpeq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfcmpeq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP compare - dst == src (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1808" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1808" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1cc4b7e8d35cd86365f75f6b79c31d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfcmpeq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfcmpeq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1810" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1810" bodyend="1810"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ee302cad654187caae9defb06c798a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfcmpge</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfcmpge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP compare - dst &gt;= src (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1813" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1813" bodyend="1813"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0268ab7c09f6f144b78c7274468daf3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfcmpge</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfcmpge</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1815" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1815" bodyend="1815"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e283aed20497d2e2e23596055afcfee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfcmpgt</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfcmpgt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP compare - dst &gt; src (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1818" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1818" bodyend="1818"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5d5915de476cb224b8482c77f22db15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfcmpgt</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfcmpgt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1820" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1820" bodyend="1820"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2010cf6a14eddb1bfe3826ebc3d31de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfmax</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfmax</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP maximum (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1823" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1823" bodyend="1823"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7a45edeca1affba1bbcfc82ed87c858" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfmax</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfmax</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1825" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1825" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a053f2c3412368be099d5865b9a9f3fbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfmin</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfmin</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP minimum (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1828" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1828" bodyend="1828"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9739deb9625a197ed1b8ce7c2e45fad4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfmin</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfmin</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1830" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1830" bodyend="1830"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a670e627f641e21d7b3a876ef6810f146" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfmul</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfmul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP multiply (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1833" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1833" bodyend="1833"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1573af28dabb9bb6d3f7d2468cb9a69c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfmul</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfmul</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1835" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1835" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab6e36ba204ca6cef7e4c49625679e86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfnacc</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfnacc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP negative accumulate (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1838" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1838" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafadb689bad64fa8155e6bb86bc3fdd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfnacc</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfnacc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1840" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1840" bodyend="1840"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa18570a1db2b8938f7fe744e2b07f8a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfpnacc</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfpnacc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP mixed accumulate (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1843" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1843" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a532d2aa83ac84b8c8d1c58754fadbffe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfpnacc</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfpnacc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1845" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1845" bodyend="1845"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77a095b3fad2aa3de9d21547f83cd221" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrcp</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfrcp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reciprocal Approximation (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1848" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1848" bodyend="1848"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00e94d89c06af2a7c57b9fdc7e68dc59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrcp</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfrcp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1850" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1850" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad9e205ab5c502d197f07bab9e1345f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrcpit1</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfrcpit1</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reciprocal, first iteration step (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1853" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1853" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd7bcf386374efb71edaeb9741385d88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrcpit1</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfrcpit1</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1855" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1855" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af906d77a961321f7ae38774163429204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrcpit2</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfrcpit2</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reciprocal, second iteration step (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1858" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1858" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa36a4472eaaaca8c98308150a751c420" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrcpit2</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfrcpit2</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1860" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1860" bodyend="1860"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4d822856c8e6ef693e923e3c19bcc35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrsqit1</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfrsqit1</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reciprocal square root, first iteration step (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1863" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1863" bodyend="1863"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61c05ea6ebb09d4c8242cc8408895f21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrsqit1</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfrsqit1</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1865" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1865" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2472fd8b1f54cd7985cf95179ff07c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrsqrt</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfrsqrt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reciprocal square root approximation (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1868" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1868" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac43b315b5317535074513c0da9f5ffa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfrsqrt</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfrsqrt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1870" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1870" bodyend="1870"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8cd0716536adf3cc34541f3c5bc39735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfsub</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfsub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP subtract (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1873" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1873" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0949bccd8ec4009eead96e27529f76d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfsub</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfsub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1875" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1875" bodyend="1875"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd20ab98bae02fda5503d484a500a08a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfsubr</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pfsubr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reverse subtract (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1878" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1878" bodyend="1878"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae174d35705ca5fdd2b5f2bf5e2dbb5f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pfsubr</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pfsubr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1880" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1880" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a959e28aa679f534ac52ed47b0fb184ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pi2fd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pi2fd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed dwords to SP-FP (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1883" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1883" bodyend="1883"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf12ed0523a81e98781e0beba96e587b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pi2fd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pi2fd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1885" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1885" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aceb7d543cb6732ba2bfe50cb597e3959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pi2fw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pi2fw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed words to SP-FP (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1888" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1888" bodyend="1888"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d4364afa53e3d6472e6a09ae3f31fd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pi2fw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pi2fw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1890" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1890" bodyend="1890"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a0c0edf09758df7e89e2e0c031a6ea3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pswapd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pswapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed swap dword (3dNow!) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1893" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1893" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5dd4dce7b41023ae2ec92aa513919fd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pswapd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pswapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1895" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1895" bodyend="1895"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e20904f4a7a99b02c03b6086c812d6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::prefetch3dnow</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>prefetch3dnow</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Prefetch (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1898" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1898" bodyend="1898"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a483db1c9f5edde3d13e7fb4bdacc1c89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::prefetchw3dnow</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>prefetchw3dnow</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Prefetch and set cache to modified (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1901" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1901" bodyend="1901"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a0792987f2fe38b682cba05da87c8ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::femms</definition>
        <argsstring>()</argsstring>
        <name>femms</name>
        <briefdescription>
<para>Faster EMMS (3dNow!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1904" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1904" bodyend="1904"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d316afac7844bbcb594555a0b88053b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>addps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP add (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1911" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1911" bodyend="1911"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeaec81a9449cd551ac83bed49f4c7754" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>addps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1913" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1913" bodyend="1913"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3d43d56b81154de0192af96d9d508ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>addss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP add (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1916" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1916" bodyend="1916"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1adb2a28e271a8e033fee66b669d9448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>addss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1918" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1918" bodyend="1918"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b928d38b15155cde2c66b6fe92943a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andnps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>andnps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And-not for SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1921" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1921" bodyend="1921"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acf197d37a7b3071b60b34758e3142785" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andnps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>andnps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1923" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1923" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82d28ee6c4b4a672614b8361961a43e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>andps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And for SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1926" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1926" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0bea0289c4a3a9169d6c75307fa5e11f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>andps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1928" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1928" bodyend="1928"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade03627e652c0038284ce47ec8d3c53e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP compare (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1931" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1931" bodyend="1931"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a50cb8ee0acb840e344b83098c011b1bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>cmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1931" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1931" bodyend="1931"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc3830e697f8b39e7d340e737fddc65f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1933" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1933" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a285dbe2bc28c20b8aa269ebfe5b6049b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>cmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1933" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1933" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09e7dca8115f29c7aabed5efb2319fba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Compare scalar SP-FP values (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1936" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1936" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5fadbb4b20104c2118fa94fd0d260804" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>cmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1936" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1936" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1dcd2046ed82fe5ac65b0dd45d8fb842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1938" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1938" bodyend="1938"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8c3d7e330ab4170e8da577a7e9c1054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>cmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1938" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1938" bodyend="1938"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a66b184725850ae76ae240f9cd942150a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::comiss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>comiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar ordered SP-FP compare and set EFLAGS (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1941" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1941" bodyend="1941"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7b26589d162bfd518192a33c75ceedbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::comiss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>comiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1943" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1943" bodyend="1943"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1add0dd48a04a447e63cbdae5bc54fdff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpi2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>cvtpi2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed signed INT32 to packed SP-FP conversion (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1946" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1946" bodyend="1946"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac583b6c4e84a268e7f1a2b8af00e64c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpi2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtpi2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1948" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1948" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21f012a0f5faf8b6c0e8d58d5ad5b45d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtps2pi</definition>
        <argsstring>(const MmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtps2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP to packed INT32 conversion (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1951" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1951" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8591fcbe6bd29104edadc24c35002b04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtps2pi</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtps2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1953" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1953" bodyend="1953"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2f737c1c0b03d41b30285c9649da7ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsi2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cvtsi2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar signed INT32 to SP-FP conversion (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1956" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1956" bodyend="1956"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9dd24bfbbe0bbccf788b3fcfc10d6f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsi2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtsi2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1958" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1958" bodyend="1958"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6acb3b5812e8258795fb7a6fb8336dcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtss2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP to signed INT32 conversion (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1961" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1961" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0fed0e6e71ac4fb32d0dc4288487e06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtss2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1963" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1963" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a513939ed423fae5f8b0e9e76c253243f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttps2pi</definition>
        <argsstring>(const MmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvttps2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP to packed INT32 conversion (truncate) (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1966" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1966" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0839943db757aec07004612ee6c72ad5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttps2pi</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvttps2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1968" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1968" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa43b9695b9dccff4ed75c8267b89fc87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttss2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvttss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP to signed INT32 conversion (truncate) (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1971" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1971" bodyend="1971"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23ebef79e6ba4cac29ee9b60f03d197b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttss2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvttss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1973" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1973" bodyend="1973"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc7dd6617d40988ce09d534cce7d3b30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>divps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP divide (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1976" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1976" bodyend="1976"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18ee8f2c96f93727616b049e73bd442d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>divps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1978" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1978" bodyend="1978"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adda3fbd65468e271a9df1efc52516fd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>divss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP divide (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1981" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1981" bodyend="1981"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fdeb8f3239cc587064656f38e84d3c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>divss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1983" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1983" bodyend="1983"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0f404966f1ee7a3a9e929739f8b25d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ldmxcsr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>ldmxcsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Load streaming SIMD extension control/status (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1986" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1986" bodyend="1986"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8346a2b3f39b0d999fd515ada4563dc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maskmovq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>maskmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Byte mask write (SSE). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The default memory location is specified by DS:EDI. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1991" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1991" bodyend="1991"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa498b968fd38f63366194433cbb218b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>maxps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP maximum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1994" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1994" bodyend="1994"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af741bc017b4fe6e60264115354c4b80c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>maxps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1996" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1996" bodyend="1996"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb193f2b2407bcb78d8a96d5c00c54f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>maxss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP maximum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="1999" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="1999" bodyend="1999"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adbfe6f260d0b9e4afc01f18b5dbb9a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>maxss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2001" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2001" bodyend="2001"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82ba7224b60e0670379f5945706695af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>minps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP minimum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2004" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2004" bodyend="2004"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af74777209f6e3b68f33f790f71227552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>minps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2006" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2006" bodyend="2006"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2e3f17b6f66f41e1f0f8ec714dc3bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>minss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP minimum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2009" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2009" bodyend="2009"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bd5c645f7c122e64c4ca8c1b03d411f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>minss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2011" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2011" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad360620842308574252539f0f5b2247c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movaps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move aligned packed SP-FP values (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2014" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2014" bodyend="2014"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf46f36bc3a15feda93c73ebe4481964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movaps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2016" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2016" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1dd436fea5399de365d28e51eaba7234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movaps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move aligned packed SP-FP values (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2018" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2018" bodyend="2018"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad134ad7ea3ae2428f33e81619507b373" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move dword. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2021" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2021" bodyend="2021"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3015bb090b76325c18fc5e8f7533164d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2023" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2023" bodyend="2023"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a624c89375020e9d981c0bc0ec2ba2c78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2025" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2025" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6839f8634e9851e2bd299187d60c3ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movd</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>movd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2027" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2027" bodyend="2027"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aefc5d862bca5fa52cb5792bb85b9534c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move qword (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2030" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2030" bodyend="2030"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a147c95b82dc15dd0d0cfa9a070df6958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2032" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2032" bodyend="2032"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82c0c345f6fa10ebceb007ecd1c2f19a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2034" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2034" bodyend="2034"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1b5f77be259abe76bda00dcbe6ac39d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movntq</definition>
        <argsstring>(const Mem &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>movntq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move 64 Bits non-temporal (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2037" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2037" bodyend="2037"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac286f25c418edd897a3de01d78bbc833" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movhlps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movhlps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>High to low packed SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2040" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2040" bodyend="2040"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5441e88bedc67cf4439a23cfbac97185" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movhps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move high packed SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2043" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2043" bodyend="2043"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a399858eb2c3f2a93361fd34e4dd66a40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movhps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move high packed SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2045" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2045" bodyend="2045"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71004b174af5a848e8fb732a175832d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movlhps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movlhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move low to high packed SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2048" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2048" bodyend="2048"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80d611e737f9f92b785f9f4b7f2120b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movlps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movlps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move low packed SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2051" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2051" bodyend="2051"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a165f865d8d331de28a6cd0f13185cd7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movlps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movlps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move low packed SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2053" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2053" bodyend="2053"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a075cc39dcfbbfff63177c2d2504e1758" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movntps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movntps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move aligned four packed SP-FP non-temporal (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2056" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2056" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad4bd4723265f7c554703ce10c75a433f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move scalar SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2059" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2059" bodyend="2059"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5e6735ab05b9b9b88c4d17671f4facc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2061" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2061" bodyend="2061"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3f7c4a714345dd72170004eaf473bae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movss</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2063" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2063" bodyend="2063"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a723aa4b30fcdb3d5ff7427a7e38405ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movups</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move unaligned packed SP-FP values (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2066" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2066" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a15ccd198b23f97783c94c648e27d79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movups</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2068" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2068" bodyend="2068"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafed902bcb0bc596328ff865409e6d65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movups</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2070" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2070" bodyend="2070"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac810ea5df3e28037f9b41acf4c97efc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>mulps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP multiply (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2073" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2073" bodyend="2073"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afcad04bfb6ac77ece4e0dc692da69781" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>mulps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2075" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2075" bodyend="2075"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a185455ffcdd9f6216e1240c7fce20454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>mulss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP multiply (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2078" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2078" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4feb47cecc7f277597b35e05121a76a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>mulss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2080" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2080" bodyend="2080"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d7bb4f2bc06b410f09efb50988a1f19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::orps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>orps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Or for SP-FP data (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2083" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2083" bodyend="2083"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa70119e0f4e98ac949704e4f5536b65d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::orps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>orps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2085" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2085" bodyend="2085"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0c8425153db1b22c9598378e2f09837" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed average (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2088" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2088" bodyend="2088"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a63dbe1ba32cae73468efb9517d11ce99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2090" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2090" bodyend="2090"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f685e4b5093085a2dac3bf1c1bb786e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed average (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2093" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2093" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48e9d613a0979af1ff562dc59d457523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2095" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2095" bodyend="2095"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a639d3a57783d2f7443e1a3698b3edf01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrw</definition>
        <argsstring>(const GpReg &amp;o0, const MmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract word (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2098" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2098" bodyend="2098"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1be756ac02ff5e2cb7a9746fb7e550d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrw</definition>
        <argsstring>(const GpReg &amp;o0, const MmReg &amp;o1, int o2)</argsstring>
        <name>pextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2098" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2098" bodyend="2098"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2220e7bc4b9f3482cc1c497cdd153c97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const MmReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Insert word (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2101" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2101" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d0ca6c07d83383869208e58f13615f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const MmReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2101" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2101" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac30dc3cd293e7723a3dc17b2fec23903" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2103" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2103" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4803c7100e38bad9461721beac485890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2103" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2103" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b0e2a8347cde4979732cb70f546a2bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed signed integer word maximum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2106" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2106" bodyend="2106"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed5737ebb35ffe54b136724399ec5054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2108" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2108" bodyend="2108"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7474422f245d2c2a7b1174f19074ff1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxub</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed unsigned integer byte maximum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2111" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2111" bodyend="2111"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04fa03cb1eb91d78a9db7a578b4e0f19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxub</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2113" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2113" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acaf5e61c828bdc2a72177e697e4a43d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed signed integer word minimum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2116" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2116" bodyend="2116"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4acbb0dce7f00fc821f5760601540e15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2118" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2118" bodyend="2118"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd4ca813a42cfbae284ce817a8cc3c2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminub</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed unsigned integer byte minimum (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2121" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2121" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7174435ad753eca6423f259a6466f07e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminub</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2123" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2123" bodyend="2123"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abfb982c05ce442997ec0e4a94d85039d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovmskb</definition>
        <argsstring>(const GpReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmovmskb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move Byte mask to integer (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2126" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2126" bodyend="2126"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9fe37248e9f6c52214046c0165ff9316" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhuw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply high unsigned (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2129" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2129" bodyend="2129"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a999ca292d39f2274918e2d613e38054e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhuw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2131" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2131" bodyend="2131"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4a7fe27f5fb637c9f41f495b0915d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psadbw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sum of absolute differences (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2134" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2134" bodyend="2134"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a453e080f0975f4433a1d73cd067b075a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psadbw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2136" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2136" bodyend="2136"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a569dca34f3488ad0763b2415bfa5d778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshufw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed shuffle Word (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2139" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2139" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bce3181bb737186e1da03b9537a1aad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1, int o2)</argsstring>
        <name>pshufw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2139" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2139" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad05f3e1a4a0a3a6b8dcdf0a9365173d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshufw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2141" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2141" bodyend="2141"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c5cf54a4ac239633a9fb78f6ea61a0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pshufw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2141" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2141" bodyend="2141"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00bd63f9dab2988acd6f373e2545c2da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>rcpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP reciprocal (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2144" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2144" bodyend="2144"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f4277ef37b83bc86dc1a911db440507" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcpps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>rcpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2146" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2146" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89c585b6608a3a776156d3b91274d0e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>rcpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP reciprocal (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2149" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2149" bodyend="2149"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47fbe5b3f4d1642b3584d793255e6d1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rcpss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>rcpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2151" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2151" bodyend="2151"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae59f6874c5443228e93df39af5ebf669" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::prefetch</definition>
        <argsstring>(const Mem &amp;o0, const Imm &amp;o1)</argsstring>
        <name>prefetch</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Prefetch (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2154" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2154" bodyend="2154"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25b5670e5ba1f489470259d6ae4fb37d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::prefetch</definition>
        <argsstring>(const Mem &amp;o0, int o1)</argsstring>
        <name>prefetch</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2154" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2154" bodyend="2154"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a64ea3f50cde731bd8c47a07dee971659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compute sum of absolute differences (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2157" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2157" bodyend="2157"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42277bbc179ac8ed93041415fda385d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2159" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2159" bodyend="2159"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab03abfff83a509a1f678ac3c2ce21382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rsqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>rsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP square root reciprocal (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2162" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2162" bodyend="2162"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a228c9163446af814da1bc32e7c10eac9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rsqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>rsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2164" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2164" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd52d16edd9ea70d950e7c861124628e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rsqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>rsqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP square root reciprocal (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2167" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2167" bodyend="2167"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5807c8d99394de0e040d53739d3d16c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rsqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>rsqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2169" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2169" bodyend="2169"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a504d5e2ba4a2f25bfc26195c8d721a1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sfence</definition>
        <argsstring>()</argsstring>
        <name>sfence</name>
        <briefdescription>
<para>Store fence (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2172" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2172" bodyend="2172"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecbf65ca74e038674699427568b8d988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Shuffle SP-FP (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2175" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2175" bodyend="2175"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae08c2b2bf29f77d7b032ef86e1d05f73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>shufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2175" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2175" bodyend="2175"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06dfba2087bda9aee63920ebac901c2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2177" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2177" bodyend="2177"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04bff5ba6fdbd6c07825827cb7707dc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>shufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2177" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2177" bodyend="2177"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6179c0ec0bca940eaf5233694bfd41cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>sqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP square root (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2180" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2180" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa13211674a92eac4daa8a72de36d6b2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>sqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2182" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2182" bodyend="2182"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad63e5fae4386c333668529a0e3fc84d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>sqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP square root (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2185" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2185" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a181db99a3e24536c02631e7f4b3f9b01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>sqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2187" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2187" bodyend="2187"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa433da13b7d68f7d08196d2f51662e17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::stmxcsr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>stmxcsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store streaming SIMD extension control/status (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2190" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2190" bodyend="2190"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87360277291db7b87e88c87bd6c8bdf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>subps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP subtract (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2193" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2193" bodyend="2193"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac79401bac030b9ce2a4c0cb2e224cbaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>subps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2195" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2195" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af80f72a7f7853772165cb1f647c80536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>subss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar SP-FP subtract (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2198" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2198" bodyend="2198"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d353d7b0612d426e4774f92a1838d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>subss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2200" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2200" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13e4c6207799cea487f081c394a94eac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ucomiss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>ucomiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unordered scalar SP-FP compare and set EFLAGS (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2203" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2203" bodyend="2203"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc8eb97de7f4e89468d52c2cd8e92481" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ucomiss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>ucomiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2205" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2205" bodyend="2205"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03918c60a16ddfa67c615fd6107d37ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpckhps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>unpckhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high packed SP-FP data (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2208" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2208" bodyend="2208"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae071c83720a29c57bdada05e1f7360c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpckhps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>unpckhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2210" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2210" bodyend="2210"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6664448f7a3cee98a157af1273dbb51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpcklps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>unpcklps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack low packed SP-FP data (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2213" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2213" bodyend="2213"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75a30ec7bb277eaaafe671c5b5b22880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpcklps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>unpcklps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2215" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2215" bodyend="2215"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a637702e9422f03410eb56c620f03a9b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xorps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>xorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Xor for SP-FP data (SSE). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2218" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2218" bodyend="2218"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3498e6101d6d98d7d466e1888e7cfa02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xorps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>xorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2220" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2220" bodyend="2220"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35991ed4ef719bbc5ddbc5d2d7780ac1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>addpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2227" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2227" bodyend="2227"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ae9d6f39d02a59044038850518cde66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>addpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2229" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2229" bodyend="2229"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58f385f72928e4000e338d502926c891" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>addsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar DP-FP add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2232" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2232" bodyend="2232"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4484086145cc1932d45d8aeef736d4b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>addsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2234" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2234" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3156ce624211552efc5375565662239" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andnpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>andnpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And-not for DP-FP (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2237" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2237" bodyend="2237"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1addf8571c60dfc73732d1144bf3fa719a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andnpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>andnpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2239" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2239" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58a1ee9600ccf81ef9c5404f2412e6b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>andpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And for DP-FP (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2242" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2242" bodyend="2242"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3031ab0eeb708c342c2bf00d66d6c839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>andpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2244" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2244" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a763bee18f28f584b8d165820f3ebe16d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::clflush</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>clflush</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Flush cache line (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2247" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2247" bodyend="2247"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23738c5a8ff9c2ba1e14b3870dd2584e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP compare (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2250" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2250" bodyend="2250"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c11854f94db812596c0c53b8c5c53e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>cmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2250" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2250" bodyend="2250"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a924163e482359a7296af631d19458ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2252" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2252" bodyend="2252"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5758f19cdad2e2ddff8c8f8d8bd82225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>cmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2252" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2252" bodyend="2252"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a014600ddf19b281bc050d79bb69228b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Compare scalar SP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2255" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2255" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96ef79f6db4e2492c331a2af048415ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>cmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2255" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2255" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2ecb653566c1332afa1993eda46a27d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>cmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2257" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2257" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab049d163a3a0342dbd7cc4796b366f6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>cmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2257" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2257" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70fc47e40023aa28c0d90cc800bf0ff4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::comisd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>comisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar ordered DP-FP compare and set EFLAGS (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2260" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2260" bodyend="2260"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa60e6d4bf1704e2814532c622a3a9068" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::comisd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>comisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2262" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2262" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a651435ffe71891f73cdcc0d4220ac1d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtdq2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtdq2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed qword integers to packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2265" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2265" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5889cbdd7109feb5c033349ffa640b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtdq2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtdq2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2267" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2267" bodyend="2267"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6877c97dda97d21657088bc1f82ba6cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtdq2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtdq2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed qword integers to packed SP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2270" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2270" bodyend="2270"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92ce752721403155e2cbc750cf67beb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtdq2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtdq2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2272" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2272" bodyend="2272"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7046914d46e0fac764af8961f9ec2ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed DP-FP values to packed qword integers (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2275" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2275" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afba2d574d2231045fb417b0e77495e3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2277" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2277" bodyend="2277"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2973c5ddb3b10d827fac683c1b8954f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpd2pi</definition>
        <argsstring>(const MmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtpd2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed DP-FP values to packed qword integers (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2280" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2280" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a815470e4d0f8a91c823a12d511793194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpd2pi</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtpd2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2282" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2282" bodyend="2282"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d548594a8407f5c6690cfa6f434c957" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpd2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtpd2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed DP-FP values to packed SP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2285" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2285" bodyend="2285"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6db7810bf3386a560038ed4dfb99582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpd2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtpd2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2287" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2287" bodyend="2287"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02af38ceb452519de910c0fd55cc40d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpi2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>cvtpi2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed dword integers to packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2290" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2290" bodyend="2290"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1e4bec30ad2e3db5103493d23b2f18d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtpi2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtpi2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2292" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2292" bodyend="2292"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c841c6fff8c57b2739489dda5967808" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed SP-FP values to packed qword integers (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2295" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2295" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0f7ffc3d73649749e54a07336428b382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2297" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2297" bodyend="2297"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c0738315009363a2fa737b8f70685cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtps2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtps2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert packed SP-FP values to packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2300" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2300" bodyend="2300"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3445956f16d639789ed90b611d02d69d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtps2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtps2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2302" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2302" bodyend="2302"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c9b1726f16b0eee737af57897f32292" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert scalar DP-FP value to dword integer (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2305" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2305" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34837ad1ce65444d35274ea1aebf770f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2307" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2307" bodyend="2307"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c549dbd671de61510dbdedc46466708" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsd2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtsd2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert scalar DP-FP value to scalar SP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2310" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2310" bodyend="2310"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad703d5681decbc2c20fa5584797b2280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsd2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtsd2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2312" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2312" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a821dda7e23e2c709221e84da9b3872ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsi2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>cvtsi2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert dword integer to scalar DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2315" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2315" bodyend="2315"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ec9296d29f08b34497616d1540bd205" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtsi2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtsi2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2317" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2317" bodyend="2317"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7520c9035b974f23ba20bcb4eb3c934d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtss2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvtss2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert scalar SP-FP value to scalar DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2320" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2320" bodyend="2320"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70beb6e31d552cd05e66fc567d413a1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvtss2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvtss2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2322" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2322" bodyend="2322"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a894a88f3570c89902b7845f09187c4fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttpd2pi</definition>
        <argsstring>(const MmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvttpd2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert with truncation packed DP-FP values to packed dword integers (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2325" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2325" bodyend="2325"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c1d10335473c727d9b3dc5af7431883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttpd2pi</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvttpd2pi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2327" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2327" bodyend="2327"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8751b58f87dbba7d77e6c1f1491647c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvttpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert with truncation packed DP-FP values to packed qword integers (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2330" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2330" bodyend="2330"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d14a924f396c1cd5416c212a23f96b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvttpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2332" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2332" bodyend="2332"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56ad8f9ebff79bc1211006c417634ae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvttps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert with truncation packed SP-FP values to packed qword integers (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2335" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2335" bodyend="2335"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ac683a61df6f851b60af7c7a2b410f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvttps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2337" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2337" bodyend="2337"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcab0e4d34878c56985a05d7e8b3f613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>cvttsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Convert with truncation scalar DP-FP value to signed dword integer (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2340" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2340" bodyend="2340"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82ea0ff3c23af1f0ad093e340ab17d8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::cvttsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>cvttsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2342" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2342" bodyend="2342"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35885c066818e39b9cb31b4d86ac0c60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>divpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP divide (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2345" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2345" bodyend="2345"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac97cfec5f27e835d134f9b01b7754a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>divpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2347" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2347" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4faaa0e884931258e3f64057b0cf473c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>divsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar DP-FP divide (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2350" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2350" bodyend="2350"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4b2086fa03651aa48687e06ddaa0315" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::divsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>divsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2352" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2352" bodyend="2352"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06c20e382dc0efc771eec4bcf398bd0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::lfence</definition>
        <argsstring>()</argsstring>
        <name>lfence</name>
        <briefdescription>
<para>Load fence (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2355" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2355" bodyend="2355"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad2cc5bb11b889c19ef5ca42d3ebab28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maskmovdqu</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>maskmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Store selected bytes of oword (SSE2). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Target is DS:EDI. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2360" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2360" bodyend="2360"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca4488913d82b0856881569dfd2e75be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>maxpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Return maximum packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2363" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2363" bodyend="2363"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a743df8fe0871365e12f7a42e95675ac9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>maxpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2365" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2365" bodyend="2365"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a97ac870f1583f8f9dc65b1248a8e22e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>maxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Return maximum scalar DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2368" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2368" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a15f0fba8487e9a6a083059f9dd392e56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::maxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>maxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2370" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2370" bodyend="2370"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8b280bb880661c6ab60abab86d2f898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mfence</definition>
        <argsstring>()</argsstring>
        <name>mfence</name>
        <briefdescription>
<para>Memory fence (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2373" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2373" bodyend="2373"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9dbd64b66cb0eefecdb533ad9ec8425" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>minpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Return minimum packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2376" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2376" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a157821fc5ff833979725ec0583d96253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>minpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2378" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2378" bodyend="2378"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92b48a41edbb7fc5c3f6d3789742bfb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>minsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Return minimum scalar DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2381" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2381" bodyend="2381"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4b8b38e8db2e287a5fb7cf4eb8e56d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::minsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>minsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2383" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2383" bodyend="2383"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac90d33fdcbeae3092deffbd9fadfc9fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdqa</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move aligned oword (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2386" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2386" bodyend="2386"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa9386b21063b7526c2969b847b955f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdqa</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2388" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2388" bodyend="2388"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b727be864ba2e9de4f1040aea28749c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdqa</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2390" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2390" bodyend="2390"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad12fac691914ac592a4da04703f36301" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdqu</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move unaligned oword (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2393" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2393" bodyend="2393"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95a0f0adf1c324dceb4b7371ce47ca81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdqu</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2395" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2395" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae05b1d4814e56a6aaed2d8221eb94219" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdqu</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2397" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2397" bodyend="2397"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b34c7d742188646a47ef5462bf6edd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movmskps</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movmskps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Extract packed SP-FP sign mask (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2400" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2400" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a423f778347567585b87682fba7c47e29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movmskpd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movmskpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Extract packed DP-FP sign mask (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2403" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2403" bodyend="2403"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c3f1c1496ed0aac4f3e994f20f7dcc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move scalar DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2406" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2406" bodyend="2406"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fe1657e0c586605444fc50479435329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2408" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2408" bodyend="2408"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad971835b68d06541b9fc0dd7bdca1f4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2410" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2410" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c4f948ff2aa9276af6b548664061195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movapd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move aligned packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2413" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2413" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4c05b1f1daf2599576ecfe1450802a5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movapd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2415" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2415" bodyend="2415"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae88f95a6c633fe0bc060ec3a73f61b5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movapd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2417" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2417" bodyend="2417"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb9a3802137ffd2af61f3328ca1a7a7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movdq2q</definition>
        <argsstring>(const MmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movdq2q</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move qword from Xmm to Mm register (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2420" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2420" bodyend="2420"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae733e7e52774b27be97640b8047807b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movq2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>movq2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move qword from Mm to Xmm register (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2423" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2423" bodyend="2423"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedfc61f774caf25bb5e52920e442eddd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movhpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move high packed DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2426" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2426" bodyend="2426"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60920742f8f0704935a774e7bd9baf50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movhpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2428" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2428" bodyend="2428"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab34aaff253babe071661f629a27ad593" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movlpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movlpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move low packed DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2431" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2431" bodyend="2431"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad080be2c9527c1cbfe21f8e50f845b08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movlpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movlpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2433" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2433" bodyend="2433"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a08f6162da0003f2eda60ebdb9b5363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movntdq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movntdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Store oword using non-temporal hint (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2436" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2436" bodyend="2436"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa78aa185a1636c43b1717ecf0d26beae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movnti</definition>
        <argsstring>(const Mem &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>movnti</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Store store dword using non-temporal hint (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2439" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2439" bodyend="2439"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2963268c55b12fcc88d08953500806ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movntpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movntpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Store packed DP-FP values using non-temporal hint (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2442" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2442" bodyend="2442"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6e1bf01ac2ad4b9239137a17be6a067" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movupd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move unaligned packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2445" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2445" bodyend="2445"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac224b2983399517ed37cd994136b7614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movupd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2447" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2447" bodyend="2447"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a246a47fb155e5f8931f7eab04e8300d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movupd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2449" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2449" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab18d07a30e3ee02a12e97b329db098df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>mulpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP multiply (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2452" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2452" bodyend="2452"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3121db7961a468669c2ab5883446a847" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>mulpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2454" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2454" bodyend="2454"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58b74bdd23175ae79ac097bddd4037c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>mulsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar DP-FP multiply (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2457" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2457" bodyend="2457"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a027a9ca18f74c1d8cf16ca6db20c0d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>mulsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2459" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2459" bodyend="2459"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90c4634cc3fc2412764180d2ed155bf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::orpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>orpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Or for DP-FP Data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2462" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2462" bodyend="2462"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab5a9fecc0ecfccd2a4632525b138357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::orpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>orpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2464" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2464" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa976b542c04f197c4dc2a80c139536c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packsswb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>packsswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with signed saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2467" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2467" bodyend="2467"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a576e6dacbf11f44bb026b937608a3f09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packsswb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packsswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2469" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2469" bodyend="2469"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab10d0f66898140a862e8c6c5633168b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packssdw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>packssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with signed saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2472" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2472" bodyend="2472"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a951b9bca81fcb55043468ef6bf35a9c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packssdw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2474" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2474" bodyend="2474"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5f8fe0f2e68208bb47db870edb82fb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packuswb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>packuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with unsigned saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2477" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2477" bodyend="2477"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77ff6c99642e0ca321631bf9fdd7539e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packuswb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2479" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2479" bodyend="2479"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a903837f65b5ee7371e6d1262d89b8d53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed byte Add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2482" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2482" bodyend="2482"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a827599bab0a8f7757a7819961189bd5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2484" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2484" bodyend="2484"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc9898ebce5a67dde5ee13ab810ce61c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed word add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2487" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2487" bodyend="2487"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a768e0a12c047ff08be7da8067ab48a50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2489" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2489" bodyend="2489"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af611b9541a470fb015b03206627e3ea2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed dword add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2492" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2492" bodyend="2492"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93a07c5fa3d3c3519c3fc5df477e87b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2494" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2494" bodyend="2494"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a214930eabc9b96554749139ddb2df069" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>paddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed qword add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2497" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2497" bodyend="2497"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ef88bc678e9330840637bb4cf8c16a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2499" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2499" bodyend="2499"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0650f9bcaf5b91c86fd105081df1912a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed qword add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2502" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2502" bodyend="2502"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6f05451e9c8b3d54c8d197876a89547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2504" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2504" bodyend="2504"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1accbd619504682ae22a77f6e774664c5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add with saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2507" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2507" bodyend="2507"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4efef46aedac85244e2c81a93afeea0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2509" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2509" bodyend="2509"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c53d2ff187f2c5def7047590e4bca35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add with saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2512" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2512" bodyend="2512"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8bebf715054ca3e0e498d2ebf3d03c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2514" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2514" bodyend="2514"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a363552ec79358bc40173f2a7db93ae33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add unsigned with saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2517" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2517" bodyend="2517"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a924be893e7a45ddc04475f25aef58b8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2519" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2519" bodyend="2519"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b4e17702f523f9df3ca249739f2dc10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>paddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed add unsigned with saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2522" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2522" bodyend="2522"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a645f78b9107b0c2e46c1b1b52a676a76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::paddusw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>paddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2524" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2524" bodyend="2524"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb74d56b287138abc7d2d03ea6ef4126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pand</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2527" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2527" bodyend="2527"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bfdbeaa57ecf42a63cf470384009c32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pand</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2529" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2529" bodyend="2529"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3e6951b8a2f16a3bba6094191900d23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pandn</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>And-not (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2532" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2532" bodyend="2532"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36017be9e32a2a02267c3f554972fab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pandn</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2534" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2534" bodyend="2534"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba5154fbf0ace805977076b06d07e4ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <briefdescription>
<para>Spin loop hint (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2537" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2537" bodyend="2537"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c52b6e58b0b53b724cf714828c86623" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed average (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2540" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2540" bodyend="2540"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2fd4d8f98e9d81d8cd08799efc1cbcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2542" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2542" bodyend="2542"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a39a44d6d44ec5f72cc49cba2c860b555" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed average (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2545" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2545" bodyend="2545"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10031cff4e0932830baac9a04d8f680f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pavgw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2547" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2547" bodyend="2547"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a884cfb86ff739138754a98b02937511f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare bytes for equal (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2550" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2550" bodyend="2550"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a88bbd2fc0a4fa02620cd16304e8684b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2552" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2552" bodyend="2552"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee3bcd32e3aa77326446def9e67b2586" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare words for equal (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2555" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2555" bodyend="2555"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba8f1f25188ada3252b2674fdc885ec2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2557" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2557" bodyend="2557"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee2703540ab2edf9dfd0d190f82699cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare dwords for equal (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2560" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2560" bodyend="2560"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa590714657d14cb99f5c973892216259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2562" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2562" bodyend="2562"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd7ed377367c8689f9047bdfce855368" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare bytes for greater than (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2565" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2565" bodyend="2565"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ea861ddcfae240174e70e1747f35f92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2567" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2567" bodyend="2567"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36c2312c2a5359b2b43871c6cd3ca586" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare words for greater than (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2570" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2570" bodyend="2570"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81952a5ccd770bf2a0e502cae75def8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2572" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2572" bodyend="2572"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a126c3edc4bdb2b4d00c6914217f9ea00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed compare dwords for greater than (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2575" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2575" bodyend="2575"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a680cbc35fdf19c353434212a8c69a4a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2577" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2577" bodyend="2577"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74c3efbab0b5114cdb059ae8a5ae0689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrw</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract word (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2580" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2580" bodyend="2580"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c51dbf539a09f7b130b9f15539b6d8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrw</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2580" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2580" bodyend="2580"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a102f6781f6b124a5c4e22f49b19924b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Insert word (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2583" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2583" bodyend="2583"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0bdca96d090c3fb040047e6bfc7a7f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2583" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2583" bodyend="2583"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94927a6ea13d26dc991609713f0ff242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2585" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2585" bodyend="2585"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad41175523cde34afe67d0f4d6df50ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2585" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2585" bodyend="2585"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a528f9ec30c3cbe2ad0f54e6d6ecddb92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed signed integer word maximum (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2588" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2588" bodyend="2588"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a343a8dd597ef9d205f6dc0b791a68c89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2590" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2590" bodyend="2590"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7045cf159f66279017ed12c23f4e0925" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxub</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed unsigned integer byte maximum (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2593" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2593" bodyend="2593"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab80275ba7ab9126acb070a7a562af000" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxub</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2595" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2595" bodyend="2595"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac86144e6831ce229a5a81d03b5461b7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed signed integer word minimum (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2598" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2598" bodyend="2598"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1113b8a108b638882cc33db06f08be6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2600" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2600" bodyend="2600"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae7095e64f376dca20d73997fde0cd4b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminub</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed unsigned integer byte minimum (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2603" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2603" bodyend="2603"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaad62bc84bc5902a10abaaf93bf9d53b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminub</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2605" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2605" bodyend="2605"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aadc3f7e8486d75b128cf4538b4a9b31b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovmskb</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovmskb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move byte mask (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2608" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2608" bodyend="2608"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3cd1b018054e0875b4733d83ea227ed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply high (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2611" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2611" bodyend="2611"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecf0b2bce9e65183f66129061d822786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2613" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2613" bodyend="2613"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c2effbfabebf5b7835af8ec1dcb50bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply high unsigned (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2616" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2616" bodyend="2616"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9fbe4270337d4c55f57b4845d10ae7ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhuw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2618" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2618" bodyend="2618"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d89b5ea508bba0133a895b3d87f6798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmullw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply low (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2621" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2621" bodyend="2621"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3f0f6f2ba63a3e0bfa758798ab6598b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmullw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2623" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2623" bodyend="2623"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0a16f3726ddcde115ee3146e8e5e31a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmuludq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply to qword (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2626" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2626" bodyend="2626"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a716c885102f7a523908f96719bba425f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmuludq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2628" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2628" bodyend="2628"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b1f5a29572e8bffbf2d1526e5157c4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmuludq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply to qword (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2631" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2631" bodyend="2631"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a071265fc42027e851eff00a37aed0678" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmuludq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2633" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2633" bodyend="2633"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af50f9bcc7a216138a464e094c8c3d339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::por</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>por</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Or (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2636" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2636" bodyend="2636"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1b44c234ae39c6ecfbeb6dd68001965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::por</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>por</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2638" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2638" bodyend="2638"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a97021b8fdc12dd0274bb87b64b465af8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2641" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2641" bodyend="2641"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a341e1f6dc621880c83031b2f967cf123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2643" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2643" bodyend="2643"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a590b6a2ef488cd82822c857b9d2dcc79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2645" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2645" bodyend="2645"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a934a751901e2651e684372f4e9a53bca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslld</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>pslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2645" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2645" bodyend="2645"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa542c755be51ec5c9ef3f7211d433461" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2648" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2648" bodyend="2648"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a086156f21d067281596022d6b01e6c09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2650" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2650" bodyend="2650"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a63362d2e2b8ae39a73e9cf09a28705fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2652" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2652" bodyend="2652"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d3a587dd507a7a841e5b6470ef282fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllq</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2652" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2652" bodyend="2652"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23f124889c4b4a0c213d8336971ab2c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2655" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2655" bodyend="2655"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5965637cf741c23bc89fb781a8865994" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2657" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2657" bodyend="2657"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4dc476f406b8cc0adefcb7d1a990e05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2659" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2659" bodyend="2659"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee97590c994f896cf8fe61084d8eda1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psllw</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2659" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2659" bodyend="2659"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1daf0547a2947dfe97edf7011ad7bdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslldq</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>pslldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift left logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2662" bodyend="2662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad309a0248ba6cc251b2ecdaf75f80599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pslldq</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>pslldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2662" bodyend="2662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ed1911919e8dce9ef579b495210162c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right arithmetic (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2665" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2665" bodyend="2665"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fbb272a26c6c97996ada937d686d153" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2667" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2667" bodyend="2667"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d1dc5d94d5eb81a6fd0127d460442a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2669" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2669" bodyend="2669"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e9d6fda1252d0b6048d8a68c01f6c45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrad</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2669" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2669" bodyend="2669"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba397d10355c84da890904b1fd5aa8dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right arithmetic (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2672" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2672" bodyend="2672"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b31f6f7501a39772989da396afcc87e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2674" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2674" bodyend="2674"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7951585ab1ad43b145c13e338c87f105" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2676" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2676" bodyend="2676"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9ad21acc605101e4423c96f06ca1f15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psraw</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2676" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2676" bodyend="2676"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4614ee037edec8d0cd3688f42d8eec8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2679" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2679" bodyend="2679"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe9e5f18c18c01ca3db239a12ecacdc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2681" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2681" bodyend="2681"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24616b061443177742bee2b4d0854ae3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2684" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2684" bodyend="2684"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe669bd4e715b09bd55dcce6ef6e1774" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2686" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2686" bodyend="2686"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a014420d63fe871a9cf497c999211d7b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2689" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2689" bodyend="2689"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ce7d30022c2880a79c6e644630219b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2691" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2691" bodyend="2691"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a315d9a93448db72ca47a5e1c51db3908" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubq</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2694" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2694" bodyend="2694"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0873f1ee7b44e27532fb14ce66969a74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubq</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2696" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2696" bodyend="2696"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af10d67ea40c3fe8a97a388bf74a889fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2699" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2699" bodyend="2699"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1addff194dcb93942807f5cc2aff4c3ee5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2701" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2701" bodyend="2701"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13cc85e975a29c03cfd2ff4819f53b93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply and add (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2704" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2704" bodyend="2704"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17a750d54570abd02e1edf8adffc4b81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2706" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2706" bodyend="2706"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca074118efd81dc2b608470b68fd731a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Shuffle packed dwords (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2709" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2709" bodyend="2709"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa3429931ba73b211211aa4bddec0a9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2709" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2709" bodyend="2709"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc1e9b64fa164fb2a71966c1b39c7af3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2711" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2711" bodyend="2711"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dd73733c4b2c8e6a6f36bbf1d3770fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2711" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2711" bodyend="2711"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a420de56e952575b9ccfecb31146bee74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Shuffle packed high words (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2714" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2714" bodyend="2714"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34fab5da71b2f89493bce3d5a3c6371b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2714" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2714" bodyend="2714"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9ecf3584c799ca177c850f662a596b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2716" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2716" bodyend="2716"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62e389ed19c1f52dfa405d3469647a15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2716" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2716" bodyend="2716"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d2f19c6f5433998e9b61597494fb618" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Shuffle packed low Words (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2719" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2719" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23b94f4d69c07494a7ccc7988e06fc0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2719" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2719" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b0017cc8f3d5fffb0a1420124db9b69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2721" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2721" bodyend="2721"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa5c5dba1ab496d4e891a7d4831ceb91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2721" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2721" bodyend="2721"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1affec6c9cedb4d7cfd5edd01da86ad1a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2724" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2724" bodyend="2724"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb12d7c9ef5b5ddf189484b61b4b3088" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2726" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2726" bodyend="2726"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af539a7e215bec2cee742f4b077b80223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2728" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2728" bodyend="2728"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acde86da88b4ed8fb42e682d91cafabfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrld</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2728" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2728" bodyend="2728"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a506a935d74a44277cff8f96d5a6c1230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2731" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2731" bodyend="2731"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9001762c75286c118179d416bd1cf7da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2733" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2733" bodyend="2733"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a182721b2de257bdde0d40852ee6deb18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2735" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2735" bodyend="2735"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c05d7bbc66e42bd5de154c8098944b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlq</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2735" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2735" bodyend="2735"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f17518f0389a06a5e8635f0b156972f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrldq</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>OWord shift right logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2738" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2738" bodyend="2738"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb71376178efdcdd71d6571014375835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrldq</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psrldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2738" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2738" bodyend="2738"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17d23fe6b9d1b6f53be68c1274505a8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shift right logical (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2741" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2741" bodyend="2741"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeeac7b69374ce677488cfa4a7c4d2089" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2743" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2743" bodyend="2743"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08dd9d1fdb247337c21c6a214a0ce600" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const Imm &amp;o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2745" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2745" bodyend="2745"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae45df89cfc1258a76afbf546111529f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psrlw</definition>
        <argsstring>(const XmmReg &amp;o0, int o1)</argsstring>
        <name>psrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2745" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2745" bodyend="2745"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d8006863446801bbf21e76029a620d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2748" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2748" bodyend="2748"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a473185b3c0c4beb7d89b725f71ad3a48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2750" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2750" bodyend="2750"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a936082c2adfb6f6b38bbb4bb814f4839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2753" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2753" bodyend="2753"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01ecd6f6d1f9e2fba162205a2fc8ca05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2755" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2755" bodyend="2755"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbe4c6727104e8cab8d53a8dd7df23a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with unsigned saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2758" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2758" bodyend="2758"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d9b81bd302c60ef26c0ea7d548143ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2760" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2760" bodyend="2760"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d21cc312714e044f93726516c9d624b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed subtract with unsigned saturation (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2763" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2763" bodyend="2763"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad38201988f57265a9c1cf0d8349b87ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psubusw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2765" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2765" bodyend="2765"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81273ed2f2138b7321ff6b84fa3d51b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2768" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2768" bodyend="2768"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d76a2bd9f65d7c6e1b336855aca6c5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2770" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2770" bodyend="2770"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2706c8952cc4155de813fdb6d9697b78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2773" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2773" bodyend="2773"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2179fa12d7456db007a46d922ee5b160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2775" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2775" bodyend="2775"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad93f9db0d12b955b48367ac7d8a9ff2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2778" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2778" bodyend="2778"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d49efa68b776d4d023240f97b2196c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2780" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2780" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54cb8da0c8bd2322ea32702203d2f128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpckhqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack high data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2783" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2783" bodyend="2783"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b15acc24850405092fc074bee44e4e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckhqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckhqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2785" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2785" bodyend="2785"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a571d965a858dd83f86ed4e885a76b967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack low data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2788" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2788" bodyend="2788"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea3df5e9d74fdb7b087e674262324b42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2790" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2790" bodyend="2790"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aebe4df740a06842ffec90aec395c4c76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack low data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2793" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2793" bodyend="2793"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb9573644379d89dffafaa8f8305bce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2795" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2795" bodyend="2795"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24e006c37983f566652468d7897aec51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack low data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2798" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2798" bodyend="2798"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad349aba71bfbe08b08e76197d6cf1981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpckldq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2800" bodyend="2800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03b18be0df803fad90a1118ef09a2017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>punpcklqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack low data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2803" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2803" bodyend="2803"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85847b6063670b46bf99a291efc79377" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::punpcklqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>punpcklqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2805" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2805" bodyend="2805"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae1a1a01b64075ff0be490de8fc2f5681" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pxor</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Xor (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2808" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2808" bodyend="2808"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a0204368ab7bbb0e767afe7bbbabedc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pxor</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2810" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2810" bodyend="2810"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6998ebdb00659e9c3aaf658bd7fae8e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Shuffle DP-FP (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2813" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2813" bodyend="2813"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3092224d2a77a47793eb5b0a5395355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>shufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2813" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2813" bodyend="2813"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a636f13ee29e0415f6a363fe17230628a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>shufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2815" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2815" bodyend="2815"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a013a4c57172df2c51bad350d858536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>shufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2815" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2815" bodyend="2815"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a714df0767868cca5915654b13a886ff7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>sqrtpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compute square roots of packed DP-FP Values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2818" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2818" bodyend="2818"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7b99f5d7091810519ca3b5409d25c1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>sqrtpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2820" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2820" bodyend="2820"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0844bca6aee89271e66032b3d5b194ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>sqrtsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compute square root of scalar DP-FP value (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2823" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2823" bodyend="2823"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3294b0ad5d88fa9c996481ca7c29d8b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sqrtsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>sqrtsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2825" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2825" bodyend="2825"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a599d69565902f9c87517504084cb23cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>subpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2828" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2828" bodyend="2828"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e0c94902d7c3da7c6ec46ef5e7f776f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>subpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2830" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2830" bodyend="2830"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad069c1fc8e3285bd26909eddad107553" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>subsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar DP-FP subtract (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2833" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2833" bodyend="2833"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2a4ec38cf4e876f34eac05bc3a79607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::subsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>subsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2835" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2835" bodyend="2835"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80330d759287846bf519e56347240eac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ucomisd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>ucomisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Scalar unordered DP-FP compare and set EFLAGS (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2838" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2838" bodyend="2838"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8746cf5e5942afc461b7ccb5b7b76c66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ucomisd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>ucomisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2840" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2840" bodyend="2840"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e177785d3def1330a0c7455a5bd86f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpckhpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>unpckhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack and interleave high packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2843" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2843" bodyend="2843"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a520b66b0d328d48546eece18ddd9dd9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpckhpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>unpckhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2845" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2845" bodyend="2845"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5927198e0ab1b1b593106f77ce7b1996" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpcklpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>unpcklpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Unpack and interleave low packed DP-FP values (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2848" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2848" bodyend="2848"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa7a6edf658e1fd250ea9fb02a930bd18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::unpcklpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>unpcklpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2850" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2850" bodyend="2850"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8ff8afa7c49acf2e987e6042389b4f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xorpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>xorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Xor for DP-FP data (SSE2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2853" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2853" bodyend="2853"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9e565733d6fce1ed761e31f1e88d497" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::xorpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>xorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2855" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2855" bodyend="2855"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af79fadba4388af8ab5262b0a6d596ac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>addsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP add/subtract (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2862" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2862" bodyend="2862"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a930ad30139b5fa4a625b85c205be631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>addsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2864" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2864" bodyend="2864"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0f0d24ecf0458d2ba5827e452b811a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>addsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP add/subtract (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2867" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2867" bodyend="2867"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30925c17cf0fd04064adcff454bd4099" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::addsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>addsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2869" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2869" bodyend="2869"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e93fa8b5f78df0b94930918d287eed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::fisttp</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>fisttp</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
<para>Store integer with truncation (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2872" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2872" bodyend="2872"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36727effd4148c1b2252765feaeb27ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::haddpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>haddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP horizontal add (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2875" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2875" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c3f3912fd0f734fc2c4b9084965ab1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::haddpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>haddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2877" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2877" bodyend="2877"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7301eee68732b30c75a8e349fc6962e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::haddps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>haddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP horizontal add (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2880" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2880" bodyend="2880"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab59ba9c9eadd368b6c49872d6f848bed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::haddps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>haddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2882" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2882" bodyend="2882"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bbe915def622bb482d230568518af12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::hsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>hsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed DP-FP horizontal subtract (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2885" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2885" bodyend="2885"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65329f0a6476eb3eb9d5e0d8a78eefa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::hsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>hsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2887" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2887" bodyend="2887"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cbf52ff00a543b3192c85fb586e949d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::hsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>hsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed SP-FP horizontal subtract (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2890" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2890" bodyend="2890"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2efe5bdf095181c258777a730d962de6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::hsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>hsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2892" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2892" bodyend="2892"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8efb84c61f61dce456e21473eef13097" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::lddqu</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>lddqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Load unaligned integer 128 bits (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2895" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2895" bodyend="2895"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a218c80e9a9a250ee46e492c35790f1f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::monitor</definition>
        <argsstring>()</argsstring>
        <name>monitor</name>
        <briefdescription>
<para>Setup monitor address (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2898" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2898" bodyend="2898"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acdd918bb75969394540f8e991d84b115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movddup</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movddup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move one DP-FP and duplicate (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2901" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2901" bodyend="2901"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26111636b975cd84fb19299c4d2f93ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movddup</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movddup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2903" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2903" bodyend="2903"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a378847bc542df777b0ca562a4f5813a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movshdup</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movshdup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move packed SP-FP high and duplicate (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2906" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2906" bodyend="2906"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19a262f1c0612a5bdebac15ceefba242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movshdup</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movshdup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2908" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2908" bodyend="2908"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6538b05dc8e42a2357fcabcda667519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsldup</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>movsldup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Move packed SP-FP low and duplicate (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2911" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2911" bodyend="2911"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc0e5f12fb343bab7094dbb699da47f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movsldup</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movsldup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2913" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2913" bodyend="2913"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeeb927331cae84bf3cc940fab5896ae6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mwait</definition>
        <argsstring>()</argsstring>
        <name>mwait</name>
        <briefdescription>
<para>Monitor wait (SSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2916" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2916" bodyend="2916"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa44275cd2b22e7590d51d6ca2622695a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sign (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2923" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2923" bodyend="2923"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb4c4618dda5e7fca4c3bcabfcdda8ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2925" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2925" bodyend="2925"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb93e24e1d09f12e18c18d131112f355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sign (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2928" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2928" bodyend="2928"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab10725cd8ed21adeeb11934139b7626d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2930" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2930" bodyend="2930"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b8ddb6d347649bbf38b0e34b77064b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sign (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2933" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2933" bodyend="2933"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02f9e77e6737a54a11bfda097228f228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2935" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2935" bodyend="2935"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad30dfa6133cc020e31c29b13f83957cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sign (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2938" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2938" bodyend="2938"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc47412a9a0804780fb322cc2c913233" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2940" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2940" bodyend="2940"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ecfdf29e2a82c59c25bea16d011fb54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>psignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sign (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2943" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2943" bodyend="2943"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85b71d8f8df9e4aae4543a97939b3810" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2945" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2945" bodyend="2945"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2161806ced00128cf549656bdad162d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>psignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed sign (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2948" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2948" bodyend="2948"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8447ea4025aa08c05206e8f7afcc24ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::psignd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>psignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2950" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2950" bodyend="2950"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a72de60bcfa226c631e630fd9df223b3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>phaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal add (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2953" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2953" bodyend="2953"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58c76bfc9c1ff3d248b7a74a161d2307" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2955" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2955" bodyend="2955"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcd417893efadabfaf7b93933e4fd9e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal add (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2958" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2958" bodyend="2958"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b73448c2fe534eb842ad0eb719b5032" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2960" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2960" bodyend="2960"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a78932b83e50eb16d06e859824940b4f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>phaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal add (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2963" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2963" bodyend="2963"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99254be8df0201a3f94d3020d826985e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2965" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2965" bodyend="2965"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b9c624af7cad57c14d6d78d50ea1fbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal add (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2968" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2968" bodyend="2968"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd730fa489c3fbc54b107b1a3961f49b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2970" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2970" bodyend="2970"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a9407d72cd191061aee62f46a8623b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>phaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal add and saturate (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2973" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2973" bodyend="2973"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4bc430ad861e9d89aff4c007ed24124b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2975" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2975" bodyend="2975"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a78d9867520f0175c8de51ad5c3332e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal add and saturate (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2978" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2978" bodyend="2978"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f0bc0494d348b6ef578840bed25902f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phaddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2980" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2980" bodyend="2980"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3f4f33bda7f6493c3d4c4ecdd7d9eb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>phsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal subtract (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2983" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2983" bodyend="2983"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae74cb6c79fbde8fa9e316e5b1faa48cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2985" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2985" bodyend="2985"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5bf159751a09c82bdc85c69bfd86966" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal subtract (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2988" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2988" bodyend="2988"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8719e60e176d286148a8271b2dc882c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2990" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2990" bodyend="2990"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2766372a6d61eb8a0a114376516ff4f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>phsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal subtract (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2993" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2993" bodyend="2993"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cfe004332adb535908983b9ffe05f0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2995" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2995" bodyend="2995"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6bf9068269d0ba48ee126ff4685630cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal subtract (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="2998" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="2998" bodyend="2998"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92b17a05930473d526c8efcc8af68fbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3000" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3000" bodyend="3000"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18d0e203015ccec5648f206bd5ebd683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>phsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal subtract and saturate (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3003" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3003" bodyend="3003"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedd8cec51fdb4de5d0887ffacfd5e25f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3005" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3005" bodyend="3005"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86c8e56d52f95d55574ebb012a121f34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal subtract and saturate (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3008" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3008" bodyend="3008"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabe6f3d4c191faeceaa510dc62683ce4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phsubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3010" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3010" bodyend="3010"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19c292bf19f9215e8db3e49145c30bc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddubsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Multiply and add packed signed and unsigned bytes (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3013" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3013" bodyend="3013"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13e34ae5fca85c1a9f23b0ad128c60f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddubsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3015" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3015" bodyend="3015"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34a59487a9207674185f586a53f02b21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Multiply and add packed signed and unsigned bytes (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3018" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3018" bodyend="3018"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6d7d8e577dd517b70da709fa06dda4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaddubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3020" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3020" bodyend="3020"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaed9ac4b4e4409e991b66e77e868d672" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed absolute value (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3023" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3023" bodyend="3023"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5ec1ef27ec14ef499573d83c177379b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3025" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3025" bodyend="3025"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4857e9b9d9f58c2fee2d544e6a551ed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed absolute value (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3028" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3028" bodyend="3028"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0741bccb3c62aaca868a0e2c7166bd9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3030" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3030" bodyend="3030"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36de3ecd267a9989377efa4d441460de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed absolute value (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3033" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3033" bodyend="3033"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9841512daf6120f450c771ad547a218" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3035" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3035" bodyend="3035"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a648537f9bfc5bcca0b4b493c3de1770f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed absolute value (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3038" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3038" bodyend="3038"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac0901e89705e452f7dafe46590e53bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3040" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3040" bodyend="3040"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fc24ddef92ce81ffa6e244d1c9edbd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsd</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed absolute value (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3043" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3043" bodyend="3043"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa98afbd8e00619264ce2f46ff6ba8f82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsd</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3045" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3045" bodyend="3045"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28b92ba355a81ef8ee6927af5f5cdac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed absolute value (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3048" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3048" bodyend="3048"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8f607c302e921cccfbbdc7eb3dcdf69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pabsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3050" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3050" bodyend="3050"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2aab58b03d498b0f401bd2a4ad6378ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhrsw</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply high with round and scale (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3053" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3053" bodyend="3053"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac4db2c03362a3b196116960926e2cea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhrsw</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3055" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3055" bodyend="3055"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaf78a64a999aaf9a4237eb969e26d9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhrsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed multiply high with round and scale (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3058" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3058" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19f22cef6f2a80052261dec1064b609e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulhrsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3060" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3060" bodyend="3060"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24c1107e633aee812cc01d5a3c843d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufb</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1)</argsstring>
        <name>pshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shuffle bytes (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3063" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3063" bodyend="3063"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9d869b3f9003cabb9d2efc37cc37885" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufb</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3065" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3065" bodyend="3065"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adefb81a0ceed75bde1244b80b6c80f20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed shuffle bytes (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3068" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3068" bodyend="3068"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3716df33e059c8c1881245c42285f6a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pshufb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3070" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3070" bodyend="3070"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7efc4555593d9353a37d0af87bd01f7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed shuffle bytes (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3073" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3073" bodyend="3073"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a940a4381cc87568f685c782214b16f12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const MmReg &amp;o0, const MmReg &amp;o1, int o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3073" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3073" bodyend="3073"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac64b289129a07af153106dae3e4b4e82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3075" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3075" bodyend="3075"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb3deea8cc129dcffc3ce8de28bfed94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const MmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1MmReg" kindref="compound">MmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3075" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3075" bodyend="3075"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a628a5e9b99d9639c84bcd9696f04ee38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed shuffle bytes (SSSE3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3078" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3078" bodyend="3078"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f30d5345b286720484d43237a93b283" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3078" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3078" bodyend="3078"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a63c8b1c16f640542c0a6cff98ef32850" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3080" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3080" bodyend="3080"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b67d9cc2cbc4411331fdc08c03fe478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::palignr</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>palignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3080" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3080" bodyend="3080"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa078fa4e03ad648be4e56223b4feae07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>blendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Blend packed DP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3087" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3087" bodyend="3087"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3d6975fd67e70918b68bb0b889c2cb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>blendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3087" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3087" bodyend="3087"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c8849b3ac70e99ac9d592957c185fd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>blendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3089" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3089" bodyend="3089"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21c3a1965d7068dbbe868e09ce927900" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>blendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3089" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3089" bodyend="3089"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7864078be39ff19f71a3a5c1dae8bf67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>blendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Blend packed SP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3092" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3092" bodyend="3092"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a205bcfdd18dd51907ebb4367145698c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>blendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3092" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3092" bodyend="3092"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad02614b24ebb17202d0ab2b0149308ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>blendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3094" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3094" bodyend="3094"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2644d15f2332987cbd233e270eb21e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>blendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3094" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3094" bodyend="3094"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a684786ae6fdae41735db543f0791bc94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendvpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>blendvpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Variable blend packed DP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3097" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3097" bodyend="3097"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79d59cbc02b571114dc23fbdc4394656" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendvpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>blendvpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3099" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3099" bodyend="3099"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c8936aca362113587ae28323cdb7bea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendvps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>blendvps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Variable blend packed SP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3102" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3102" bodyend="3102"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafee6101429abb8e39cff586b62fdc5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blendvps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>blendvps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3104" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3104" bodyend="3104"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1edc248cacb5c41f915d62a1aa3e97e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>dppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Dot product of packed DP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3107" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3107" bodyend="3107"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52b7a7ae4041b10c35fa1f6b624052c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>dppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3107" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3107" bodyend="3107"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30455597f12647769482c45ae3aa50db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dppd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>dppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3109" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3109" bodyend="3109"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11fa32651d8a738c675d5fc441c93d74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dppd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>dppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3109" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3109" bodyend="3109"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab80aede68af6ecd54555f9daa6ff050e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>dpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Dot product of packed SP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3112" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3112" bodyend="3112"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a59882e63f112841c9b31cc3edffcde4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>dpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3112" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3112" bodyend="3112"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab413d4464917f185c1dca4fb27b67116" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dpps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>dpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3114" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3114" bodyend="3114"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a962e3fb858a4d7e7949b82ffc50c8585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::dpps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>dpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3114" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3114" bodyend="3114"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af116bc5e349673b53fb56a5e3a9cd8b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::extractps</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>extractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract packed SP-FP value (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3117" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3117" bodyend="3117"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a998a0c29f6dc88b9a9f7cf99af76bec2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::extractps</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>extractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3117" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3117" bodyend="3117"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd83fce70ea7200d6384dc6381568b39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::extractps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>extractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3119" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3119" bodyend="3119"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab22c745d1db1eb7d86e2299731514bcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::extractps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>extractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3119" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3119" bodyend="3119"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac465f359d830843b27d2393673a100fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::movntdqa</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>movntdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Load oword non-temporal aligned hint (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3122" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3122" bodyend="3122"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a103106269cd310496f750b506a08a74a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>mpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Compute multiple packed sums of absolute difference (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3125" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3125" bodyend="3125"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab66fb37934ea83a227901141de3cda57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>mpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3125" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3125" bodyend="3125"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2924ba4f961f9564f6b1f8fad6233f2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>mpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3127" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3127" bodyend="3127"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab368a5beea2ec5bdd163c635f2c38793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>mpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3127" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3127" bodyend="3127"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4285b24766ac4001060cc9b68ff6fe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packusdw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>packusdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Pack with unsigned saturation (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3130" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3130" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacd4bd5b64a6843b333e6ea8df63b019" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::packusdw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>packusdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3132" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3132" bodyend="3132"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2afcf846845781b4402017ffc45fba4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pblendvb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pblendvb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Variable blend packed bytes (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3135" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3135" bodyend="3135"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a263ad44156d58cedefff71a4bddc350c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pblendvb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pblendvb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3137" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3137" bodyend="3137"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17e09b8eae53bea01776b0784ff3a630" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Blend packed words (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3140" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3140" bodyend="3140"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98649b98d6981cf07d9eb0874696d414" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3140" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3140" bodyend="3140"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae55e60acc23edbeaea0d84553469d29c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3142" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3142" bodyend="3142"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ef05338a00c3f1b99140d07363b0448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3142" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3142" bodyend="3142"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d1bf7a9b3a4ddb8a609e7b942e2947c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpeqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compare packed qword data for equal (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3145" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3145" bodyend="3145"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a380562c098fb9a58bfd85945b092f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpeqq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpeqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3147" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3147" bodyend="3147"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5edf15feace7075dcc97b51ce7b54c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrb</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract byte (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3150" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3150" bodyend="3150"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a584f0128624f6d7e1f5721e667a3d3f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrb</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3150" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3150" bodyend="3150"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc91c69f3d66554be3afceb0cf6c1c89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrb</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3152" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3152" bodyend="3152"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96af9193a537b8f155cac156aca8f6c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrb</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3152" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3152" bodyend="3152"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56821453ab19683155133e80266e926e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract dword (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3155" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3155" bodyend="3155"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abec906e294b6d3bcffae6ef66f55950d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3155" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3155" bodyend="3155"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a961ec929e9073a7481bb640523e76c29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3157" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3157" bodyend="3157"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d21d4805ede48c83a02fde333c7c70d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3157" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3157" bodyend="3157"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac1ece4cb778c208659c2514f8cc58a16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrq</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract qword (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3160" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3160" bodyend="3160"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6c09096a4e1b6cba4fe13cbd982df51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrq</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3160" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3160" bodyend="3160"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61214a30ba3e862312da126958e1f1da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3162" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3162" bodyend="3162"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a119483bd70ac49180de6b56a79e954bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3162" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3162" bodyend="3162"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a62853abe5e79d657443bdbe7b6733d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrw</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Extract word (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3165" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3165" bodyend="3165"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27a30d77663952a3977baedebcfb9ad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pextrw</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3165" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3165" bodyend="3165"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af5fa5350bad4ea90c2a6b9086dde4849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phminposuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>phminposuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed horizontal word minimum (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3168" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3168" bodyend="3168"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae51a0c2b68bade5a5aea23c1b5b23a4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::phminposuw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>phminposuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3170" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3170" bodyend="3170"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85bbd19193f8f1e3ed9682c4c83469af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Insert byte (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3173" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3173" bodyend="3173"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a896c1c936efc6441076c6b4b521a0e78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>pinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3173" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3173" bodyend="3173"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae05b3e16d2a77873c0284dd1b73a92b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3175" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3175" bodyend="3175"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a506eda345964db4ae45bbd4693f7488c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3175" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3175" bodyend="3175"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a585373816acbe6be43070c2d11bb7e7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Insert dword (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3178" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3178" bodyend="3178"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6d30927ada77add116cbdae6fe2a44b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>pinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3178" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3178" bodyend="3178"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a308377a0968644423f0581862df94157" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3180" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3180" bodyend="3180"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83149ffcdb34caa2133ccb98a377ad1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3180" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3180" bodyend="3180"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac5bb3d272b361ad825a564a1f654807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrq</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Insert qword (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3183" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3183" bodyend="3183"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa26fccd8d5eb76f81f7abd3fa500519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrq</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>pinsrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3183" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3183" bodyend="3183"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcf75160fe6704753dfadd64c9226056" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pinsrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3185" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3185" bodyend="3185"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3496949ad291341d76fdbaed4a043889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pinsrq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pinsrq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3185" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3185" bodyend="3185"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26c2aad0b743389dcdf4365960292851" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaxuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Maximum of packed word integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3188" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3188" bodyend="3188"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc63f449c478472a7ba813b5985b902f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxuw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3190" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3190" bodyend="3190"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5db2c89280e73ba5b95778bfa2a7a871" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaxsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Maximum of packed signed byte integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3193" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3193" bodyend="3193"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe729d5df3304581281a30fb9aade811" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3195" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3195" bodyend="3195"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb7f88c10bc7cef61a8f39abd6a709fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Maximum of packed signed dword integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3198" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3198" bodyend="3198"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a277ccc805cc337b61a6907dd7a84652e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3200" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3200" bodyend="3200"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9dbe12976e76ebd60333836fcba87f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxud</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmaxud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Maximum of packed unsigned dword integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3203" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3203" bodyend="3203"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11bb6955b1a3606c47a577f0e56f5695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmaxud</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmaxud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3205" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3205" bodyend="3205"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4737cc38da378a4cb1b5546ba6441fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pminsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Minimum of packed signed byte integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3208" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3208" bodyend="3208"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa550fd10cc0ed21489091d33fbb88f08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3210" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3210" bodyend="3210"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4797c789b617f65cb4c15d34f7e1098d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pminuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Minimum of packed word integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3213" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3213" bodyend="3213"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a114f17300690d9425873373b2022304b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminuw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3215" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3215" bodyend="3215"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6467560b5f9fdafdd1c2655fffbc36ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminud</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pminud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Minimum of packed dword integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3218" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3218" bodyend="3218"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0a6779d3f74401dcdbc4f2081bea0a05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminud</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3220" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3220" bodyend="3220"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7103c5ded68920fa9e4929070e48c3d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Minimum of packed dword integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3223" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3223" bodyend="3223"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff586ad5c2c1fe007d75e647ddf43198" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pminsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3225" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3225" bodyend="3225"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae486864abff3913d2b8d5b49ef6ef99e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovsxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with sign extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3228" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3228" bodyend="3228"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3a914363794eb95f2b34cc90c07b12af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovsxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3230" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3230" bodyend="3230"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4cbea0e9812b7fb5869c68e6e6a9e618" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovsxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with sign extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3233" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3233" bodyend="3233"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12c32471c4a8b9f2c169eac58f36f3b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovsxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3235" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3235" bodyend="3235"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2cd8f31ba691946ad70d2db4a9002cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovsxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with sign extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3238" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3238" bodyend="3238"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8169596331d69bbbfbcf0cb5067dc69d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovsxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3240" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3240" bodyend="3240"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3fb64ac95151ab93b94c6e4a35bc0f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovsxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with sign extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3243" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3243" bodyend="3243"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a961dd8ea2607e01ab759178c3b26c04e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovsxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3245" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3245" bodyend="3245"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74020a94c59d5d1dde906594cb67148a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovsxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>(SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3248" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3248" bodyend="3248"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b9344f1a80a02892934be60005d1049" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovsxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3250" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3250" bodyend="3250"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5cf4cf618d721480c62903fcf7062b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovsxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>(SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3253" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3253" bodyend="3253"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4060e97971ce582234c02921804d87e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovsxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovsxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3255" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3255" bodyend="3255"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4477a5ae8bb9ecbba29c75abead15daf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovzxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with zero extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3258" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3258" bodyend="3258"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adebd7984ffdf55c0d7ba93b7e1a7ca75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovzxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3260" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3260" bodyend="3260"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af81f2d61b81a56ca8478e171940a0df7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovzxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with zero extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3263" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3263" bodyend="3263"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae33411152102f0f9cfd277ddb3d9acd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovzxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3265" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3265" bodyend="3265"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5817de4ab3ae2d2d5d64dc46de698665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovzxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with zero extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3268" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3268" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3ac8f6b5a8125f14b455b3a2ffb54fea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovzxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3270" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3270" bodyend="3270"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129012abf702a2f8bb491fd023b23720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovzxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Packed move with zero extend (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3273" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3273" bodyend="3273"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5382c0f290c115a852264c1317a263c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovzxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3275" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3275" bodyend="3275"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a828c31b54542e3f3f09f88ea1a59c6e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovzxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>(SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3278" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3278" bodyend="3278"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81b1e3618a465cad1a07f9ab3411112f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovzxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3280" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3280" bodyend="3280"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab5a495937b56fd1e743765b6bbb36896" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmovzxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>(SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3283" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3283" bodyend="3283"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc492612fb97622699a6c825b241ab49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmovzxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmovzxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3285" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3285" bodyend="3285"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a405e89d93473994c6fcc1192e121baed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmuldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmuldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Multiply packed signed qword integers (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3288" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3288" bodyend="3288"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb5a7615c6b7db74aa50ac058a9d41fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmuldq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmuldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3290" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3290" bodyend="3290"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a846af1ff224b4feed650f9704343bda0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pmulld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Multiply packed signed integers and store low result (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3293" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3293" bodyend="3293"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80e07764f04127b3be50c6dbac955115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pmulld</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pmulld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3295" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3295" bodyend="3295"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e6f0aeca4a62d20dbafbf8b52a85d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ptest</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>ptest</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Logical compare (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3298" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3298" bodyend="3298"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a831d0904c51a4dcae606c54c5d223592" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::ptest</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>ptest</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3300" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3300" bodyend="3300"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a398d772482d6c16c52a771a6b69c3ab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Round packed SP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3303" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3303" bodyend="3303"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc1ec73594cb14095e772d67f32483da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>roundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3303" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3303" bodyend="3303"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6e18cf5b501d1d019ed955745adaa3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3305" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3305" bodyend="3305"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad398af316b2719010379f4e9f2a4c519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>roundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3305" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3305" bodyend="3305"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42b15924d329dbc5a66a76fb4c678051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Round scalar SP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3308" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3308" bodyend="3308"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82b3b7313483523c04aa0bdbf5bb3fbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>roundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3308" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3308" bodyend="3308"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8364b72851086dfad1f0ff978206f31f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3310" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3310" bodyend="3310"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52b9e1dba3b50625351d60990f8749c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>roundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3310" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3310" bodyend="3310"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2950ef3bc38c3e672c2d2b6f75af40cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Round packed DP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3313" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3313" bodyend="3313"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82bd25053ceca089059fd379f0ac82ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>roundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3313" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3313" bodyend="3313"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60be84c619925fc229ea9849c01118aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3315" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3315" bodyend="3315"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c39878c7f647fc57fb9676dcaeadb9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>roundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3315" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3315" bodyend="3315"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ef2d060625be52e17c8c2f02b5dbb00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Round scalar DP-FP values (SSE4.1). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3318" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3318" bodyend="3318"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acf903b02ed4b03cff4a0ce22885d01a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>roundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3318" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3318" bodyend="3318"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad4a3dfec2ace0305ff7fa11664c536a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>roundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3320" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3320" bodyend="3320"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8f2d83c124460cd8e56f54586782626" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::roundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>roundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3320" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3320" bodyend="3320"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d1fab56942fd793475e6897f8ad711b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed compare explicit length strings, return index (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3327" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3327" bodyend="3327"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a778af90f62b5eb0305f1b2241a390db8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3327" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3327" bodyend="3327"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab73d5c3e40b980730da10af3841be5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3329" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3329" bodyend="3329"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f7ae183db975ba472a528073cbeabc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3329" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3329" bodyend="3329"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2b21c454ae0658bbde448f5d228c4f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed compare explicit length strings, return mask (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3332" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3332" bodyend="3332"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc23b3afbad1399e2f25b689fb1cda13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3332" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3332" bodyend="3332"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6e94470f48a0eddf2525dd6000c9f254" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3334" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3334" bodyend="3334"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9eaf06f449619aff5e08339ade7fd0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3334" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3334" bodyend="3334"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ca738291123fd8f4c78fb680b1d61a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed compare implicit length strings, return index (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3337" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3337" bodyend="3337"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f09058db4cce2f9d943088b865bd967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3337" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3337" bodyend="3337"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ac5ff69ef2940fa31987296f6a42e53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3339" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3339" bodyend="3339"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b56d26b15f9fdc33e0f73547dfb02ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3339" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3339" bodyend="3339"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a98b72b5e538cd2ddbbe3a47d933bfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Packed compare implicit length strings, return mask (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3342" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3342" bodyend="3342"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af574bd64ea63ff4b38e2941bc9c35b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3342" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3342" bodyend="3342"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d9e1b5d715e4a04c21e8e52da829197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3344" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3344" bodyend="3344"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3e26316a9229e0080f1f895c123aeafc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3344" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3344" bodyend="3344"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee63d248fd7aa0599634a0cdf620dbf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>pcmpgtq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Compare packed data for greater than (SSE4.2). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3347" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3347" bodyend="3347"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8aae0ef41b76629f74f1673cd4abfb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pcmpgtq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>pcmpgtq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3349" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3349" bodyend="3349"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0289a9566a7229ce4cf7ad8a09f2787" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesdec</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>aesdec</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Perform a single round of the AES decryption flow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3356" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3356" bodyend="3356"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74e74f3f914969fcfe01c57271926514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesdec</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>aesdec</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3358" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3358" bodyend="3358"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71cdf864316de41fcc2ab74274dcd21c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesdeclast</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>aesdeclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Perform the last round of the AES decryption flow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3361" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3361" bodyend="3361"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee601847c1c658ed9bfacb4f37e80911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesdeclast</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>aesdeclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3363" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3363" bodyend="3363"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c19d5c6b84495e1b32fa1ef827a5090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesenc</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>aesenc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Perform a single round of the AES encryption flow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3366" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3366" bodyend="3366"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac311ff7ca7e2fa64a0292cb4385532ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesenc</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>aesenc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3368" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3368" bodyend="3368"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad53c07f087b7119de6eda91b575174b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesenclast</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>aesenclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Perform the last round of the AES encryption flow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3371" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3371" bodyend="3371"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5ca25dc97da1a704a86724580f73d5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesenclast</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>aesenclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3373" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3373" bodyend="3373"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac9f0c71ca41f98f31914bd5f40731dc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesimc</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>aesimc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Perform the InvMixColumns transformation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3376" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3376" bodyend="3376"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a587f093ba4d0d1ec059c45470aaeedf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aesimc</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>aesimc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3378" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3378" bodyend="3378"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a714d9f1b39e6a3d52d324ebb800b4fc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>aeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Assist in expanding the AES cipher key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3381" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3381" bodyend="3381"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5a85a38e0b6b01a17472f6fd38c4b60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>aeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3381" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3381" bodyend="3381"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7bb8684863db50c9c30510fab079e44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>aeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3383" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3383" bodyend="3383"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8808fd9f6a6d20aaae726ac65029ad02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::aeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>aeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3383" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3383" bodyend="3383"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b0d7bf8ef77e5f3524055af4d8fff1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Carry-less multiplication quadword. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3390" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3390" bodyend="3390"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00c15738958eb921c789729d9c9d60aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>pclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3390" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3390" bodyend="3390"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0536059b069571a5505a68911b3fcfcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>pclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3392" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3392" bodyend="3392"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55d07125cfdbda7c42b4346de307a9b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>pclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3392" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3392" bodyend="3392"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5357d620360a9added9a800936bd866b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3398" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3398" bodyend="3398"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c17dcdbf6998916b1145ed27ef878d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3399" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3399" bodyend="3399"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a058443d78d9fcfb84ceb5909aada180c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3400" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3400" bodyend="3400"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a959a2b0ffe336885314910e47f5ef497" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3401" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3401" bodyend="3401"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c1fef39ec10b25b4a2bc0644fb166bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3403" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3403" bodyend="3403"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedd8afb645c8135b73a6a457e94c859b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3404" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3404" bodyend="3404"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4c485577d0aba4f975d3015e4d232e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3405" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3405" bodyend="3405"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90e429de06827951bddc04d566b8e91a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3406" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3406" bodyend="3406"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99b83fa60044a6dff0b340762fbc79a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaddsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3408" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3408" bodyend="3408"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00563f6e3d8d5294869b87c165b88aea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3409" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3409" bodyend="3409"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a495f8071f5f2d19e12a5858a33753cb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaddss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3411" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3411" bodyend="3411"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa0c1d41b13f40aff1cd8fba8db7226b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3412" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3412" bodyend="3412"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8c7f28a7f38d9485fbfe80436aeeffa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaddsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3414" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3414" bodyend="3414"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac81c6a6b4a4e00c1595476df096abf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3415" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3415" bodyend="3415"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a363b50cc9d7f3ac0b2eaa0da3ece2300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vaddsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3416" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3416" bodyend="3416"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8990b83138847650280349db3d9d9a50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3417" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3417" bodyend="3417"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98297c291d48730425e4923bb082805c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaddsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3419" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3419" bodyend="3419"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a49bcc1a9a3fb0074f0dfad0fea2ab500" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3420" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3420" bodyend="3420"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad17da2b87b3c361e7e380e5298ee747d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vaddsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3421" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3421" bodyend="3421"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3cc896d9d1278eaf3995e9d2032d6e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaddsubps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaddsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3422" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3422" bodyend="3422"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a881361a649a2fadc31a6e4d60c5e7ef5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vandpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3424" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3424" bodyend="3424"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3aa17c1b80084acb319a7b8f00db7a4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3425" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3425" bodyend="3425"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e03019ebfd39d84620a02eb83218de2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vandpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3426" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3426" bodyend="3426"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6dd250adca7cca5b83cfa9d150daa66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3427" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3427" bodyend="3427"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62edf60ae3ba5c6130a280d301a9a880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vandps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3429" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3429" bodyend="3429"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70275ec210c31d60bb6f9938209a9be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3430" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3430" bodyend="3430"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd74856d85d01bf5ac48f9317f33e2eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vandps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3431" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3431" bodyend="3431"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a777d80e5d68b4af160e10075a56ee879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3432" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3432" bodyend="3432"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af587332d6552ee53d0a1e6a3c27f0a20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vandnpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3434" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3434" bodyend="3434"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a96508558e06a197d2fb767f09af117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandnpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3435" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3435" bodyend="3435"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ca8785b09af4b71e2be553ca0376db1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vandnpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3436" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3436" bodyend="3436"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d66afec0f0724092c81f886b32ae942" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandnpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3437" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3437" bodyend="3437"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae86c5e7815c0ad35f6e2210bda027dbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vandnps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3439" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3439" bodyend="3439"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab763ea4c512d4b70e4e79f9e30e4d178" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandnps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3440" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3440" bodyend="3440"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae23c7f7ddef8e3e62461ae24aa16f196" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vandnps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3441" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3441" bodyend="3441"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0db0b75ee62983ecfeea5f0977bc0d79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vandnps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vandnps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3442" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3442" bodyend="3442"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4040da65f29172d4c9caba581be510fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3444" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3444" bodyend="3444"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a460fad5a63f5e83d8df7186dc219986e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3444" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3444" bodyend="3444"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8b60f6c896dbaf5ca34186251cba7fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3445" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3445" bodyend="3445"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6e10ec09f0a9b737c606f5651f671c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3445" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3445" bodyend="3445"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a22aa894057f73e6879c033d9a8c2e67e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3446" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3446" bodyend="3446"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae57d4b9777cf35f8572b3a982c45375d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3446" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3446" bodyend="3446"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa94639afcad47fc62aa7a656bcd41200" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3447" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3447" bodyend="3447"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56a46f2cc03e1fa41d4ddc9e3adf2e88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vblendpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3447" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3447" bodyend="3447"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c616c19a3a65359aaa9dac3843655e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3449" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3449" bodyend="3449"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3a76a1522469c97a86fedcb707c4d1d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3449" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3449" bodyend="3449"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afef0875d557bff853f835f4c1bbdf81b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3450" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3450" bodyend="3450"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80d172d382e894bc7326993b05a4de1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3450" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3450" bodyend="3450"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac6dc599df41a1f6a85777baf73dbbd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3451" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3451" bodyend="3451"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3affb542f7a2219117e0939a8a9f9ad4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3451" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3451" bodyend="3451"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9922d81bf429bb89ef94bb397e8417f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3452" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3452" bodyend="3452"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1030a278d167296bc51ec573ff111da2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vblendps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3452" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3452" bodyend="3452"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3a0dd094657279912847075683e6b6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const XmmReg &amp;o3)</argsstring>
        <name>vblendvpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3454" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3454" bodyend="3454"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3ce036a7d12ac5047acfba6cfb53627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const XmmReg &amp;o3)</argsstring>
        <name>vblendvpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3455" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3455" bodyend="3455"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48c2c19f267369623d1a81e3af08cd92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const YmmReg &amp;o3)</argsstring>
        <name>vblendvpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3456" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3456" bodyend="3456"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae97fcf4f3baa3a16b5022bdc545ed9b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const YmmReg &amp;o3)</argsstring>
        <name>vblendvpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3457" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3457" bodyend="3457"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecc20a8a930fa58c08bf0ddbf6a392b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const XmmReg &amp;o3)</argsstring>
        <name>vblendvps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3459" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3459" bodyend="3459"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a16b0640e3e79c5635dd65477aa4f3f8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const XmmReg &amp;o3)</argsstring>
        <name>vblendvps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3460" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3460" bodyend="3460"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa631c449ba3d48fe7653454b296d0f9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const YmmReg &amp;o3)</argsstring>
        <name>vblendvps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3461" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3461" bodyend="3461"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc305e85c91bb50ad0e6a8432b6278b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vblendvps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const YmmReg &amp;o3)</argsstring>
        <name>vblendvps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3462" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3462" bodyend="3462"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa568abe7e8cb024df0cf28b114123bb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastf128</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vbroadcastf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3464" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3464" bodyend="3464"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23a04fcec4002dc5f179ad2d9715a70c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastsd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vbroadcastsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3466" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3466" bodyend="3466"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a8e9a61b01b84f843c58b0ccb5db278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vbroadcastss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3468" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3468" bodyend="3468"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3249a5f70d01ea083579e8639e795bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastss</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vbroadcastss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3469" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3469" bodyend="3469"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e3c66237101c34130222c17f5333054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3471" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3471" bodyend="3471"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af839aae5011b4d90b1c926e97231110e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3471" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3471" bodyend="3471"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ba8807651db857b64e37af4e12cb653" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3472" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3472" bodyend="3472"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae7237e8214818b3f758195aa2d8957de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3472" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3472" bodyend="3472"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5249f9d95fda6dc8ed150e86eaf795a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3473" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3473" bodyend="3473"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd911de94dac5d0551b6d1c806c317a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3473" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3473" bodyend="3473"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe477469599da7dff4b99a41b3bd65ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3474" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3474" bodyend="3474"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7611b0d55a0d2b54b7c31b00ca252d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmppd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vcmppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3474" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3474" bodyend="3474"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8c30560be81e8b684d4b9250207dbc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3476" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3476" bodyend="3476"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8ed388de8f33dd9936ba639157d00e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3476" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3476" bodyend="3476"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc5ad046ccd0a22034d591d20f96a5fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3477" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3477" bodyend="3477"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a664a252e1317b99e467ae98137efc27b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3477" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3477" bodyend="3477"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b491d42ddaf14b8282d830d7dee8639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3478" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3478" bodyend="3478"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09bee4f24b246e4f4440185619e99791" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3478" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3478" bodyend="3478"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40fc8f1f5070add9daa82ec761a629a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3479" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3479" bodyend="3479"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecdf47fbf1ac6b88d134a6d64537569a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vcmpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3479" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3479" bodyend="3479"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a1fb150b23a6015ae5d6cfae16cce0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3481" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3481" bodyend="3481"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae32a55034e64b5c0913f1532d01971b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vcmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3481" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3481" bodyend="3481"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff4a28b92ab237bba6161268a14f6869" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3482" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3482" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41a47b3e2a2a6248addc7c56386b9dea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vcmpsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3482" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3482" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1214fe2758b4b29162b3a567c961c41b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3484" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3484" bodyend="3484"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87d753e473e9928c179f8564d9480bfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vcmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3484" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3484" bodyend="3484"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20c4c897c60bf8745c2ddf2a6a51c084" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vcmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3485" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3485" bodyend="3485"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c7681662277ce42a7a1d43e6b81d632" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcmpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vcmpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3485" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3485" bodyend="3485"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a244c8065498d17c13ac107990fc1b661" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcomisd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcomisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3487" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3487" bodyend="3487"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af99c81c93b1a75ad90743dbb2ca198a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcomisd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcomisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3488" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3488" bodyend="3488"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acba4e039e5e84d11bc85e3cd668f2184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcomiss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcomiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3490" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3490" bodyend="3490"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeac75604a388be1d7df8e5d6961a79fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcomiss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcomiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3491" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3491" bodyend="3491"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b2463a7bdff10b6f378da9943a28ccf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtdq2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3493" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3493" bodyend="3493"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43100133a3af98ef30fdc50825cb44be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtdq2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3494" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3494" bodyend="3494"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55166f72c5c52930afdabf9bf110eaf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2pd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtdq2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3495" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3495" bodyend="3495"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbbb21a39bc9c3902f60045206f78795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2pd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtdq2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3496" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3496" bodyend="3496"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad45abd5d3052b223955aa9d5cb04e498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtdq2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3498" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3498" bodyend="3498"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab3cf3e46de964c8cf1d949bf3c9692a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtdq2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3499" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3499" bodyend="3499"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2907f9468ab3db45bca9b7215dc57223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vcvtdq2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3500" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3500" bodyend="3500"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3769152d0772062c71968981eba2ad89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtdq2ps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtdq2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3501" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3501" bodyend="3501"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab416159801476c8c2323dc4323ed2fe0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3503" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3503" bodyend="3503"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e242f990a6c19bd1ea1f79c7e025bd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vcvtpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3504" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3504" bodyend="3504"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4c131bedf7f88e639b83b4371bfd381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3505" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3505" bodyend="3505"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2ae5e6cd668c9f18b8ee2e78b98bb29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtpd2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtpd2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3507" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3507" bodyend="3507"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf22570a08476d1b5256c72d013da673" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtpd2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vcvtpd2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3508" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3508" bodyend="3508"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa87aa18b8dbd5d37a81e39776e053db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtpd2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtpd2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3509" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3509" bodyend="3509"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4bd3f6a9e6f20a6d2be72c5f16b18654" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3511" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3511" bodyend="3511"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cb749873c67ca633d64dbdccf1e954b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3512" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3512" bodyend="3512"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a313040652bc06751f4502dbcf46c4d41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2dq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vcvtps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3513" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3513" bodyend="3513"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a805a087f7442da547d7e3405da132e40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2dq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3514" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3514" bodyend="3514"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b33e23f4497ed9d2fd07b039cbde293" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtps2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3516" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3516" bodyend="3516"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d36695e269b53ebacd858a3e4b6af2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2pd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtps2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3517" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3517" bodyend="3517"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a020d109843867a064a3c0fe4cdc42da5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2pd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtps2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3518" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3518" bodyend="3518"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a715ec4228be92439b1dfa2ccd37e3307" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2pd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtps2pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3519" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3519" bodyend="3519"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2fc777e9cbfcf960a9d62329607fed1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3521" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3521" bodyend="3521"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a57bd67a2ed2b0a89a61635ec08b1c1b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3522" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3522" bodyend="3522"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a473e619921551d9606abfa2458cae8d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsd2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vcvtsd2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3524" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3524" bodyend="3524"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9c81e4de3b2480bac09a6e9b7b9c37e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsd2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vcvtsd2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3525" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3525" bodyend="3525"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8128ebe5e90fbdb8cb7cd3ef4e5b26ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsi2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>vcvtsi2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3527" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3527" bodyend="3527"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75efe6362a3c0cedc837d90999738fcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsi2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vcvtsi2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3528" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3528" bodyend="3528"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae870a5981aca28202d370e077e5d7b16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsi2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>vcvtsi2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3530" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3530" bodyend="3530"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0c38e270d6cbb1b05de2c8775f57f86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtsi2ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vcvtsi2ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3531" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3531" bodyend="3531"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6baaa52f06a48e7c62d1ccac23834c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtss2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vcvtss2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3533" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3533" bodyend="3533"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae77093b55c1a2b62a2344d8aeb57394a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtss2sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vcvtss2sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3534" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3534" bodyend="3534"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9ef36d76177ab12df91d1edf3bcfb61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtss2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3536" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3536" bodyend="3536"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73adfc5dc6b83f573422bf390c06aa8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtss2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3537" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3537" bodyend="3537"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1eab2d75e6992ccde8bff16fc18852f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvttpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3539" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3539" bodyend="3539"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6684262a656372948931c278086e5229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vcvttpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3540" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3540" bodyend="3540"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96201f065c1e3b2c793b607855ce6e88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttpd2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvttpd2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3541" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3541" bodyend="3541"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a37f259a33af57ef1387edf96a396ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvttps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3543" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3543" bodyend="3543"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1538ff62fc9c8ac350804f3a74299e94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttps2dq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvttps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3544" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3544" bodyend="3544"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69c348167dbb4d69c8a5314dad54c102" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttps2dq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vcvttps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3545" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3545" bodyend="3545"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acda1f67dc4d5b89b5294baff788d6815" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttps2dq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvttps2dq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3546" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3546" bodyend="3546"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdb76ad2caaf1911f5458ce2d003e7fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvttsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3548" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3548" bodyend="3548"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9118ea58642bfb687d6201bd7eda1884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttsd2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvttsd2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3549" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3549" bodyend="3549"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a395daa3c7700c8667309455a722945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttss2si</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvttss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3551" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3551" bodyend="3551"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8aedf190de1176c148aa14dece30d015" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvttss2si</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvttss2si</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3552" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3552" bodyend="3552"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa94d94e37f63c9a2d312aba975e3a350" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vdivpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3554" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3554" bodyend="3554"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5b82e0ba75e39c553825e0bbfcfe819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vdivpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3555" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3555" bodyend="3555"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a903bc573eed56cee786d74ee390aff13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vdivpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3556" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3556" bodyend="3556"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6fe38aee9fa4b4059fbb84535964849c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vdivpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3557" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3557" bodyend="3557"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b20374681950000d431a83c730e2b85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vdivps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3559" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3559" bodyend="3559"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a734da053f3e3d86805f5749ffc34a3c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vdivps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3560" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3560" bodyend="3560"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26e57df494bf86c9b95917b69fafcc75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vdivps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3561" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3561" bodyend="3561"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a66b460a5641e4a30664274475f32c67c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vdivps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3562" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3562" bodyend="3562"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5008e6564f80e3dec8f2201876e4ca56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vdivsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3564" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3564" bodyend="3564"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa212c77ee0ce9287c9c3d5f421bfc93f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vdivsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3565" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3565" bodyend="3565"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1add62bdb1a55fe93f798cc56c7b45163b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vdivss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3567" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3567" bodyend="3567"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03af2ff08f14313b1b4fb5a3592514ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdivss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vdivss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3568" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3568" bodyend="3568"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae52270bc4c81982f1c0ba4ca30cde864" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vdppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3570" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3570" bodyend="3570"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af46ac2a3241e55a1115dc956f4bb2b74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vdppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3570" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3570" bodyend="3570"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab174c19981fb60e06a8801f199e9abb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vdppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3571" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3571" bodyend="3571"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab1763dd0e9c7b8f298220d4ceffd13d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdppd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vdppd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3571" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3571" bodyend="3571"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a9d3df2b150de349c3a9352ac728cb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3573" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3573" bodyend="3573"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21741310029eecee581200d6f649e2ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3573" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3573" bodyend="3573"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17c1b8ec99de74300d74da18c71311ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3574" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3574" bodyend="3574"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b7af66dc81717550102f4e4cbeac2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3574" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3574" bodyend="3574"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bbaf9f7488204c7aad4b5750ac43534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3575" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3575" bodyend="3575"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1affc90a3ced782872c66426c69c45e63c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3575" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3575" bodyend="3575"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abdcb40c17ecb6038492859ddedbb8466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3576" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3576" bodyend="3576"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb45b43125a6a0f498bd4255e3cceda8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vdpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vdpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3576" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3576" bodyend="3576"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afac68f01b7f4a8ace86bf8da451979ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractf128</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vextractf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3578" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3578" bodyend="3578"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2ed1b4e8c439b7f58fa4324b698692f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractf128</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vextractf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3578" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3578" bodyend="3578"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a548284c0eb42c462c3847a016d1555e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractf128</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vextractf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3579" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3579" bodyend="3579"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81f273b759e424765fc770e57e15711f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractf128</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vextractf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3579" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3579" bodyend="3579"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace7fbde875c262ab6162c82a4a37a2b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractps</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vextractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3581" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3581" bodyend="3581"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47ac77c49566d44bd74cd2bca23573da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractps</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vextractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3581" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3581" bodyend="3581"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0e9352239d1d9917f2fe2d325d25d9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vextractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3582" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3582" bodyend="3582"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbf5eb4b965bd90f27b3ca8bf1f5602d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextractps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vextractps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3582" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3582" bodyend="3582"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70390c74656b21bbd6001e4359ce265d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vhaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3584" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3584" bodyend="3584"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a39fefdff135aeb4230401e2ad9d6f35f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3585" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3585" bodyend="3585"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75a79826e9ce814380a8209edecb0a94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vhaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3586" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3586" bodyend="3586"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28a272d73a879c730dab6abdd18c5d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhaddpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3587" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3587" bodyend="3587"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af04f32ad25da7ae53b85139fd3bf6988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vhaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3589" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3589" bodyend="3589"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf16c610a1324e02fcc9aee37c62256c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3590" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3590" bodyend="3590"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5845c34d6a0679b8d8d43a5008da9f45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vhaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3591" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3591" bodyend="3591"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaa0d5e84cdb77f1cebf76053ecd1ec7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhaddps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhaddps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3592" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3592" bodyend="3592"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a131c76f54162aba288ab2a2cdcce2ddf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vhsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3594" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3594" bodyend="3594"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e65ca99439f5a3114f68e14c62442c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3595" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3595" bodyend="3595"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a59508accc13d1c7d72e544a3f00394fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vhsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3596" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3596" bodyend="3596"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af59f1a2167ab78358d8b8ab22d080256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3597" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3597" bodyend="3597"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27960c629064c40a619a6b2adfa7ff60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vhsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3599" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3599" bodyend="3599"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b05fd38c647894924396f8a3ed40d37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3600" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3600" bodyend="3600"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c249b91a754ab6b28791e119170f7df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vhsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3601" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3601" bodyend="3601"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a7603319266f89f0aeddb97d2c38113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vhsubps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vhsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3602" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3602" bodyend="3602"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129b6202ad0a3d3e47d1964e3cea0e37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertf128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vinsertf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3604" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3604" bodyend="3604"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecc30667a637ca61961cf45cf0711878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertf128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vinsertf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3604" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3604" bodyend="3604"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5219a54aedc3a0bf7e27bfafe669db6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertf128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vinsertf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3605" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3605" bodyend="3605"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a598e16b50a6070e5b8e3fba854d5b8b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertf128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vinsertf128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3605" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3605" bodyend="3605"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33bc97eac696510bd045a1a527c39c6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vinsertps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3607" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3607" bodyend="3607"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a813707d7be6b5dd58667b54e68c4a86b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vinsertps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3607" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3607" bodyend="3607"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af78118acab3f1a5e37b9eb1d8884d0c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vinsertps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3608" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3608" bodyend="3608"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af3de3e3afd3022c2ac941b06eff846d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinsertps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vinsertps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3608" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3608" bodyend="3608"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac70eb41dc5d9cc5f2bf9638c039d2446" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vlddqu</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vlddqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3610" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3610" bodyend="3610"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a78b060d115dfb520c6b4ca283c876a5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vlddqu</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vlddqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3611" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3611" bodyend="3611"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0db26d6e74825b859614af607bc431f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vldmxcsr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>vldmxcsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3613" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3613" bodyend="3613"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc322fb090605c1b4293076e662a23c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovdqu</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmaskmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3615" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3615" bodyend="3615"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a341d3e4a2e8eb785b90ebdd6c38f78aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaskmovps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3617" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3617" bodyend="3617"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacc01ed9b63c68f366a55ac5fc6f8ffb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaskmovps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3618" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3618" bodyend="3618"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e46c856248098ddac289c9fafa96015" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaskmovpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3620" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3620" bodyend="3620"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d9883adeec6dbb08f4f8ee4972cbd44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaskmovpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3621" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3621" bodyend="3621"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae46519bb3699fa15d8c0042895c86a5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmaskmovps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3623" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3623" bodyend="3623"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75ecdd8de05e9e734befb78c843640d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovps</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vmaskmovps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3624" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3624" bodyend="3624"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acf65b311c0a66da3862d3e67f4b5975e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmaskmovpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3626" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3626" bodyend="3626"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecaeb4be727e8e9ce62e17e88ac1425f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaskmovpd</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vmaskmovpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3627" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3627" bodyend="3627"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2941ad27354ae193ee3d322404d77764" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmaxpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3629" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3629" bodyend="3629"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a573158e43c65c2ff14c5e0228ac3ca49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaxpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3630" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3630" bodyend="3630"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ae19fd5a95efb56352938fc15ac47d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vmaxpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3631" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3631" bodyend="3631"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa5b58eb8a2e82a25d0069f2039579b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaxpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3632" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3632" bodyend="3632"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3adc43efc504859e632cf4d0ab039c34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmaxps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3634" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3634" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec07c80556fa4e5a4a1f2e8b9a608513" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaxps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3635" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3635" bodyend="3635"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00a27def8191255bd63801b666717653" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vmaxps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3636" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3636" bodyend="3636"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6007be2a83c66c3fa7283b2136ffdcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaxps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3637" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3637" bodyend="3637"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0017864f44e465325d6ffc7243e9f5d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3639" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3639" bodyend="3639"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae92b7f13d6586ba6e2dcf891eb524fc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3640" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3640" bodyend="3640"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9b9682ebb6e8a5d1b457743eda63dd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmaxss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3642" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3642" bodyend="3642"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e68f3d134e746b2057765270a106d07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmaxss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmaxss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3643" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3643" bodyend="3643"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab79217d7c8f60ff31562c25189a52bf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vminpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3645" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3645" bodyend="3645"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0971e7434fd21d2324123aad688ab6c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vminpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3646" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3646" bodyend="3646"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96407f92305c6eb0883b23c6ff853ee1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vminpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3647" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3647" bodyend="3647"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2ace697000377e96bbaf68dd82b3e50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vminpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3648" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3648" bodyend="3648"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43ecc186f2d74ca1fbf158709eb643c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vminps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3650" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3650" bodyend="3650"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f83763cfc8ac08041cb53127bc33f35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vminps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3651" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3651" bodyend="3651"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec3d991ea97b7da53626aa56cc6c0313" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vminps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3652" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3652" bodyend="3652"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab391a3c73194199612344917d501c423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vminps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3653" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3653" bodyend="3653"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3ebb0fea7aabfc8d5ab01e2e2b16919b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3655" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3655" bodyend="3655"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8500f044cace40a65ca601d529ee3459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3656" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3656" bodyend="3656"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a76e22daa7b672c2083e20fa4a27333f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vminss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3658" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3658" bodyend="3658"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41108cee9df3c2431b3b0048b8ddec39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vminss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vminss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3659" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3659" bodyend="3659"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f6e00b8d2ef431baa211ba3868307b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovapd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3661" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3661" bodyend="3661"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85b0cc2aa378d2c03c06dab7cf3ed2e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovapd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3662" bodyend="3662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8271425a309fee487258efe400deef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovapd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3663" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3663" bodyend="3663"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43da7bc53eba4e479b3d9136f4711160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovapd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3664" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3664" bodyend="3664"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2bbad2aa79470a64d4c1cbf3e242062" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovapd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3665" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3665" bodyend="3665"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af47edaf56e02bdd6c761d964ca0bbe4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovapd</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovapd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3666" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3666" bodyend="3666"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a50aeaea8d08b4f25325d4c7bbc5a218b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovaps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3668" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3668" bodyend="3668"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0de53d70e7a0963b30156a6cf4c2054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovaps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3669" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3669" bodyend="3669"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec7b4bb44055cf439e43ffed0fb9c807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovaps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3670" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3670" bodyend="3670"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55e678d4c513d71052a7beb8f7593417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovaps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3671" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3671" bodyend="3671"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a247fbe72ca6034df042aa42d4243d079" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovaps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3672" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3672" bodyend="3672"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec0c878b98e1b9ef158f2644736a700f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovaps</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovaps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3673" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3673" bodyend="3673"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab7bd1856dc1b5a62a3a09b1a3167403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovd</definition>
        <argsstring>(const XmmReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>vmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3675" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3675" bodyend="3675"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4c9dd1df05ec6cff6a8f26dfba0931c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3676" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3676" bodyend="3676"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acac89855a7496b60275052848c269f10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3677" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3677" bodyend="3677"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2f5538a813a58063e735b6f9c1fa864c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3678" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3678" bodyend="3678"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae03181bc80fbcccffab7b7f303876495" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3679" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3679" bodyend="3679"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98a3732db1c80c14dc9ecc5063e987f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3680" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3680" bodyend="3680"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07fd1e3929cbc463f379193e2794a988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3681" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3681" bodyend="3681"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a923bf3a84cd81a59cd7404f379d2b922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovddup</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovddup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3683" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3683" bodyend="3683"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac65e35eed69e759518fdc19495c5e8cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovddup</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovddup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3684" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3684" bodyend="3684"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa69065c71a055a3bd128bb45ee1413e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovddup</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovddup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3685" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3685" bodyend="3685"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08735f0423bec53351c058c34d1a64d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovddup</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovddup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3686" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3686" bodyend="3686"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1accc1b355188140b442f327ae78ec287f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqa</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3688" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3688" bodyend="3688"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7eb9e816f901d27a626af53f8e2c9f98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqa</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3689" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3689" bodyend="3689"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1cace0726c7bfdc4e46a306240c8274f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqa</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3690" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3690" bodyend="3690"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61f2774b7538a8d2c91cb1eee1c31124" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqa</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3691" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3691" bodyend="3691"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ab95a09e2221d1e4d3073f53273190a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqa</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3692" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3692" bodyend="3692"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac04e52681ab8a6872d97bea5ce019fee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqa</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3693" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3693" bodyend="3693"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80f3f5a9f4663402659fc47ee0218d4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqu</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3695" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3695" bodyend="3695"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9bd4a8db3a498757b51a8ecd5f92a855" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqu</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3696" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3696" bodyend="3696"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbbe258d6bb3f651394dad3cc8cf8665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqu</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3697" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3697" bodyend="3697"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08639346d45f4e3b03aa77e189a88e89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqu</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3698" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3698" bodyend="3698"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3eaeec84ef51504a69e8435a9eed241c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqu</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3699" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3699" bodyend="3699"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a214d300791500a3180767565e0941422" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovdqu</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovdqu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3700" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3700" bodyend="3700"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1fa244399e0de340ceebfd08500e23d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovhlps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmovhlps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3702" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3702" bodyend="3702"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aced4cd42f2a727569d073db1b04b86d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovhpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmovhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3704" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3704" bodyend="3704"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1ff342be2b23d02da4529b0d13d34b80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovhpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3705" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3705" bodyend="3705"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c93ae6198c33fddb16d0a65e95a104e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovhps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmovhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3707" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3707" bodyend="3707"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a977023e265764c35d881a267cdb5ee4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovhps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3708" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3708" bodyend="3708"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fd46f8d7e90438aaa40a51ec76619e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovlhps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmovlhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3710" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3710" bodyend="3710"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d99fd7df3a3936dacf58602158bd3af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovlpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmovlpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3712" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3712" bodyend="3712"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2a3cfb9e76b4a74127ce1ca1fedd114" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovlpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovlpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3713" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3713" bodyend="3713"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab758292f00cef26e167a0f52359037f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovlps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmovlps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3715" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3715" bodyend="3715"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac60bd70365051cfc74ab79372306ea4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovlps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovlps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3716" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3716" bodyend="3716"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20ed7e7a384f483527e3ec743f076c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovmskpd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovmskpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3718" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3718" bodyend="3718"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb86f796930f9e4a7094bfc907c113f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovmskpd</definition>
        <argsstring>(const GpReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovmskpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3719" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3719" bodyend="3719"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6bf4dfe0d8b01d56d6d81334b63918a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovmskps</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovmskps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3721" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3721" bodyend="3721"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5df14c3e2a8ff83ad2e689712e47d1f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovmskps</definition>
        <argsstring>(const GpReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovmskps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3722" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3722" bodyend="3722"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3de6c81859139c25066d65273db7a40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntdq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovntdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3724" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3724" bodyend="3724"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7c7b63107f46376d37ab546355632ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntdq</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovntdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3725" bodyend="3725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ca4dfbd4f862b98e1df7bbe62cb544d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntdqa</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovntdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3727" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3727" bodyend="3727"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7ffc486050e2d4f5e3f398d2b8d74be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntpd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovntpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3729" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3729" bodyend="3729"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6e2ea989f6515713ef38ed073d59732e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntpd</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovntpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3730" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3730" bodyend="3730"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07818ffef2351a5802f2457479b8c498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntps</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovntps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3732" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3732" bodyend="3732"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a193cfea0568800d709037a444218ac12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntps</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovntps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3733" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3733" bodyend="3733"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c81e78aca48de2cc7f81b6d7bf2737f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmovsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3735" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3735" bodyend="3735"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7625cd8b9adac3f2a24afa88704a24fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3736" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3736" bodyend="3736"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c8c3ffb2b7fe3743553af11455d5aa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3737" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3737" bodyend="3737"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa83850ad524ae2b87b9f504351754e0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovshdup</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovshdup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3739" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3739" bodyend="3739"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b705dd6820cd7ec7e1092059b5f129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovshdup</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovshdup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3740" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3740" bodyend="3740"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9ad43b160765c34a06ddcde967b30be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovshdup</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovshdup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3741" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3741" bodyend="3741"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a316692fe5c6b2e2cf7a56f5361ab1b85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovshdup</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovshdup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3742" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3742" bodyend="3742"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afbd699a465070335aa260a54bae038c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsldup</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovsldup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3744" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3744" bodyend="3744"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff4394ac48721358776a1850bbfa6c93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsldup</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovsldup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3745" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3745" bodyend="3745"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6f2bd898dcf5af70db9466bbe32867b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsldup</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovsldup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3746" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3746" bodyend="3746"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e6f9233ad4e4c75ba16cf280d884467" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovsldup</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovsldup</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3747" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3747" bodyend="3747"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc04ac758f0bb18573aafccc17ce9c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmovss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3749" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3749" bodyend="3749"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d1538ea6190c89adef6410bcbe2f334" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3750" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3750" bodyend="3750"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c49650194a803752f40ad464ff92275" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovss</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3751" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3751" bodyend="3751"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a506ac39d8cae7940d3e6a12230271766" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovupd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3753" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3753" bodyend="3753"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca0cd137953f99174da8dbe2522566ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovupd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3754" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3754" bodyend="3754"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a676ff4accda55aa1f0235cfb1788fe5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovupd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3755" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3755" bodyend="3755"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6e3cb77b94407b9971bff0bea5fd3ecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovupd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3756" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3756" bodyend="3756"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace178944d6a752bd8ccfc50ef30b8ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovupd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3757" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3757" bodyend="3757"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7395f2553cad5fbe12f657a6e95f7330" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovupd</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovupd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3758" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3758" bodyend="3758"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4733f8d0e0eb666e27e522833a093a56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovups</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3760" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3760" bodyend="3760"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a056815883cb7c368d259d04b0a57f306" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovups</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3761" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3761" bodyend="3761"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a011aec6cbf105082f9375d500d3655ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovups</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vmovups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3762" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3762" bodyend="3762"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93d4393c9cb804fda4b087acac994964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovups</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3763" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3763" bodyend="3763"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b38904539b42a730d56d483a22687d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovups</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3764" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3764" bodyend="3764"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab64db9ef24da43b6ddee9e5917e36b89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovups</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vmovups</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3765" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3765" bodyend="3765"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87c086d601e5dbb4352f13cec0f033e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3767" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3767" bodyend="3767"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6303b83585121a3971464f30552475a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3767" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3767" bodyend="3767"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c57e42db0fb499a5d8fe4627b8a6e55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3768" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3768" bodyend="3768"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae151013ac49f59924fcd0b053995fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3768" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3768" bodyend="3768"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74db1134b0689d31534d8e4db3bd5444" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmulpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3770" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3770" bodyend="3770"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc89d28cc426f59f385333aa19b9cdbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmulpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3771" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3771" bodyend="3771"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a660dfa9a7d9adfd1ce3349e7ac4ca1bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vmulpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3772" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3772" bodyend="3772"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6422430a81c4a50d52117ce8a4f21800" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmulpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3773" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3773" bodyend="3773"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb219d129fcabe48b8ee688ceee941d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmulps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3775" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3775" bodyend="3775"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38abdcaf9ff78f9852cae160c2c4faf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmulps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3776" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3776" bodyend="3776"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86d985a08e90ff648a184136abb31142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vmulps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3777" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3777" bodyend="3777"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3306be807c733b750f86db8704961be6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmulps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3778" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3778" bodyend="3778"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f342332f4eda1b6706704619d9c1d10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmulsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3780" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3780" bodyend="3780"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc00742dc9b937e8fe142f4526a55100" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmulsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3781" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3781" bodyend="3781"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad997c9f268172e653f0f7e54f3f102f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vmulss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3783" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3783" bodyend="3783"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e7f5c545a29d688a3aa8a06efc4107c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmulss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vmulss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3784" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3784" bodyend="3784"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1097a563e8977d33a7d4672390e21dfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3786" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3786" bodyend="3786"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa82600c0b567beecea6107bf3b298f6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3787" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3787" bodyend="3787"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab127746f0a482f95f1a4264df643f11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3788" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3788" bodyend="3788"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f655c8cadd9fcc117855b96cca745a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3789" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3789" bodyend="3789"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43b996b677b5d223bbc0ff1758929b72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3791" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3791" bodyend="3791"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c2be64f254c0a5e15f7cc4811b34fd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3792" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3792" bodyend="3792"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34c7a302b04dd0bcbc1bd398c32b6ea8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3793" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3793" bodyend="3793"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcf18c73d4d942070a04d31a4522ebf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vorps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3794" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3794" bodyend="3794"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adec7879116cc46b903bf559a4a44e659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3796" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3796" bodyend="3796"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0d16f9963974659215343a4b0b9e744" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3797" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3797" bodyend="3797"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a14ab4de9a99ea61ff94a086a839753d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3799" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3799" bodyend="3799"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36cc88b6edf7b781eeb406a8b2350332" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3800" bodyend="3800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0059c1555aeb0c379d807a099966e62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3802" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3802" bodyend="3802"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92494eb0d4555550588bfa3903074f7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3803" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3803" bodyend="3803"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9297ff4f1b239e52ab7892cd025bbcc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackssdw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpackssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3805" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3805" bodyend="3805"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0b6327040ac0c13322a4960e2c22a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackssdw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpackssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3806" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3806" bodyend="3806"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad39896e096e082df91cf1f0e768dc763" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpacksswb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpacksswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3808" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3808" bodyend="3808"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9238d5419918da211faa09f89a8d6a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpacksswb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpacksswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3809" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3809" bodyend="3809"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4121c6ec10d3dbcd4e4b6ba7355421ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackusdw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpackusdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3811" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3811" bodyend="3811"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b940bc47c6597af4db2d40da6a87ca1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackusdw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpackusdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3812" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3812" bodyend="3812"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae20968d262c573eb06bd44c60b2444ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackuswb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpackuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3814" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3814" bodyend="3814"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06f4f5a0164154f424751a7af4a6911b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackuswb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpackuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3815" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3815" bodyend="3815"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b6a170d949dfacc310e280317dcde1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3817" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3817" bodyend="3817"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27b937a5264ad4cbff5c9bff2a3b7af7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3818" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3818" bodyend="3818"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac36f6dcb93c568913289b1f438c48369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3820" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3820" bodyend="3820"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf4726012329f6a082fd88c599e154ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3821" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3821" bodyend="3821"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18f02787bd7a141a89e21e45b4cab9c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3823" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3823" bodyend="3823"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10df821b678bcaef9474dc8e07255201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3824" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3824" bodyend="3824"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a910da9c00f2db58e0a5765f6f28c7081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3826" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3826" bodyend="3826"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a279f0150e8b63f2e6c99b6bea8206e09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3827" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3827" bodyend="3827"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6aa4fef918fca7ba8a542bd4de9bb8f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3829" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3829" bodyend="3829"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a849bd272a641906cc3b746d2ef723817" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3830" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3830" bodyend="3830"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5211172c0458be915c1b566429d7f5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3832" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3832" bodyend="3832"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a354b914ca696bb2ca103e3b151aa0e42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3833" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3833" bodyend="3833"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99e45d31d06cb6ad0b05a7a47199850b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3835" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3835" bodyend="3835"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab90e9aeea9f49c5f7950dc1e3418c1bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3836" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3836" bodyend="3836"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e17ad7788ce2f06c08bc76636ecfd44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpaddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3838" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3838" bodyend="3838"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af053d15272aa11654ab64bda0324e1fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3839" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3839" bodyend="3839"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2deb35cc79b761593e8122a6c3a90ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3841" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3841" bodyend="3841"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2b1fb5c078e2dac2d3f78ea1f72929b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3841" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3841" bodyend="3841"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ca657c16589b720e2683998045e5a7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3842" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3842" bodyend="3842"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a234d8eff216bba38c0798e5e59bebb0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3842" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3842" bodyend="3842"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5aae1ac0fea7fcd808f5bd8012d7b348" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpand</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3844" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3844" bodyend="3844"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5c45eec660f92d53d8c7de1e7721d2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpand</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3845" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3845" bodyend="3845"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ff4dcedebbaed803d54ac75d34503b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpandn</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3847" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3847" bodyend="3847"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4373eefb642cf3c3496df3363c142edb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpandn</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3848" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3848" bodyend="3848"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d1eef82a620bcb8db80dac8f1aa51fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3850" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3850" bodyend="3850"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a280a1ef10c13f2919d4a0f0679d7bafd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3851" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3851" bodyend="3851"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8c04212b30ed65b4963809982292fec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3853" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3853" bodyend="3853"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc75d81f1958bf58c2c136583cae2a1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3854" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3854" bodyend="3854"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb2925ec81ff1e56f581f85906efa844" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendvb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const XmmReg &amp;o3)</argsstring>
        <name>vpblendvb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3856" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3856" bodyend="3856"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7f70a71e1bf0023c3f9f8a99fcbe71b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendvb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const XmmReg &amp;o3)</argsstring>
        <name>vpblendvb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3857" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3857" bodyend="3857"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae75302b1edb76a201898ad3ddd729f06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3859" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3859" bodyend="3859"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d517ff2fa9f45f38b52caa6ef19d372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3859" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3859" bodyend="3859"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab94431f758429ea25ad3de4c6c6b8ab3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3860" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3860" bodyend="3860"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a57b58da39486ca9511639dd2630c139e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3860" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3860" bodyend="3860"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a875f98a0d4f3e97f04245c00b0cbc330" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3862" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3862" bodyend="3862"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a217bfefcfb869b9c15cecdb877d1be93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3863" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3863" bodyend="3863"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8d7dcff1e168366313f870a8eba347d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3865" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3865" bodyend="3865"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a597a11f52f264826f13cd9b90a43d832" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3866" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3866" bodyend="3866"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a51af666bb95f86b402b64009539c651e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpeqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3868" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3868" bodyend="3868"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a359e56f169e5d1a03e03cabfc929ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3869" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3869" bodyend="3869"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8aab2ac4983399b142405a70b8646128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3871" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3871" bodyend="3871"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e65cbf6fca4c0f9e9e14fab95c34cf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3872" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3872" bodyend="3872"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe2d78716c34b47ebd7560aca43df205" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3874" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3874" bodyend="3874"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2302729f754bc7a08cd3c580abfd2683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3875" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3875" bodyend="3875"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a646e105f46ba20fc05695d61d79196a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3877" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3877" bodyend="3877"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3bb477ca2ecdc6f3c9309d89219e277" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3878" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3878" bodyend="3878"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd6c0e43e545dcfe1cf9cc3292685da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpgtq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3880" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3880" bodyend="3880"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82a35bd9a4428fa59ff0a6b68d97bb80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3881" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3881" bodyend="3881"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca8d7fcd0b18f89948bacb8ced67217d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3883" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3883" bodyend="3883"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43250b7da4a0185a0c43c595b8c727a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3884" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3884" bodyend="3884"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f45ab8a7083bd17c314241bf64159f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3886" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3886" bodyend="3886"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9d3de53b3225afe4e23031b290fc20f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3886" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3886" bodyend="3886"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68ccbae22e72c92c73fe955335562cb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3887" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3887" bodyend="3887"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70c65e93e29f027c7860a31b5129afc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpcmpestri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3887" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3887" bodyend="3887"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a16b204dffb8ff5b06dd75400e0d9b9b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3889" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3889" bodyend="3889"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a179ebdc0015fdc5378312be157fae66c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3889" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3889" bodyend="3889"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f4a142251351a502425568f6be0da26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3890" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3890" bodyend="3890"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb6b0ea435539b0fa27ae509f120e13d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpestrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpcmpestrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3890" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3890" bodyend="3890"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3dcb91da1a762c91038fce518342a05f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3892" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3892" bodyend="3892"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a790587b83fbb2a778b6a889557af247e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3892" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3892" bodyend="3892"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab95ce471a5630cf46563efa125cb020e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3893" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3893" bodyend="3893"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6daa88d712dbd2e9f5d1b69e135179fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistri</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpcmpistri</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3893" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3893" bodyend="3893"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1affb8756848462e71fa011f1da45b6228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3895" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3895" bodyend="3895"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28f79b1d440d05953cc6f4eeb238b0b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3895" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3895" bodyend="3895"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acff4631fb6ddb57a553a1eb8827c3157" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3896" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3896" bodyend="3896"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacbbcf3d412ae44066f9fda2bd6873be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpistrm</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpcmpistrm</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3896" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3896" bodyend="3896"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6425636d6b902d09c14c10da7ef6bc45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3898" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3898" bodyend="3898"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6436f18570c70ee1e045d05c06b242df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3899" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3899" bodyend="3899"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27879fe59a39f17dc1f1b61b6c78c2cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3900" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3900" bodyend="3900"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c639a64ccc235bc04357471e029164f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3901" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3901" bodyend="3901"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89266305d8f1a284b04fee83d990b94e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3902" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3902" bodyend="3902"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4df31c6ed17f01c4b3c4e84361c8920c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3902" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3902" bodyend="3902"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a683461829d501c9795a0f637bbeb29bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3903" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3903" bodyend="3903"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81f9c42ade8814f8846afc9ec99bb43d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3903" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3903" bodyend="3903"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbead779ec8be5110c3671520b0057f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3904" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3904" bodyend="3904"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfca9ae59ff403dff48eabea42eefe1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3904" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3904" bodyend="3904"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4b6c67bcc20e57659923f422126a163" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3905" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3905" bodyend="3905"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a26849f180b2fa4d268505ddc059d10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpermilpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3905" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3905" bodyend="3905"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46fa5ac770d977b61d3d5ac21af04f9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3907" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3907" bodyend="3907"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acada581855db1a04acbb795a4f5d7da7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3908" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3908" bodyend="3908"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a998f4a02ba412f7cbab302fabf48304f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3909" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3909" bodyend="3909"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3e8adc2e3d1cef62d88220b83aeac1b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3910" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3910" bodyend="3910"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6cbd148e3141c94708b540131e60e04f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3911" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3911" bodyend="3911"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a977ce40d836418c628c8666baba93c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3911" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3911" bodyend="3911"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace015aff034c59dcc4d4c59ff8861fa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3912" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3912" bodyend="3912"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1affd337662ddf9b11e855a06a9fa2d3f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3912" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3912" bodyend="3912"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af285aedb7efe1cd4e4416e8a9d270086" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3913" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3913" bodyend="3913"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afbd3031eacdafdd018b238fbc77a9da0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3913" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3913" bodyend="3913"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcfb7bd8bf064c184868da45c1d1da9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3914" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3914" bodyend="3914"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afec4573eda18d547800ef8a3986de152" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermilps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpermilps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3914" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3914" bodyend="3914"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd01172fb2ea917effcc9c0492921578" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2f128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vperm2f128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3916" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3916" bodyend="3916"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4bdaacf9b152055092cedcb6597f1afc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2f128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vperm2f128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3916" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3916" bodyend="3916"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa612c269c1f80e8e32c2863325aba338" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2f128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vperm2f128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3917" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3917" bodyend="3917"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13e0bde27077f28257c9ef002de0b658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2f128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vperm2f128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3917" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3917" bodyend="3917"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af5db58f8c0a1f20a48ae092e3aeb9b29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrb</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3919" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3919" bodyend="3919"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5bd55f6a2940bd4d25136d7a9d8e4557" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrb</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3919" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3919" bodyend="3919"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7636d2ac5c29899cd1ffd84fb67633d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrb</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3920" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3920" bodyend="3920"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab168fb4a9ea6b891340060e7fbabcc92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrb</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpextrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3920" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3920" bodyend="3920"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac661acfd96015caa9c1d2aad475d799" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3922" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3922" bodyend="3922"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec2ea4ffda6f495136d38e5e51773d60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrd</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3922" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3922" bodyend="3922"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a112002ae53a8102cb97cc2936c3fc831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3923" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3923" bodyend="3923"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52dd402eef46153ca4e3efe5ced10b2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpextrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3923" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3923" bodyend="3923"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac9b7091b5f42e34873b9590e1b8e1f51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrw</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3925" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3925" bodyend="3925"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e199ce536005cb6657950d4ee98004f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrw</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3925" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3925" bodyend="3925"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a553ac769a657927ab45f64d4e698bdde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrw</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3926" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3926" bodyend="3926"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab69c424080104a251ae97a539f26844" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpextrw</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpextrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3926" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3926" bodyend="3926"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46790bbbaa3701921fef5e9becae749b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vphaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3928" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3928" bodyend="3928"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8283ffb8a3941e5c32c5a3e216baa64c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3929" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3929" bodyend="3929"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8da7147aa134bf6683bbda20622c1632" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vphaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3931" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3931" bodyend="3931"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaca6859ed65089251d25d194fd0582c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3932" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3932" bodyend="3932"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c28560759a09ddac15efdea48586e65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vphaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3934" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3934" bodyend="3934"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61c005ab3e409f647287f087a845aec1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3935" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3935" bodyend="3935"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36140f6a8a821e25629c6188e7bff2c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphminposuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vphminposuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3937" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3937" bodyend="3937"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91de1f2e9e0a0cb9fd156add5b518b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphminposuw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vphminposuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3938" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3938" bodyend="3938"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb64e020056e65e25c3cdfd82ec453af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vphsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3940" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3940" bodyend="3940"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06ca83d91a95de9b5d190123fdb9ea25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3941" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3941" bodyend="3941"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d6dbdf6b511cb39591c023c65be503a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vphsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3943" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3943" bodyend="3943"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1184e10d88559b03c71f34679d3d893f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3944" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3944" bodyend="3944"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6bf7c925417b7622d199aad92c29019d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vphsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3946" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3946" bodyend="3946"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acafcc29ecc5d4011ddb00a30800d1cf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3947" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3947" bodyend="3947"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a166b7f7f4e70ae80c05e66fd9091e0b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3949" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3949" bodyend="3949"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42bb05825510834e859dfd9e4f4684ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2, int o3)</argsstring>
        <name>vpinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3949" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3949" bodyend="3949"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5eac16307452b48304e98c40c541a877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3950" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3950" bodyend="3950"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2236d136b6018ed6dd114439b9dd7ff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpinsrb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3950" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3950" bodyend="3950"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a253cc46157f7d8a21aa86fdfe6e5a1d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3952" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3952" bodyend="3952"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad4a3c47277c2a3ba88ac41a3504470f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2, int o3)</argsstring>
        <name>vpinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3952" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3952" bodyend="3952"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f55da1f19f74fccf87b4a727496b6f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3953" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3953" bodyend="3953"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6af662f853968bc7b00e5945382bb4ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpinsrd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3953" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3953" bodyend="3953"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d24df23a92f7f9741b59c34b45b7255" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3955" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3955" bodyend="3955"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6efea8e58ce51b2825c7e781a738785" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const GpReg &amp;o2, int o3)</argsstring>
        <name>vpinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3955" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3955" bodyend="3955"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47e5ee3d9cef48476448ab82a7028026" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3956" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3956" bodyend="3956"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a322639d1fbe9e59084b068c6a6d883c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpinsrw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpinsrw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3956" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3956" bodyend="3956"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e4436ef0a20f0f4fa9d270866a41cf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3958" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3958" bodyend="3958"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6151f25aed58d3a787a69b057a4ff246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3959" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3959" bodyend="3959"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acce576a31463c76643799987bdb89326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3961" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3961" bodyend="3961"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a070872f250cfc25fb1b2b5cf1ff51f46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3962" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3962" bodyend="3962"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0e95f6978be5c8c119058651dd55625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaxsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3964" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3964" bodyend="3964"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a430d1633143fe72b3e3b0cd501984dbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3965" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3965" bodyend="3965"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05ecb9263c356ef9acccf637a0774101" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3967" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3967" bodyend="3967"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b53a137cb8678534524ae3864fca8e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3968" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3968" bodyend="3968"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0cd8bc7c85a45734e9c9406c7c9e6ce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3970" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3970" bodyend="3970"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26c7a612c0273be20f278d1cb044cad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3971" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3971" bodyend="3971"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a328aa62f418a01255528d7f882846809" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxub</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3973" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3973" bodyend="3973"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30c2ff1f5455777187249abdd3d70ee8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxub</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3974" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3974" bodyend="3974"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04e64887a6aad8671b196791c5a40c7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxud</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaxud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3976" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3976" bodyend="3976"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada1d569cf1312e87fdfd72233f135c49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxud</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3977" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3977" bodyend="3977"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9a351b5551c94d845246349b6e4de0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaxuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3979" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3979" bodyend="3979"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8447b2b4d3b0c05ae4b4f773df2a7b3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3980" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3980" bodyend="3980"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad82f2cc150621c4c31f71eee6f3feaa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpminsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3982" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3982" bodyend="3982"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa506cac00cc0e914d19b188a288a5ff7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3983" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3983" bodyend="3983"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae61f0e906f5c264f69b32611feb816f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3985" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3985" bodyend="3985"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8847e7ece70028c0b7b311bba6d25886" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3986" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3986" bodyend="3986"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bf8810950a0f0ed8eda90e39045fb97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3988" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3988" bodyend="3988"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af59f8d2c3661a9072cfa7132395d613e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3989" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3989" bodyend="3989"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafa8f40f9f996318fc3a67c3d270bb3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminub</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3991" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3991" bodyend="3991"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1057ac8295fade7094dd9bb587120fb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminub</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3992" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3992" bodyend="3992"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6b7d10120b15bd96e6ad6377f6dab7a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminud</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpminud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3994" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3994" bodyend="3994"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae818732949d7814eb997372dc1e2f96b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminud</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3995" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3995" bodyend="3995"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a64eb6cc35a6aaa330a9723c34ddb2a3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpminuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3997" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3997" bodyend="3997"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d534458114ab979917726d54c1f370e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="3998" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="3998" bodyend="3998"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aada65d72a477d25e543615fdd75b89f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovmskb</definition>
        <argsstring>(const GpReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovmskb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4000" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4000" bodyend="4000"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35dcd66ec69d5d2bdeb546e7a438fd75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4002" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4002" bodyend="4002"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e37f8f87587cf8df175cf134348856a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4003" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4003" bodyend="4003"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79248f2b9f07002b32edeea51a3dd9f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4005" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4005" bodyend="4005"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42919705792231d3d5bceb04a9e5d510" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4006" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4006" bodyend="4006"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeff0bc87c778861e7493add7d6775b94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4008" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4008" bodyend="4008"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaaa64797a107560e6926843b2e4aeee3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4009" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4009" bodyend="4009"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa7375ed86702226d2f2dda30cc9348fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4011" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4011" bodyend="4011"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24ce88d5b904e4b8347e31c8de79efbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4012" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4012" bodyend="4012"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6c65adcc06038b50a866572b4a176b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4014" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4014" bodyend="4014"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aadc864a4404c42390b2f649316eb1d99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4015" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4015" bodyend="4015"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc5ccf2d1e570b77dbae69a690123852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4017" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4017" bodyend="4017"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af750039031b9b8faf247ac8bc53b9a18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4018" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4018" bodyend="4018"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8eeb6804a0209cd79cccc7d0cc1ae2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4020" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4020" bodyend="4020"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7c8e64b4d6b75fa51439b195383497c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4021" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4021" bodyend="4021"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65cf995394d7e8b48959ac78ba5a1ba8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4023" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4023" bodyend="4023"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb4d406f445e7fb42ef235847eea8f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4024" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4024" bodyend="4024"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2f7f43bb92fbe8107cbc851a3afd201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4026" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4026" bodyend="4026"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87a4ae3257f87bdb1cd44ea731f9f2e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4027" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4027" bodyend="4027"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fdf24fa96fffe52f94c1fc7eb21342b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4029" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4029" bodyend="4029"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7dffc6446fe4abcddd47c6e1c35d0f0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4030" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4030" bodyend="4030"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f38769d4f30fef9a28a7242010d6132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4032" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4032" bodyend="4032"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b820cc5f51d50b2b36de821f81ce5bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4033" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4033" bodyend="4033"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7be5fc7065d6ee85e62a73abf8f75b9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4035" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4035" bodyend="4035"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1ce47b9dce5921fcfd625b0591862660" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4036" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4036" bodyend="4036"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b98a22344539ae86b000c7c66169391" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmuldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4038" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4038" bodyend="4038"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71c94e737afe1e9705b0b0afb2ef74c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmuldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4039" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4039" bodyend="4039"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09553a7fdf8cac13c5d3796412434006" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhrsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4041" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4041" bodyend="4041"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac395fb8b1e5cb1ec0908013bed6d9c6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhrsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4042" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4042" bodyend="4042"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4c72bb2012f1fbe33bbdb4f4e5d99d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4044" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4044" bodyend="4044"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9d163395f5545bfd308a79b0267cefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhuw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4045" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4045" bodyend="4045"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a084b193a04ae352689599a68c6ec4c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4047" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4047" bodyend="4047"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a623b0187f9cff8a99f5d1e70663153c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4048" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4048" bodyend="4048"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f1de4ede7dc26671df5f7096d3ebdce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmulld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4050" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4050" bodyend="4050"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a298fd886015625ec5439ed7a2cad407a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4051" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4051" bodyend="4051"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fd657b0460edb9b3ca51a1cb74790fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmullw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4053" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4053" bodyend="4053"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c3becf4afd6aa603bfbdba2f24b5360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmullw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4054" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4054" bodyend="4054"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a857a13ce71daaf8bb0cad42bb9196859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuludq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4056" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4056" bodyend="4056"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56f4e13626f174a62a0c27cb1b99d8df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuludq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4057" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4057" bodyend="4057"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae22fb7fe2656aa0f36ff649e5dceb7be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpor</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4059" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4059" bodyend="4059"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13ef748e51724e01fd02fec377c9208e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpor</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4060" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4060" bodyend="4060"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cc0d53ed7a086cebeeaaaab6f002755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4062" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4062" bodyend="4062"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a538b4b0d46bf7a5838e7295e74be4c06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsadbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4063" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4063" bodyend="4063"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04fbf698bcaaf02ba8769e2bc58788e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4065" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4065" bodyend="4065"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69c22383e2e4898e7843dec76257db62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4066" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4066" bodyend="4066"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbb37f0699783277b7d8d9d8188d8410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4068" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4068" bodyend="4068"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7358af113a3b5bd578cecf1078b2edee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4068" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4068" bodyend="4068"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2eb7443f5ff9267a9aa84217658ddf32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4069" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4069" bodyend="4069"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c970f6d938997f6e5145ee9aedc9556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4069" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4069" bodyend="4069"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacea1105ce0c5a924d7d6170fa488516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4071" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4071" bodyend="4071"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0277d1222464d841ca54dbd96c804bd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4071" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4071" bodyend="4071"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a083d0ca4b4da5a2147ea74c7f237f967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4072" bodyend="4072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46fde2f648843e4f9d2b0b907d8d5346" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4072" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4072" bodyend="4072"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0349a096f8f170abf43c63689a35d26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4074" bodyend="4074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ce0e1aee0cca68228c46a42bab68412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4074" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4074" bodyend="4074"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d19c94feeb2889ee0d427fb1e044552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4075" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4075" bodyend="4075"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1f7a2c23ffd469aef68ff17def3f38b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4075" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4075" bodyend="4075"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab3637b8dc942ea629a798943e4363b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4077" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4077" bodyend="4077"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0b4dd5ce8eb194d9078a1fcaf5aa05b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4078" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4078" bodyend="4078"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e2eb6709195259987ea2d854baf9e80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4080" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4080" bodyend="4080"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af97e28a2c9993f1c417abfcd0a424c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4081" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4081" bodyend="4081"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad10a37806fcdc27e63b6132e5100c1fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4083" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4083" bodyend="4083"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcc5202a34d7144017533eaba8d377a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4084" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4084" bodyend="4084"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a560e79aeca415c578e3a1509fa45b953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4086" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4086" bodyend="4086"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad07a0b9eae580e8f3e52563fae1696a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4087" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4087" bodyend="4087"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d550ffa748d1c3cc8a0a76d23a46adb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4088" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4088" bodyend="4088"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb3aac94b2a5a84ed82b6228c2e645e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4088" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4088" bodyend="4088"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf02748ef5a651051a46a4c0ba754606" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpslldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4090" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4090" bodyend="4090"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a554953397f559b5734cd05e9045b0633" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpslldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4090" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4090" bodyend="4090"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae95b7bcdb341fc607088ffe878dd2f0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4092" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4092" bodyend="4092"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b545d6ec716016eec2189042873e1a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4093" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4093" bodyend="4093"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d59d6e471121f95a4f6f8f1ef2732f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4094" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4094" bodyend="4094"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69eba0f989d79e19c6acd1e0e56f15b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4094" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4094" bodyend="4094"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2fc4a320b858f963741e193c2b4ade7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4096" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4096" bodyend="4096"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6b36030264c443e115f7dcd18cbb3a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4097" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4097" bodyend="4097"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2700d8d875832e0705952cb06d6b91df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4098" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4098" bodyend="4098"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54b52854d117915557ba8dc3c98268c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4098" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4098" bodyend="4098"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ea53b778d75de194b4d1240bf59614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4100" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4100" bodyend="4100"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4fdbf186adb96b4519dee2151ccb16f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4101" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4101" bodyend="4101"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f1f04fd19e1c5a28f04ec423fb60048" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4102" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4102" bodyend="4102"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a884f7b3267bf47a2450990a2d4ce82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4102" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4102" bodyend="4102"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c19f54ea12fc4ffde0e59f0410d8465" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4104" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4104" bodyend="4104"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85d2732c3180648651c1634b59b0a959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4105" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4105" bodyend="4105"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8f979d46c1243a46b64a0cf3e02788b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4106" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4106" bodyend="4106"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ee394705e4cbe634bb4eb930c94c00a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4106" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4106" bodyend="4106"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62baad87a4511b9a1de203fee3148c4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4108" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4108" bodyend="4108"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d3f49c4b5c03f57bfefff46dae9ba46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4109" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4109" bodyend="4109"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f7ee6740aa348155b2bf64945a33a8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4110" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4110" bodyend="4110"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38a7c53bb0621ce6f0afce7fb9ce193a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4110" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4110" bodyend="4110"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab04395ea81c4833fe559e7a614f45b8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4112" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4112" bodyend="4112"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab750b2c1e37a544cf6f675c8be96b932" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4112" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4112" bodyend="4112"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6a5fe1c16023b1047430aa2581375b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4114" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4114" bodyend="4114"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc4f6144f06d16eae4c3ad9f82c26275" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4115" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4115" bodyend="4115"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a397db8ef638848db08ae6f03b67e0019" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4116" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4116" bodyend="4116"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9136edcc62520b7d62996fbd91b6d4cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4116" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4116" bodyend="4116"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8e94490ff67b09da41a91b07183a28c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4118" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4118" bodyend="4118"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5a8a55a67d03b6362eafbf72d29d6c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4119" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4119" bodyend="4119"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af843d384f72f9c6c55fd51560ad69670" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4120" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4120" bodyend="4120"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a850bff919d9c5d3864358265ac3e03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4120" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4120" bodyend="4120"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65242e27ea559fe6789de2e08c3a3341" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4122" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4122" bodyend="4122"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb8c00a86c8e9c961d8cecc4b44c3a7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4123" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4123" bodyend="4123"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2df4d8d0288599922250f70031fd577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4125" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4125" bodyend="4125"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b3a60599b8589d499e05f72dd6cdaad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4126" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4126" bodyend="4126"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd4255829be42397d74ef765e7232ee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4128" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4128" bodyend="4128"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a842a0e7cab7c353f54160f4c3aa68b7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4129" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4129" bodyend="4129"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7227bbcfec7318c6cf72659a7701e50f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4131" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4131" bodyend="4131"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95fe3e85a2e9ca9fc8543832da7b0f75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4132" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4132" bodyend="4132"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe6542a0d1148f22ba18e7e7a4ad7180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4134" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4134" bodyend="4134"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a64009261134bee3859c661e82d366bdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4135" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4135" bodyend="4135"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17bed72f6b5aca24d32016cc24e9bc1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4137" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4137" bodyend="4137"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abef1934edf020adc55003abd5b7fc6de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4138" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4138" bodyend="4138"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5ba85b9e42595eaaa6c96de0ca4453b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4140" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4140" bodyend="4140"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae67f64fe0c70907bfbba9acfecebf523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4141" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4141" bodyend="4141"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d623490ada6d9c3173a728c78d6d76c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4143" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4143" bodyend="4143"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ee1b71468b6479b230503634d8ab17a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4144" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4144" bodyend="4144"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe46e257108a24bbf9cff53693154f86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vptest</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vptest</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4146" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4146" bodyend="4146"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91255efca9379e457b99053e82f0bf9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vptest</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vptest</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4147" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4147" bodyend="4147"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a652c31a1461fe206f323e766f0ce50e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vptest</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vptest</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4148" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4148" bodyend="4148"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bf893ed3630475583828383179e4d0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vptest</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vptest</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4149" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4149" bodyend="4149"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af75fed537f5e80829383baae67fe63f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4151" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4151" bodyend="4151"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af46aa47d83ed9bbb2578d374293068fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4152" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4152" bodyend="4152"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca3678bc61431916aeac588a6c553f29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4154" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4154" bodyend="4154"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a389bd580f373ccae4458e02496828218" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4155" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4155" bodyend="4155"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb30f224ab20462aaccbf26534e1f038" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpckhqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4157" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4157" bodyend="4157"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae7adb397c38655506589495176f0113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4158" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4158" bodyend="4158"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0da8e15c8cfae4e17d85500e1c7026c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4160" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4160" bodyend="4160"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2a60e38900bf17c893d89a1efe71f38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4161" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4161" bodyend="4161"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3921d2c5bf024535037960c34d076943" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4163" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4163" bodyend="4163"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae712f74a49ea0215bfae5c2b1ed07c32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklbw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4164" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4164" bodyend="4164"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24d66500274f055ab908ef5cc9ca7ab2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4166" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4166" bodyend="4166"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89b0c7455eadc3e314037a094a949d49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckldq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4167" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4167" bodyend="4167"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a540625693400762155f485a7c9f6a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpcklqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4169" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4169" bodyend="4169"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a248f135438d51db601c3e976dee4c589" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpcklqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4170" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4170" bodyend="4170"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8164202858787c72669f56a7a6f53b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpunpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4172" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4172" bodyend="4172"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4913b53130f19e5b513ccbb7905a45a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklwd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4173" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4173" bodyend="4173"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac7412daf96735a3386576572857cb0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpxor</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4175" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4175" bodyend="4175"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c511372f7c735da8b18effaad0a8017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpxor</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4176" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4176" bodyend="4176"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e74c078415178e5ff0b51f79b35230e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrcpps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vrcpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4178" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4178" bodyend="4178"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac26d8818f1df611fdff2fa6829da4788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrcpps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vrcpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4179" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4179" bodyend="4179"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90b18fb3b3737b000391960cec0bce9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrcpps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vrcpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4180" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4180" bodyend="4180"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58b4074a28f03fc4b4ad8b012979f19a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrcpps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vrcpps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4181" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4181" bodyend="4181"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf46ee15eed625a38acb7364e8476573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrcpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vrcpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4183" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4183" bodyend="4183"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46e73df356ab98201abf278b608624a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrcpss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vrcpss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4184" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4184" bodyend="4184"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a5aba1f719c4b1e9a538d4a954d4c08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrsqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vrsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4186" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4186" bodyend="4186"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4418a4c00a37719dd3531c062ef820cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrsqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vrsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4187" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4187" bodyend="4187"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1979c82aaa8a7a71a3c7e29b5ac4a245" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrsqrtps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vrsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4188" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4188" bodyend="4188"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6509ba3b9adb698c1efb5a422c53389e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrsqrtps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vrsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4189" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4189" bodyend="4189"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a598a9f33698c122ec1c7fda4528c3849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrsqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vrsqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4191" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4191" bodyend="4191"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf1d736f8a15c2d7975053f0e71ebef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vrsqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vrsqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4192" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4192" bodyend="4192"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4147f2095f27de5e164da2c668af0323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4194" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4194" bodyend="4194"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b660228c23b76c0e260ce9bad18913f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4194" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4194" bodyend="4194"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc4433d3e9c30e2653df2b7dd1d7af49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4195" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4195" bodyend="4195"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcc4ead5304e0de8df857132e76ceee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4195" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4195" bodyend="4195"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4ff65e2d3c961626f254bd04b02a71f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4196" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4196" bodyend="4196"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5dcf0120d5e972ceceaace415fbd0ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4196" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4196" bodyend="4196"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61608ac868f3b9f9b2d3ef2f1cc60ba9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4197" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4197" bodyend="4197"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c822889193ae7455073feb23a2d633b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vroundpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4197" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4197" bodyend="4197"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc6c78bcdd9bb992972f295a0e2f02c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4199" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4199" bodyend="4199"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5825f9c16e726f4db94eae5e387b0908" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4199" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4199" bodyend="4199"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabd561699a0be9e8a8d9132c3156ad49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4200" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4200" bodyend="4200"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8efac675c2e3d5be708eabcdbfe78d54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4200" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4200" bodyend="4200"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2251823efc3c4ac7dc3396c7fe17646d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4201" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4201" bodyend="4201"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b7dc58160c0e42bbdbe397e992d28f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4201" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4201" bodyend="4201"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab763bf0f2866492ac5149713fad33561" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4202" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4202" bodyend="4202"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5be66a3c4fb026762dbf2e420e313afa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vroundps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4202" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4202" bodyend="4202"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ad48b6d8a146679c2b9dbc8e0d4c3cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vroundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4204" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4204" bodyend="4204"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2f6fab49594d756a1f7529b71cd6c67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vroundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4204" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4204" bodyend="4204"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae23cc2d1b2cd437746cdddbe923c1ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vroundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4205" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4205" bodyend="4205"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a134259b75b20d9a2654db8eee6ce3888" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vroundsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4205" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4205" bodyend="4205"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2492e156de62815b3123a41dc3b700c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vroundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4207" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4207" bodyend="4207"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada1b8ef7377641a9bfbb8c2a27251ebf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vroundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4207" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4207" bodyend="4207"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dfa1873a4dab555e3e48f91740c964f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vroundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4208" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4208" bodyend="4208"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4724d3fa52db4b647c8ddcd9d7c2e969" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vroundss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vroundss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4208" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4208" bodyend="4208"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9b433b8ec69f475849d33208ab6d3b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4210" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4210" bodyend="4210"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24c3eb3432a2f1612b96e8986e22c5a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4210" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4210" bodyend="4210"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10e95d159afa083d5ce6a9a1a5ccaec6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4211" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4211" bodyend="4211"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb623e3685005c1c7e48b4a22966cb8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4211" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4211" bodyend="4211"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afacf3cff51711594ff74f2bd858f5cad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4212" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4212" bodyend="4212"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2c5d0f41817df54562c4ae391f45303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4212" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4212" bodyend="4212"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81f753f3d5c7a3141d610756311a37b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4213" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4213" bodyend="4213"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41b5aff912ff75e6ec4e633569ce04db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vshufpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4213" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4213" bodyend="4213"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c23fb13a454a2ddcc2e3f1f11acf1c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4215" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4215" bodyend="4215"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a648370903e31b8be6870e48532cbd6f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4215" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4215" bodyend="4215"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f151d9e1175a5f6915684e8418c07f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4216" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4216" bodyend="4216"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef3cac5afd3d763bfde3a9f0abd3da06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4216" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4216" bodyend="4216"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad50a2e09fba2ba731cd65b75c78f6026" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4217" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4217" bodyend="4217"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2a828b5642d340284e4979000e0402c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4217" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4217" bodyend="4217"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d4c4adeff703c6b448544342df75728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4218" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4218" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a321ba28a133e0535943dbdc58ecd0330" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vshufps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vshufps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4218" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4218" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90207a51c7d689aac2105177356091fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vsqrtpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4220" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4220" bodyend="4220"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb6edf90f8a3f5939065f1e31b518ba9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vsqrtpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4221" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4221" bodyend="4221"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8550223571e7a8ac2ce689ac4a54798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vsqrtpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4222" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4222" bodyend="4222"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adff18feb07bfa61229498db0d80d0140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vsqrtpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4223" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4223" bodyend="4223"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a471ff28fc467c66682b8bea4d430a223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4225" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4225" bodyend="4225"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad79f2426fb0d939173b579aaf006751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4226" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4226" bodyend="4226"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bc1def4bb51a1ab7452642e577a8a01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4227" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4227" bodyend="4227"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05ee7235c9998b1dbe4121c29fb36b7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vsqrtps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4228" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4228" bodyend="4228"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabd463267562e14f654b7e09bd73dbd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vsqrtsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4230" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4230" bodyend="4230"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68989ab3d7c3aff09d7514e6e06391c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsqrtsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4231" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4231" bodyend="4231"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a76e7e118d8588442496e586253065486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vsqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4233" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4233" bodyend="4233"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d37b9db93cf82f37b81ca1bf4865593" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsqrtss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsqrtss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4234" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4234" bodyend="4234"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b587fc84fe8c63ae7d79697b4b5cdda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vstmxcsr</definition>
        <argsstring>(const Mem &amp;o0)</argsstring>
        <name>vstmxcsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4236" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4236" bodyend="4236"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf70a69c4d6f8ae37600e91f10c691a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4238" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4238" bodyend="4238"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af10e7b16e0159ec0a301238fe490743f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4239" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4239" bodyend="4239"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad603517d7ada77d4049f790b871f56d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4240" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4240" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a7af9b955e105ba4cb8bd7ac046bc72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsubpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4241" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4241" bodyend="4241"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a547fd027d68e5909b1ae8c355b687266" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4243" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4243" bodyend="4243"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d26b79b97c1687932a4dae52ff9d570" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4244" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4244" bodyend="4244"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8660ce26e020f1db94c53431b50c7598" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4245" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4245" bodyend="4245"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cdf6eabe0b27b0a43d5cdb61cf870bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsubps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4246" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4246" bodyend="4246"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cc42ff3a07f00915bfdc2ab51364044" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vsubsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4248" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4248" bodyend="4248"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6cb2f1f7e2b65fa33fcfc2b568859b40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubsd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsubsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4249" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4249" bodyend="4249"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff49fdccb95a1fe1cc3aeab5390f4084" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vsubss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4251" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4251" bodyend="4251"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf76a0bda7dbec3c4ecdc8b418ca3e55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vsubss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vsubss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4252" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4252" bodyend="4252"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dae00e5382553a5b980253fff405aec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vtestps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4254" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4254" bodyend="4254"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c697124071bdff879ad141a9951f9ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vtestps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4255" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4255" bodyend="4255"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a032e9caaf72e6f795664c4fb4a6b1397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vtestps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4256" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4256" bodyend="4256"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabc43c5909c9a298bb9dc23c7a447358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vtestps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4257" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4257" bodyend="4257"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93e9081ee9b0fe43165f71ad6c0d7633" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vtestpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4259" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4259" bodyend="4259"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6a7e1aa75caaa977e1a6fc265e74397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vtestpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4260" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4260" bodyend="4260"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4fde3120f67e9000ee2985ec496e8b7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vtestpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4261" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4261" bodyend="4261"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c87519dc01487930aa2d065f988d13c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vtestpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vtestpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4262" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4262" bodyend="4262"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ce205fe63da9f59179b43f32bd3d912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vucomisd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vucomisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4264" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4264" bodyend="4264"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a686b73b918706b53f7161570443121ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vucomisd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vucomisd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4265" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4265" bodyend="4265"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b1105f2cf6a2e958cf67d21064bb9f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vucomiss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vucomiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4267" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4267" bodyend="4267"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42ac01b335827c6b6549629add1f0eec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vucomiss</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vucomiss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4268" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4268" bodyend="4268"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad58a511526a820cf7f88b1492443c2da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vunpckhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4270" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4270" bodyend="4270"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4ccbb9f90d4df0611c2470385279053" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpckhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4271" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4271" bodyend="4271"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adefb901a4323618c9a3b91317108e740" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vunpckhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4272" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4272" bodyend="4272"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae88b3bcb4c23716b28a4d6dce26f8c37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpckhpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4273" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4273" bodyend="4273"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1339deb0b9bfbd6ebcbee7407fd7c193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vunpckhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4275" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4275" bodyend="4275"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3efa26b47d99d79ad9e3d57a53354548" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpckhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4276" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4276" bodyend="4276"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afea61d134cb9806a9b5ea8284a63a360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vunpckhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4277" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4277" bodyend="4277"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac522b8fed74bc8eb2589f8e555b0c379" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpckhps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpckhps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4278" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4278" bodyend="4278"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b58b52c32b668c7671e0abe556fcc4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vunpcklpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4280" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4280" bodyend="4280"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad280406ec404d20e05c8e5a9fcd69bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpcklpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4281" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4281" bodyend="4281"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a052a98c242cc248dfc06e8f1e58f5c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vunpcklpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4282" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4282" bodyend="4282"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28a483c5fad12b0fd0bc32931741716e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpcklpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4283" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4283" bodyend="4283"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0698ec793b6f8b714e3e484a83881231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vunpcklps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4285" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4285" bodyend="4285"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf412322d963544fedb6452d5372bbce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpcklps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4286" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4286" bodyend="4286"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8ad1c4aac0ea180eef482b5066f0a5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vunpcklps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4287" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4287" bodyend="4287"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3f549fa9c0800a2fbd3e200840990de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vunpcklps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vunpcklps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4288" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4288" bodyend="4288"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4046e115ff358a3bb97eed99e065d1a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vxorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4290" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4290" bodyend="4290"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a353e38d642a862de445634ea796a631b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorpd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vxorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4291" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4291" bodyend="4291"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a245df1bd00014af7016dc9aaf8caa628" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vxorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4292" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4292" bodyend="4292"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a364ee84e56b52a1872133422cdeba035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vxorpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4293" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4293" bodyend="4293"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a693b9fe1cf2b86549b66bda763a015" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vxorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4295" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4295" bodyend="4295"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae47ae8319f4bbef970e33f9658295ad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vxorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4296" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4296" bodyend="4296"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a493e239008db7edbc6969941878f471b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vxorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4297" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4297" bodyend="4297"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a624494631a4a67e6d283c5dcc3db9dd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vxorps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vxorps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4298" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4298" bodyend="4298"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cfaf46645ed5714be1a126540f8c909" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vzeroall</definition>
        <argsstring>()</argsstring>
        <name>vzeroall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4300" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4300" bodyend="4300"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ad884126256e6f1f51b6513dff7b394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vzeroupper</definition>
        <argsstring>()</argsstring>
        <name>vzeroupper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4301" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4301" bodyend="4301"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af42ee665c5106babfaa354ef430242d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesdec</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaesdec</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Perform a single round of the AES decryption flow (AVX+AESNI). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4308" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4308" bodyend="4308"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b7b6fcc6b1df3b578b516b6b0a74380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesdec</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaesdec</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4310" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4310" bodyend="4310"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93931b2cbdafe61135978030c9eefc9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesdeclast</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaesdeclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Perform the last round of the AES decryption flow (AVX+AESNI). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4313" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4313" bodyend="4313"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad859b39347d459a54d2aea0e5285341" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesdeclast</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaesdeclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4315" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4315" bodyend="4315"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c8b13bb7ebb60d4d40a59b1d939d4ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesenc</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaesenc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Perform a single round of the AES encryption flow (AVX+AESNI). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4318" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4318" bodyend="4318"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80a1e72c444885a5996ddca43f63aa8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesenc</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaesenc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4320" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4320" bodyend="4320"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae46eb8391754b78da6895ea127c8e420" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesenclast</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vaesenclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Perform the last round of the AES encryption flow (AVX+AESNI). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4323" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4323" bodyend="4323"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21631129ebe23e8cf77e6853fca40feb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesenclast</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vaesenclast</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4325" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4325" bodyend="4325"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad00a215a942e3e68ba23f75213c0fbc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesimc</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vaesimc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
<para>Perform the InvMixColumns transformation (AVX+AESNI). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4328" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4328" bodyend="4328"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56726126e595167c7bddd063f304e12d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaesimc</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vaesimc</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4330" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4330" bodyend="4330"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93d7e20dfbcf907dea92ddd47e89a830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vaeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Assist in expanding the AES cipher key (AVX+AESNI). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4333" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4333" bodyend="4333"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c1c5bf73b048b2bc042e024519e614c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vaeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4333" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4333" bodyend="4333"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27d154e9045a4ef1cd539cfdb9dd5275" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vaeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4335" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4335" bodyend="4335"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87f486c4b799cfe4c7735b9f34507060" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vaeskeygenassist</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vaeskeygenassist</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4335" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4335" bodyend="4335"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a45f8bcfdca285f9bc7c8c9b8410107c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4341" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4341" bodyend="4341"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad45c2d1c0f7f2d24948f5555b05b6faa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vpclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4341" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4341" bodyend="4341"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0725ca9d5ae678443aa7efea6eb0018f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4342" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4342" bodyend="4342"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac41f7689dd309cfad2368d1714fcbca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpclmulqdq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpclmulqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4342" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4342" bodyend="4342"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0779cf337e22d1b2f799c1ed3eefeb82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcasti128</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vbroadcasti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4348" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4348" bodyend="4348"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6820b8d7c3bc7f0a21fae74427b29346" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastsd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vbroadcastsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4350" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4350" bodyend="4350"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada2179676edb4a9acb3319993821a5f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vbroadcastss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4352" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4352" bodyend="4352"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a485890fb6658149b86498a2674dfc5f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vbroadcastss</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vbroadcastss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4353" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4353" bodyend="4353"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a572496447ac45bf54a6f8e0e686428fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextracti128</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vextracti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4355" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4355" bodyend="4355"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56285296ffc184f21586f346487e1877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextracti128</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vextracti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4355" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4355" bodyend="4355"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5014b637a59065f222b084c1d10b889a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextracti128</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vextracti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4356" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4356" bodyend="4356"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a216dba9ca670af096d9c50d041e9a6ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vextracti128</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vextracti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4356" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4356" bodyend="4356"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10ef3482e80d8d057d8630114cd0fd87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherdpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vgatherdpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4358" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4358" bodyend="4358"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fd31fee33a4174d2041165c027d0ad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherdpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vgatherdpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4359" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4359" bodyend="4359"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0a2a0db3a575b316d2fb7238849ebe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherdps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vgatherdps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4361" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4361" bodyend="4361"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a2d06ceb400dc14ef4c0f6fa6730f6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherdps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vgatherdps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4362" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4362" bodyend="4362"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0d4014354cbf835624ca5a9d1de8754" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherqpd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vgatherqpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4364" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4364" bodyend="4364"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0c118a5eeb8f2f7afeb41685efd6421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherqpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vgatherqpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4365" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4365" bodyend="4365"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17891d6c9a5212a5d7fd8a737648de05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vgatherqps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vgatherqps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4367" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4367" bodyend="4367"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af76c03370a5d5d60e4d743aa70189df5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinserti128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vinserti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4369" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4369" bodyend="4369"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17fbbbca3d52a0370cfdee5f0939a280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinserti128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vinserti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4369" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4369" bodyend="4369"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25826ed73c4ad5b664ad2b074c010820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinserti128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vinserti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4370" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4370" bodyend="4370"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c96bc77d9bc586c8a363d86034a2cc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vinserti128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vinserti128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4370" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4370" bodyend="4370"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24e79937ef0f86ffdfb9a71be9551b8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmovntdqa</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vmovntdqa</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4372" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4372" bodyend="4372"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52c08e25871bf66d257c85bd715e50a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4374" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4374" bodyend="4374"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05b47890f415da28f4be3c3078e7509f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4374" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4374" bodyend="4374"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c65531f64bf2bb6aab1f563f87a2c2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4375" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4375" bodyend="4375"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a44146fc60d7ab683643e791a6e4453ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vmpsadbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vmpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4375" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4375" bodyend="4375"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4c8c03b5345031a7ef6f9d65018ffcbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vpabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4377" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4377" bodyend="4377"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab067e48ebd097078318ad6f20248385d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsb</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpabsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4378" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4378" bodyend="4378"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35a374d0f48d99501cf94426b97252a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vpabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4380" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4380" bodyend="4380"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26cdb3f3e78109d7d06bde4043e1113c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpabsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4381" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4381" bodyend="4381"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dcf066999f1208692e8bf6382616a09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vpabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4383" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4383" bodyend="4383"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f1d818ffdde8aba5d355143368dd117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpabsw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpabsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4384" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4384" bodyend="4384"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac8e0414220bdac02c3c574a6d751e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackssdw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpackssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4386" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4386" bodyend="4386"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03a7b3b32d9fc96f55c01acb02971aec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackssdw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpackssdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4387" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4387" bodyend="4387"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf17888cd90704267cad73ab14f8ef24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpacksswb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpacksswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4389" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4389" bodyend="4389"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3abf591b195fcb128df8f94c2599f2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpacksswb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpacksswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4390" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4390" bodyend="4390"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a411c288b80590e2c22b1def40a0fd7b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackusdw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpackusdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4392" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4392" bodyend="4392"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab79115307511179d4e4226debd1f69ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackusdw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpackusdw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4393" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4393" bodyend="4393"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83aa874883fdc39502252b68267592cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackuswb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpackuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4395" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4395" bodyend="4395"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a14ce1e3c948abe19ecbc77d02b5163f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpackuswb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpackuswb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4396" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4396" bodyend="4396"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae7e69155e1f5d0f5ba0a56cde3aae387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4398" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4398" bodyend="4398"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa487221787f7a25684b83b83342feb4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4399" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4399" bodyend="4399"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17238dd675930b173ced5a11cd361f9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4401" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4401" bodyend="4401"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa765cebae19191d9848185b7f88db6c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4402" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4402" bodyend="4402"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a494296044af06408655c123d9ff9727e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4404" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4404" bodyend="4404"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd92c2fde971f7425251196a0f6dd7f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4405" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4405" bodyend="4405"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4364abe59b802fbfc335b4fc1f03e8b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4407" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4407" bodyend="4407"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a746ba59c7c4ac1f83515dfefe64240b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4408" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4408" bodyend="4408"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac7ff75fca15cdc9db06ca9b1e49716f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4410" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4410" bodyend="4410"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0af24177dc40b106623deddefdc2eb60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4411" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4411" bodyend="4411"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeee1d1a766549225e5bcd14d3bd21455" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4413" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4413" bodyend="4413"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17dac2d0ca37b7f84a5f9030b5820d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4414" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4414" bodyend="4414"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7323eec346b513900b5fec5540ea958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4416" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4416" bodyend="4416"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab08e04f2b03774801bd8caf1a1e022c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4417" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4417" bodyend="4417"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a342f383e27367fa6811c87f6fc6aaac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpaddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4419" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4419" bodyend="4419"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d3604a17abdfa285a9a9f05a2e5808d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpaddusw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpaddusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4420" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4420" bodyend="4420"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaad46ef2dddf85caed5233ba3cf5cfa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4422" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4422" bodyend="4422"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb850706dd86c11efb966cf268265deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4422" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4422" bodyend="4422"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85d575dca7f473afbdce861e4d1ebc55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4423" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4423" bodyend="4423"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f971298e97512458ddbe1dbf34f4bba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpalignr</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpalignr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4423" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4423" bodyend="4423"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c32c8bb02626944bcc082ad7d07a552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpand</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4425" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4425" bodyend="4425"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1275e95a2089e7ebc0e1cfc434838e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpand</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4426" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4426" bodyend="4426"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2cd68580b3b5ee457c7e72fd536cd3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpandn</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4428" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4428" bodyend="4428"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae68f0f3a61439f85e4429553166c7d23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpandn</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpandn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4429" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4429" bodyend="4429"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d989e0409c93a0ffd1c6e9109dbee86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4431" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4431" bodyend="4431"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef5bc910a489e09762321dfb1313b434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpavgb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4432" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4432" bodyend="4432"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f607dbd222b84e7e845032fc6626ac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4434" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4434" bodyend="4434"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfb002d69dd28d52da9ed40dbadaf9bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpavgw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpavgw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4435" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4435" bodyend="4435"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a260234cb03fe24336124e519645e4bb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4437" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4437" bodyend="4437"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac11f477617aeeb8dbbd5210c877e3a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2, int o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4437" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4437" bodyend="4437"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1accd728d59245542ffb9c86af2cc48ec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4438" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4438" bodyend="4438"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5bfb60ab8147c86ae387251c0b3746a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4438" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4438" bodyend="4438"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae49527390d203b00d4a6cec3715e90c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4439" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4439" bodyend="4439"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2268dbaf898e6cffaa0db469a5265820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4439" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4439" bodyend="4439"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25ff8babd2524478771795e438a34662" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4440" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4440" bodyend="4440"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77ede12985d079e7291263b0c72d79f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpblendd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4440" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4440" bodyend="4440"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae86dfb37352e7c4163ab2938363f8bdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendvb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const YmmReg &amp;o3)</argsstring>
        <name>vpblendvb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4442" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4442" bodyend="4442"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2f30a92427d99811766e6c7dee63b51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendvb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const YmmReg &amp;o3)</argsstring>
        <name>vpblendvb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4443" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4443" bodyend="4443"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83bf8b226a4ed5ed523f79be10d1bab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4445" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4445" bodyend="4445"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0192a7ae66b3b3e18dfd9808eeec399c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4445" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4445" bodyend="4445"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b9ff660f7061bc691d45c8795be124f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4446" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4446" bodyend="4446"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3fe74173628d3964808019bcd99da99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpblendw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vpblendw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4446" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4446" bodyend="4446"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a859a9467d4d1a7c4de918a94cb95213f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastb</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4448" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4448" bodyend="4448"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27af0439cc61b9f41ee47c6f92f30738" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastb</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4449" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4449" bodyend="4449"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac233ae6faea72c7698d3d489a81ee3b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastb</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4450" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4450" bodyend="4450"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a034c2248524c0eff113a8421074d655f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastb</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4451" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4451" bodyend="4451"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1591c7441c810d2aa18aafcad6ede52e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4453" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4453" bodyend="4453"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e473a5b7813b3e2370c68d23188448b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4454" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4454" bodyend="4454"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a219a5915a8b0ecfaf55b5254a25566d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4455" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4455" bodyend="4455"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5fca3d5592371249a25114c77255aaf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4456" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4456" bodyend="4456"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ed1b73192a8da1293c733197279dbe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4458" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4458" bodyend="4458"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6f2a82193c4c4f0977978866b04f1a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4459" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4459" bodyend="4459"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a913baa714e35083f38cadcbc887edf47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4460" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4460" bodyend="4460"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d1274bb1fc74beb4495ccd858583b68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4461" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4461" bodyend="4461"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d1ca8f2bd0b6c8444433b5610894a5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastw</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4463" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4463" bodyend="4463"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d4b1e6986292a081e9cd6ade23973a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastw</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4464" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4464" bodyend="4464"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a660bdf054e4ca68df2e68e86bb39f654" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastw</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpbroadcastw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4465" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4465" bodyend="4465"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a394c6a5a546e4706cd35d28c8884c75d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpbroadcastw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpbroadcastw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4466" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4466" bodyend="4466"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac66e3002e2b74428dcab69d3625c5bca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4468" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4468" bodyend="4468"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a987ba605390c68544224ed38071e0316" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4469" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4469" bodyend="4469"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a271ec31eb69fb49efeb7bd0448deec06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4471" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4471" bodyend="4471"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31b698550e933f079a2b9acfd99e48f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4472" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4472" bodyend="4472"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a733dd2c5a48760bca984a01d4958447a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpeqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4474" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4474" bodyend="4474"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a189652dadb294e21dacbb9657c492193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4475" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4475" bodyend="4475"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a269795509f289f63b8e4797d6ff5e4f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4477" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4477" bodyend="4477"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa76f4a8515625d372b44b55650c156f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpeqw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpeqw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4478" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4478" bodyend="4478"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d86ed9988aecb6651d2ccf453f66f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4480" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4480" bodyend="4480"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac82c9447398f23309518672a8624f6b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4481" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4481" bodyend="4481"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f81553561972237341da53889748716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4483" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4483" bodyend="4483"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6977573c9543bc56378c62cd660a3c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4484" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4484" bodyend="4484"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a244d2fbbffc31664284bdeda9277e8c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpgtq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4486" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4486" bodyend="4486"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdaff341946a736d4ac25b66599f4640" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4487" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4487" bodyend="4487"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e36c14551ef4cac2d104cf523ce7207" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4489" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4489" bodyend="4489"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1715e7e4bac30cd8df55bf507238d2c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpcmpgtw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpcmpgtw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4490" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4490" bodyend="4490"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95de9613cf1f419eb9096d4cd4638e46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2i128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vperm2i128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4492" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4492" bodyend="4492"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0f8b958560e71b7409ed49497d4f1a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2i128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2, int o3)</argsstring>
        <name>vperm2i128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4492" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4492" bodyend="4492"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aefae9cdce67e414aa4b3c14882fa45a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2i128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, const Imm &amp;o3)</argsstring>
        <name>vperm2i128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4493" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4493" bodyend="4493"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afeaf17ec758f8e7a82fccee05e6590a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vperm2i128</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2, int o3)</argsstring>
        <name>vperm2i128</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4493" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4493" bodyend="4493"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8101e73be868fd485d91ee0883109dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpermd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4495" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4495" bodyend="4495"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a026a448e2aa1566eecbfb7c9a218dd73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpermd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4496" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4496" bodyend="4496"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a044933ae89573f8ff9e2bf517fa47016" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpermps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4498" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4498" bodyend="4498"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa74348a46f51980755cf8f52b50a0256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpermps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4499" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4499" bodyend="4499"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5619595b707109a655083157ee3ec30f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4501" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4501" bodyend="4501"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33e82e78863ae9893c10e8ebf505ec77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermpd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpermpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4501" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4501" bodyend="4501"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb084789ad0390ddb75dc452dcdf0a4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4502" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4502" bodyend="4502"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52d3d484b67fca109af5ac4bd5ed5df1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermpd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpermpd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4502" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4502" bodyend="4502"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b2c3249296143044e2e412049183beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4504" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4504" bodyend="4504"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae83acd0f8470a6d30090d424232718a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpermq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4504" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4504" bodyend="4504"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab220fb75d929e92d405b933876b4e7bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpermq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4505" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4505" bodyend="4505"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab27fd9abde2d327b4fd25a593d242ae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpermq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpermq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4505" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4505" bodyend="4505"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7324da61306931e08601ec914c2f253b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherdd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpgatherdd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4507" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4507" bodyend="4507"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe35b4523deb34ced967eab6967a52ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherdd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpgatherdd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4508" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4508" bodyend="4508"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a031419762d7107aa8a6c29b551742e4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherdq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpgatherdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4510" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4510" bodyend="4510"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a732a2459e446dda97016ff9967fc3ab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherdq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpgatherdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4511" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4511" bodyend="4511"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb0101dba9107c2f866f2691d070f8c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherqd</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpgatherqd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4513" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4513" bodyend="4513"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a502fd496b445f978b9240e3e9baca7ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherqq</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpgatherqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4515" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4515" bodyend="4515"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9de2ffe28a0ec740508b87dcf354932c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpgatherqq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpgatherqq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4516" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4516" bodyend="4516"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1bcb6932bc11793c2a4b78338a09499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovmskb</definition>
        <argsstring>(const GpReg &amp;o0, const YmmReg &amp;o1)</argsstring>
        <name>vpmovmskb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4518" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4518" bodyend="4518"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c2f1feee21ace5761c94e5e79f4ff72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4520" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4520" bodyend="4520"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a224552c10e1ef9aa1a7e44a3cf43e15b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4521" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4521" bodyend="4521"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8c9c89766ccba914513d2be9837c4c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4523" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4523" bodyend="4523"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67ed68fa51d09d030a21b828765356fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4524" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4524" bodyend="4524"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6e3b084b0a82542bb9a70194e3d29cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4526" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4526" bodyend="4526"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69eba1d6a69c34865a87f6ea76373388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxbw</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4527" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4527" bodyend="4527"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a29a6d7e962dc58c2abffde580311b4fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxdq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4529" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4529" bodyend="4529"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a228a4f9c98920e0634268442654140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxdq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4530" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4530" bodyend="4530"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad3488ba91b474c801a86868a9b0deb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4532" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4532" bodyend="4532"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af55c2f875d02dff1bd211e80497802f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4533" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4533" bodyend="4533"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48d17594c84ef040ac3502e4912b69a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovsxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4535" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4535" bodyend="4535"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5bb55100eb0d834313615b928ab05c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovsxwq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovsxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4536" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4536" bodyend="4536"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a902d48acf7ec8462be5875d2c75966cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4538" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4538" bodyend="4538"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade9b8e2609051fe67d58baa279927597" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxbd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4539" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4539" bodyend="4539"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac9ccd2ad750d56f82766e5e7be45018" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4541" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4541" bodyend="4541"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a084f2c4dc071720b4ec896a96e74978a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxbq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4542" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4542" bodyend="4542"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2baa9effbfbc672822124dcbaa8b761" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4544" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4544" bodyend="4544"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac60a6a85064788c64097b8c8cb8aa3ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxbw</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4545" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4545" bodyend="4545"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acabdac81371869a05d27d2819cdbacf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxdq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4547" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4547" bodyend="4547"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab38c0373a4bca073488f325b1dd8091f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxdq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4548" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4548" bodyend="4548"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20f38c32cea0287eae903e63cbbf3923" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4550" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4550" bodyend="4550"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6bd10de6e95cd041bb308f70f0f9f41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwd</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4551" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4551" bodyend="4551"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46bc69bd1e1e4598e51d20424bc0442f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwq</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vpmovzxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4553" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4553" bodyend="4553"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7720a407349eced2388ec28924ee9fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmovzxwq</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vpmovzxwq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4554" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4554" bodyend="4554"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca6077eb044320500ec068b57bfd9640" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4556" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4556" bodyend="4556"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0f231ebd4c230faecaf5adbec2154ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4556" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4556" bodyend="4556"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2ddf60a573cabdc3ac8c3170e5cfe15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4557" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4557" bodyend="4557"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd404d09e411872c276a11d3f3906d65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpshufd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4557" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4557" bodyend="4557"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeec7de527fe3b61cebdabc5a6a58dc9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4559" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4559" bodyend="4559"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02d56ca462bcf21b6d5591e0f4db323e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4559" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4559" bodyend="4559"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fd9a59b78010214a85c8df83c8f2225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4560" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4560" bodyend="4560"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd66a760dbe4a4c6cad22d51399bc47c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufhw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpshufhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4560" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4560" bodyend="4560"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae44e02a1dbb34339d09d28ab45dab985" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4562" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4562" bodyend="4562"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1a30211c79f978565e78fcfb584bbcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4562" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4562" bodyend="4562"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ea6e286ef8b60f53b4e6f7c6bc13d24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4563" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4563" bodyend="4563"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad71f35dd98d0f1426f318f1662857ac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshuflw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpshuflw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4563" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4563" bodyend="4563"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad3f663bc0c0f8aff645c55a4a76d043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4565" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4565" bodyend="4565"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a0f5ceec5c1bbfc3bb923bb977f574d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4565" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4565" bodyend="4565"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92b6ae5444c79026a3ef2a9544bb03e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpslldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4567" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4567" bodyend="4567"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee8f31e7459040fb6e8b586d2966ec4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpslldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4567" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4567" bodyend="4567"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a1613ab398d7c2e5e5267dce3017da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4569" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4569" bodyend="4569"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f86cd25f4cdb2203909fae8a0e354b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4569" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4569" bodyend="4569"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a565321554e8e66cce85ca0a6c4548b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4571" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4571" bodyend="4571"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afec59184ee14680878808d3d6c995d07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4571" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4571" bodyend="4571"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a057f9b3c980485805d68e1773f9c04cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4573" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4573" bodyend="4573"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77287cbd8a334f9d432daeecac13953e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4573" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4573" bodyend="4573"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa7f74475aaba96de362bc8fdf3ef9b71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4575" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4575" bodyend="4575"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab53032f87f41913e7d43d0a5246f85ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4575" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4575" bodyend="4575"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a645ce467fd8165156ce8ae1fdb86d7c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4577" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4577" bodyend="4577"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5585e84be8bf5285744f4d85a4e8f1dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4577" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4577" bodyend="4577"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa64dffb8cd7f04255ff05c6f776224be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4579" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4579" bodyend="4579"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1eb32c1785fa30d02beb582ea90ab5f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4579" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4579" bodyend="4579"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38531ea886597c0797c848dabd1f9bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4581" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4581" bodyend="4581"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c945b074500d4df6d8120286ed929f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4581" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4581" bodyend="4581"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54c53aa562dd9f17f83c95725f5f06e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4583" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4583" bodyend="4583"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69df118773cfc7c8aa164654bacab727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4583" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4583" bodyend="4583"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ddabb1682c8a35837e5e0f4fe132865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4585" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4585" bodyend="4585"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c47556e7d213d0650e09b5314e7e97e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vphaddd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4586" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4586" bodyend="4586"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1d0cb5960acd549598e598a05b0d1bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4588" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4588" bodyend="4588"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a348572836e6f7ab671002900347e5b0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vphaddsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4589" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4589" bodyend="4589"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1407f10aa8aef59f1da774cdf1d24fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4591" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4591" bodyend="4591"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2bfc6039f1fc3402adfd626096bd46a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphaddw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vphaddw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4592" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4592" bodyend="4592"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f8c6e8f8a088be2376863cb31a2047d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4594" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4594" bodyend="4594"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a59dd911a8f2b7e08eba3b9e275275c83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vphsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4595" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4595" bodyend="4595"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a659f48fa613ac7482a0142716f57e5f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4597" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4597" bodyend="4597"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6cab35061f49e5dded7b3064b0cb3b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vphsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4598" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4598" bodyend="4598"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9aa6c2d2637a277155ca8e7fcd0ad0fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vphsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4600" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4600" bodyend="4600"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d7cade9fb135db2aa881fe3f2a8ee6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vphsubw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vphsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4601" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4601" bodyend="4601"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a026ac62d9150471dde0610590444f949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddubsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4603" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4603" bodyend="4603"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74d86c9db706bcb8e51d862a33bc7d29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddubsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaddubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4604" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4604" bodyend="4604"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff576f1a958c63a2e1d3ec79158d270f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddwd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4606" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4606" bodyend="4606"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86f91932588cd3a44b9576a848211c2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaddwd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaddwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4607" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4607" bodyend="4607"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5af90f9ee8e9876f8d883e4ac1a511d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovd</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaskmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4609" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4609" bodyend="4609"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09cdb26b2edae092fbadff84a116d6cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovd</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaskmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4610" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4610" bodyend="4610"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa780ad16b07bd24ddebb31fb99047a46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaskmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4611" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4611" bodyend="4611"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2879036a52d619a671b47495db62c122" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaskmovd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4612" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4612" bodyend="4612"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e22891e36d33141de1074cce7bc29b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovq</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpmaskmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4614" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4614" bodyend="4614"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaaf49dd962668c2024eaee7c91da1bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovq</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaskmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4615" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4615" bodyend="4615"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a940ca427962ad034207291da8a3fb753" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaskmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4616" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4616" bodyend="4616"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a044bf0fb7b4b8068ebb74457bb859fd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaskmovq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaskmovq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4617" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4617" bodyend="4617"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac61272924ed2fd5f1dbe00eb5801cdbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4619" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4619" bodyend="4619"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad86129d6ffa1f248a5bd0177536c5b43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaxsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4620" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4620" bodyend="4620"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af75b6d3d8a1f33887411be01f5667b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4622" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4622" bodyend="4622"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af20257ac8da35468035f8417181c71a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaxsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4623" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4623" bodyend="4623"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0187d67fce076de9903797e248ce2bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4625" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4625" bodyend="4625"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26cf264ea71a6e6664160bb68e6f9e5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaxsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4626" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4626" bodyend="4626"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a056f3d74ca7311c14a60de63db8eb2e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxub</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4628" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4628" bodyend="4628"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1764873d8aeb575ba02a9b14758a3829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxub</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaxub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4629" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4629" bodyend="4629"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8c8ebc8cc6194b74a81379d66741f28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxud</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4631" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4631" bodyend="4631"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcd56575eb081df92f75eaa3dfe48877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxud</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaxud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4632" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4632" bodyend="4632"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd9421629e8d8a21b1c827c7b23558d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxuw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmaxuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4634" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4634" bodyend="4634"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5309c64879055f000c1e5e5e9f03fc56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmaxuw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmaxuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4635" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4635" bodyend="4635"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8ebca25d9b93188ecbfe16bdd08b2b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4637" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4637" bodyend="4637"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aebfb1d82ace51b6d792a8d8af01faa9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpminsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4638" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4638" bodyend="4638"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55cf7c2b967cac8c0064055d0c494c74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4640" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4640" bodyend="4640"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e3da3b282e377141d6d7a5d6d1222f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpminsd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4641" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4641" bodyend="4641"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac99789c315858372c9756ede0c1c91e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4643" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4643" bodyend="4643"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43751b4b631dc558aa6062fc96113bd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpminsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4644" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4644" bodyend="4644"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa6f24b5dfe0fc44029a884005b1326d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminub</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4646" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4646" bodyend="4646"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9c1f35bc3e0dab079991b695a92febc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminub</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpminub</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4647" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4647" bodyend="4647"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79dd7c839496c15397823f45e20f5c2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminud</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4649" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4649" bodyend="4649"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc3d61fc3c05f74220fe0f9167209b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminud</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpminud</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4650" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4650" bodyend="4650"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6d5c240bc4aff9006e2ed0e92cd9997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminuw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpminuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4652" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4652" bodyend="4652"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3812bde88dcc8ad5b22c652ff0b09c98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpminuw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpminuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4653" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4653" bodyend="4653"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89c89f9acdb5e097c85ef06e1788052e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmuldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4655" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4655" bodyend="4655"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f545a1e607e3a7da5e0c738cc7cdc75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmuldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4656" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4656" bodyend="4656"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9d329fa306ac79629ebeb5b67f26360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhrsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4658" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4658" bodyend="4658"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc4aba95f47c4fc283d4814e52c3c370" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhrsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmulhrsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4659" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4659" bodyend="4659"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ea5da354561ecaff8ea45bfd893469f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhuw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4661" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4661" bodyend="4661"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9285e0dbf32be3f5143019a9501c623a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhuw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmulhuw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4662" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4662" bodyend="4662"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad1b0d217821dc579f7ca322cacfe9869" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4664" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4664" bodyend="4664"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9576739d10ee8fd5230488d6bebb6f5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulhw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmulhw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4665" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4665" bodyend="4665"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a343c9bfbbb5b22ed0c0c957779924a65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmulld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4667" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4667" bodyend="4667"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6f5e6773e97646b4be5fb42262c2360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmulld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmulld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4668" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4668" bodyend="4668"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aadb3cb7c1bbe8456596fd9530be34574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmullw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4670" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4670" bodyend="4670"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac243670abc04538be0f11014ac43cd51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmullw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmullw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4671" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4671" bodyend="4671"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31377db8893c4059cd28b700802c072e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuludq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4673" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4673" bodyend="4673"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa76bfbd7daa74c33ba01ce6839ab19a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpmuludq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpmuludq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4674" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4674" bodyend="4674"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f3d372072063db3c4ab2c81249b0b5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpor</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4676" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4676" bodyend="4676"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed6e7ba8b7f14796584bafbb1c3dd74b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpor</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4677" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4677" bodyend="4677"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ebffdbc393448d2326822070b3c3b2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsadbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4679" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4679" bodyend="4679"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6c66b2822a9f26d516bcfcc4bee6823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsadbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsadbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4680" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4680" bodyend="4680"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05ee9316fcb383830c054ef828c25f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4682" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4682" bodyend="4682"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c29cf24fdccfa9e818ff58dc262144e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpshufb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpshufb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4683" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4683" bodyend="4683"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af10e65d3fc3a126e048abf95ece6dad4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4685" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4685" bodyend="4685"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa567485357e9c50a6c75e5e01b134aee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsignb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4686" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4686" bodyend="4686"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d3e0f62e15297f3889d0f2ad9cb0eb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4688" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4688" bodyend="4688"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a3e2941817290622495f07cb0ae64be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsignd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4689" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4689" bodyend="4689"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c93da1f773001e6adf6eef98649f00c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4691" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4691" bodyend="4691"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a862e47a235f9eafa2668925ad6d830c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsignw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsignw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4692" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4692" bodyend="4692"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23eff9aa46da5c0feb417c6564dab170" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4694" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4694" bodyend="4694"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7df18c48e4ab5f8f3b53afb7cca436d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpslld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpslld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4695" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4695" bodyend="4695"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ababe80cde5dff2203855b0e5c29fa4cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4697" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4697" bodyend="4697"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb136f4053a3ad9acda4481ff9e206d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsllq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4698" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4698" bodyend="4698"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a997e1ad3fd6b52491912dfcfd000059f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4700" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4700" bodyend="4700"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b8148589a221981b7dbb31afc380f83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsllvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4701" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4701" bodyend="4701"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2caec5129b12bbb54b951ac0f1b9bf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4702" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4702" bodyend="4702"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff811259501cc73902c0859fabe88ce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsllvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4703" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4703" bodyend="4703"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62eeb6c2070f8f9fb1dd9ddd06eda33f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4705" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4705" bodyend="4705"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5590c467fa59961ccaf047685d9b97b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsllvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4706" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4706" bodyend="4706"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5820c481077565a693670636e632f49a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4707" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4707" bodyend="4707"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c4bd171fb3884014fe0d5d1c954c80f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllvq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsllvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4708" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4708" bodyend="4708"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48b46d7d0db06c779475d643798a27d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4710" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4710" bodyend="4710"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4cba5cce749b7a0613b41b7440d1db95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsllw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsllw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4711" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4711" bodyend="4711"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75b282f67285f5308d0893f1e10014e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4713" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4713" bodyend="4713"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a224c849d7897cdaafb005312f8e089b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrad</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrad</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4714" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4714" bodyend="4714"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f44e4b158ed6182152915038a7dd0db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsravd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsravd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4716" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4716" bodyend="4716"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a026cd904e7e5043dc317df7eedeb1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsravd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsravd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4717" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4717" bodyend="4717"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6208250dd35216077f5116ebeb8b88e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsravd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsravd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4718" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4718" bodyend="4718"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21f3e50ceb94b21f097e4b8623389862" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsravd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsravd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4719" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4719" bodyend="4719"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8d2d1373543af1798e72dc0cdbff62d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4721" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4721" bodyend="4721"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67181114cd477ed96e03814c08757175" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsraw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsraw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4722" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4722" bodyend="4722"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfcb9541b6ac12e4b695b62cfcbfb8f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4724" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4724" bodyend="4724"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5da8c32c5ecde9711e9db8d4649d84ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrld</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrld</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4725" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4725" bodyend="4725"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4adee1d2c54746699bb3b18ce70947a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4727" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4727" bodyend="4727"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ace70e6fad494262da9e0465fe5c390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrlq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4728" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4728" bodyend="4728"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb3080d311bbb73f6e1201849578bb43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4730" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4730" bodyend="4730"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba4f58dd68b90901c1aa92edf547cf68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrlvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4731" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4731" bodyend="4731"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95d88086aae13937b66b1e917a86cf4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4732" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4732" bodyend="4732"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a842a70fdede1244cc7cf4e0bb2119207" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsrlvd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4733" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4733" bodyend="4733"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a109ddb5adde2419bd58dcd9a72a843d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4735" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4735" bodyend="4735"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ebade15e9265ff984374884b28540fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvq</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrlvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4736" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4736" bodyend="4736"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac9ed52d84d39a95a196debd09307995e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4737" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4737" bodyend="4737"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55f1ebb2238f0df17d2818e25d55998b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlvq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsrlvq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4738" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4738" bodyend="4738"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7490942e084a7be0f9e00ee5cee5ef64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4740" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4740" bodyend="4740"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6d8d9f203b60ea7cf5894067918a0a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsrlw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vpsrlw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4741" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4741" bodyend="4741"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18ccfac388d5ee9654e0f870f49870d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4743" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4743" bodyend="4743"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96fdb8cdb999e69c6ac68df962d8513a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4744" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4744" bodyend="4744"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79ad0a5f1b024f8519ee1709d3f55790" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4746" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4746" bodyend="4746"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31e4d91dba9e83828bc581d5c47d7b93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4747" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4747" bodyend="4747"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb939b899e8644b7afdc5b26a4596119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4749" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4749" bodyend="4749"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac1ef7ac859ef31e2991e6440dbbca55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4750" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4750" bodyend="4750"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdd9b6d11f69d605c164fa2273a739d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4752" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4752" bodyend="4752"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe3be7ed9936ac9c9df338c57852e36e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubsb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4753" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4753" bodyend="4753"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff13c6edda052dafcecba61871af3360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4755" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4755" bodyend="4755"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03485d26f408eb5e0dbb98ea68d071f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubsw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubsw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4756" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4756" bodyend="4756"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6336e5e1d7484df192f2ae7a1be53c80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4758" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4758" bodyend="4758"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3e12aa04184e8d7141efcf6bb8bf1c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusb</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubusb</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4759" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4759" bodyend="4759"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90c65767f0e571ae21b4c09a3df4f90a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4761" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4761" bodyend="4761"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5699873bc6e40ec60cef0fde0f98706d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubusw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubusw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4762" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4762" bodyend="4762"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f8ee3125e9d4ab1d95251aadbfcc1dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4764" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4764" bodyend="4764"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb07ae1da6b858c8feebda050e05abe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpsubw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpsubw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4765" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4765" bodyend="4765"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6422bd264dbe5da5b77f34ae62a2c071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4767" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4767" bodyend="4767"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08fe52272376a52b588c31bb231bd93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpckhbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4768" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4768" bodyend="4768"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f5e271b2e77c37feb866026d5c25846" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhdq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4770" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4770" bodyend="4770"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a778f3ce767e7aba156cd01c1f9beb999" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhdq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpckhdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4771" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4771" bodyend="4771"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a6c9349510aa5623469110ad5c2ecd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhqdq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4773" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4773" bodyend="4773"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81450409c6c68e53ad935459ea4633cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhqdq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpckhqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4774" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4774" bodyend="4774"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a49bcfaab8c8cc3291095362ca838cf33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhwd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4776" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4776" bodyend="4776"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6387097e3353f8e964d7fc1fbe1d22a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckhwd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpckhwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4777" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4777" bodyend="4777"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe735587453b3fe5f2b4f0d2abf0e472" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4779" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4779" bodyend="4779"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a198952fa460f2edfa01d0497fe09375a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklbw</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpcklbw</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4780" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4780" bodyend="4780"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11b24b03f9bc2eac0c64f3675392eea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4782" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4782" bodyend="4782"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a499ec4e46c90b321a7be79a1344fd5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpckldq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpckldq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4783" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4783" bodyend="4783"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fab7d51d3f8eaca90763866cbbe53be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklqdq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpcklqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4785" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4785" bodyend="4785"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad082d07b8fbf635d1eb625b1b9ca3323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklqdq</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpcklqdq</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4786" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4786" bodyend="4786"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86fc3de469b3b4e2fd8bd0e2b528ab29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklwd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpunpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4788" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4788" bodyend="4788"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf2ffae822a946ad3223f9ec9da6f51c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpunpcklwd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpunpcklwd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4789" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4789" bodyend="4789"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcf51a922daf5ca951e2074a26041de1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpxor</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vpxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4791" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4791" bodyend="4791"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada6eb1681e2d9b368ea3e3275b76222a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vpxor</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vpxor</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4792" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4792" bodyend="4792"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52a16407ab67844cb66240c558cb62bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4798" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4798" bodyend="4798"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79ba579e4ef05bd2e0d3347559898220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4799" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4799" bodyend="4799"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0eedd339e5135b3dcc6884ba97146223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4800" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4800" bodyend="4800"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b02f2a974303ca62cb9027f0b9cfdb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4801" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4801" bodyend="4801"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7913dd931a62907c3cc7c2ff4768f7e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4803" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4803" bodyend="4803"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d73fb8872c1459c3f73ff04eeb8574f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4804" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4804" bodyend="4804"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30d1649db71be33db87f659a18f1cb31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4805" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4805" bodyend="4805"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a884f58b17f85306f6f2c868ffa65bf9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4806" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4806" bodyend="4806"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb67d9bb544b317b495f9d33125b56ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4808" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4808" bodyend="4808"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04f5b3d0a5ac763eddda076d0b3641fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4809" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4809" bodyend="4809"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad09d41df32bff8d6736ad8625bda415e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4811" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4811" bodyend="4811"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac059b6297c227afabb4a3360add36b4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4812" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4812" bodyend="4812"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5385b9f7f38b7a359e05cdc2e24a6d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4814" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4814" bodyend="4814"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a904336ff61fd3944a3dd93ffc145fb3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4815" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4815" bodyend="4815"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f44dff35a9faffef5dcca1edb9f14e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4816" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4816" bodyend="4816"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77a62f6d1e8ea3803ad64f75d43cc0ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4817" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4817" bodyend="4817"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca0ebf9a6bae2c3d952794561aed3d06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4819" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4819" bodyend="4819"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a568443868ca94724624118387162a252" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4820" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4820" bodyend="4820"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5caf70464cb703b4906031a465c59156" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4821" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4821" bodyend="4821"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d7d5d59aed91baba3ba6ff8fd24a147" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4822" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4822" bodyend="4822"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c4746a12844fc131ec1bbaa255b5a91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4824" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4824" bodyend="4824"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65503cc94941dd4ff809870661e5d0c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4825" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4825" bodyend="4825"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb350aa887840ea1cdfd9a5995d4cbbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4827" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4827" bodyend="4827"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a805477af0177282567db318b6cda6e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4828" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4828" bodyend="4828"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9947a1d892cbe6172bdf12fcf2c5fd4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4830" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4830" bodyend="4830"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abea86a50eddf35cda10027cdecdd89ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4831" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4831" bodyend="4831"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7760cee4f686eb6e7c9bffd6f245a1ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4832" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4832" bodyend="4832"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada43748e67e13099123ec7b3e243636b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4833" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4833" bodyend="4833"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a121e61e624503fc0be79bf408cb96ec8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4835" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4835" bodyend="4835"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2eb5ad4dc43a393e1c1e3857fb2bef81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4836" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4836" bodyend="4836"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2bf7e634b2d7f43941eb097f79a0323c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4837" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4837" bodyend="4837"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a88e57f567cd3f67e2e411d8b8395f923" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4838" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4838" bodyend="4838"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeba5ec9a21dbc79fdeced9b795047191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4840" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4840" bodyend="4840"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a84bb2aa74e9085de1e0a0284115edd6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4841" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4841" bodyend="4841"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62fb5127cebc2d585084e836dbb75554" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmadd231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4843" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4843" bodyend="4843"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab77c576c3344de531e55f29546ca9948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmadd231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmadd231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4844" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4844" bodyend="4844"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55a9747c72a7e8e06f48f222aca55a61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4846" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4846" bodyend="4846"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fbd8363300d4134a65f1ab8de9ae36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmaddsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4847" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4847" bodyend="4847"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74f05baffbf8a6087b132857451da825" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4848" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4848" bodyend="4848"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13c078af04ee11321077568260389ea5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmaddsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4849" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4849" bodyend="4849"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4428c631fa013ef9419ac2f697559ac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4851" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4851" bodyend="4851"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af74c0111f659484460744ab1d4574ece" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmaddsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4852" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4852" bodyend="4852"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e4d2a3e8eedeef66adaac6b1b8a9f05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4853" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4853" bodyend="4853"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae08bb55963f8c8bcca41133a8d2ebf46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmaddsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4854" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4854" bodyend="4854"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d5ee1e39994e089e0b081c382701872" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4856" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4856" bodyend="4856"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a53b55385f0b5c6d6955e4841aad99ac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmaddsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4857" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4857" bodyend="4857"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa5f25ef1ec13de8bd53a539d3af81b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4858" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4858" bodyend="4858"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9742b8f01da53f932561050be5e8db2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmaddsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4859" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4859" bodyend="4859"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a29a6defc02984a7f5cacfa5c6ca30f8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4861" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4861" bodyend="4861"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab39ceb0b9e7e3b60ab20870c9fee32a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmaddsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4862" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4862" bodyend="4862"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38611bdd585bed9297dc7c6b6d9710ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4863" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4863" bodyend="4863"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5dd0fe7e11ab07929aff45bc7ad4eaec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmaddsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4864" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4864" bodyend="4864"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5fb6fea86ea985e9b34e678f2717d30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4866" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4866" bodyend="4866"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad86fd8c42e590896ad08180068ab164a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmaddsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4867" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4867" bodyend="4867"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1b9d5825650ddae174114069cc57c5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4868" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4868" bodyend="4868"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02302be19ec368b3378fb14c0730a48b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmaddsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4869" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4869" bodyend="4869"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a60119cad7c1f53744ee2ebc5894b0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4871" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4871" bodyend="4871"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea2c8b0329a259cb5f0a0c7dd78e9c3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmaddsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4872" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4872" bodyend="4872"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0ef0679cab89b3a461d7a4f3ff9f490" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmaddsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4873" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4873" bodyend="4873"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67ec3a0f362a021f10d8da123fe78f7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmaddsub231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmaddsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4874" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4874" bodyend="4874"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae32d0dee01db306a63198efe22ffef5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4876" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4876" bodyend="4876"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93f24da509a6aff063396b9ce26ee4a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4877" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4877" bodyend="4877"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1984e3e0a74dc09b125d5701750f9acc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4878" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4878" bodyend="4878"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5ff5658b793e1d4830499bf8bb83e53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4879" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4879" bodyend="4879"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9182270dd50eeb555011e544dc209b5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4881" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4881" bodyend="4881"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad26dbf022d9c9f66e0e322fcdbb9f232" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4882" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4882" bodyend="4882"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a470169d1184f8b32be294d2261d60706" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4883" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4883" bodyend="4883"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85dc84e7309f67356baed3d135a57524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4884" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4884" bodyend="4884"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac408074aa7663c955b47fc0aee78f088" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4886" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4886" bodyend="4886"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc4763da5ddecb1acf46968545acd9c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4887" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4887" bodyend="4887"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8a32421084f279c6b533c7797400992" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4889" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4889" bodyend="4889"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a259111a644d467acd516c974bb79f490" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4890" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4890" bodyend="4890"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae50e8d1ef9656f630f0e482e4791333f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4892" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4892" bodyend="4892"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa5d9e7582d49956fdf977850d4bd441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4893" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4893" bodyend="4893"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab047f3def52103c1794d55dcedb643b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4894" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4894" bodyend="4894"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4a91ebc95b4965155aeb0108c353e52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4895" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4895" bodyend="4895"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a14c364079444ce27bc4ec3c6d8cd5338" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4897" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4897" bodyend="4897"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e27ff8af5aa7bba63507abf395f5012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4898" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4898" bodyend="4898"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae616f25dd83c62420a117f7dc79c451b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4899" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4899" bodyend="4899"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af3cca5eedb5218f83d58681ab8b7e5e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4900" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4900" bodyend="4900"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcfb1c249b61abe932c35d695ea35fbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4902" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4902" bodyend="4902"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d8af6546c69764c2bf7420c28a616ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4903" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4903" bodyend="4903"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a089adedaddcb79461a91dd601dae23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4905" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4905" bodyend="4905"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a182904d77374f09c140f8f28da9f67e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4906" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4906" bodyend="4906"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a121edd0df40351427e64dd3a1dc5f24f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4908" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4908" bodyend="4908"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed00b671f8c293e777702f25d678d813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4909" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4909" bodyend="4909"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a070c6f074a470c9311d4ff1c53e23ca5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4910" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4910" bodyend="4910"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b74df15b677bfa4223c937b1b0edcf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4911" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4911" bodyend="4911"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02ce88babc25e949886ffc74b0796f9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4913" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4913" bodyend="4913"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab19c1a7e0eaf133b0db891b82daa21c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4914" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4914" bodyend="4914"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a32d31f7ce291ca27d37868ccdcd67a87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4915" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4915" bodyend="4915"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4da00aa20452a362802561a5b42fa2ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4916" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4916" bodyend="4916"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a736b350b5c65637e05de05c44509eb17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4918" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4918" bodyend="4918"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31788bbc11b55086b17b58bf12d5e865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4919" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4919" bodyend="4919"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a421ca084043b2a9bb7f89af529800f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsub231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4921" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4921" bodyend="4921"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f284b56bd7e41eb3105531c4ef0f882" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsub231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsub231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4922" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4922" bodyend="4922"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdad9d0a397598662b030a66078db41e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4924" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4924" bodyend="4924"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8e8e39786002e597921b0981fc3c564" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsubadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4925" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4925" bodyend="4925"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d7b865b30c34c41bcabc91ac0d245fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4926" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4926" bodyend="4926"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a815af3fd09c3a964fb17df42c6f6c327" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsubadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4927" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4927" bodyend="4927"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a237cfeb65e97c477fae46f697f1711a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4929" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4929" bodyend="4929"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae62cfac4c914917f853e662f9ffe7cdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsubadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4930" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4930" bodyend="4930"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b450a48166602b80e7559bd77dab001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4931" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4931" bodyend="4931"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f7b4165bdc7bea7200f16fdfaca1b10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsubadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4932" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4932" bodyend="4932"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a276bd599e6698d0188d7f44f054fc707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4934" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4934" bodyend="4934"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab37448c073702b5a78a9cfb3d7aaf458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsubadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4935" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4935" bodyend="4935"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a944afd46b5943de0d44c36f5936d4f4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4936" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4936" bodyend="4936"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2da1a1e2af3578504f493ca6ac738cb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsubadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4937" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4937" bodyend="4937"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07cabdd063afef9163b51bb35d7c1b5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4939" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4939" bodyend="4939"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6d975c0bb848d555cad05075a6c6cc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsubadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4940" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4940" bodyend="4940"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67b056653785d7ba097d4c640b3fc97a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4941" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4941" bodyend="4941"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ec4399dde71098bdff33e876b8fdb5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsubadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4942" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4942" bodyend="4942"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2cc45f52f2107c10cd63380bb5beda5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4944" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4944" bodyend="4944"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85041660db73e46a92dc1dd91c9877e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsubadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4945" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4945" bodyend="4945"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a226fc37a54da98347e80e2deb8c5990a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4946" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4946" bodyend="4946"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd2df2948d483fdda1e630633711ecfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsubadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4947" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4947" bodyend="4947"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c0efc615eeddc715260e037a5baffd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4949" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4949" bodyend="4949"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8a41042578bbed72755cc3002185889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfmsubadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4950" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4950" bodyend="4950"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04ac15e94452a4006b213434e0f02aed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfmsubadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4951" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4951" bodyend="4951"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74518b0db71c81e5567bf7d2e47c3596" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfmsubadd231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfmsubadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4952" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4952" bodyend="4952"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a563796b3bf72e8d926c3d84d0fdd2e3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4954" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4954" bodyend="4954"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a083ab2a05a045b7a4bbe56e14364fe7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4955" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4955" bodyend="4955"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2f40753ab18b2cd58b9293dca7ccf76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4956" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4956" bodyend="4956"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ef7ba1f222b614d70d3b671b96424f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmadd132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4957" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4957" bodyend="4957"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae71b1adbcd49e019c81b5a2a17ae03ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4959" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4959" bodyend="4959"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a367653e15e300d277f5f6e901fe93b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4960" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4960" bodyend="4960"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a192881423940a09fcc03fd81ca1b48a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4961" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4961" bodyend="4961"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabec5daa32110cb2f01f12d68af7ebaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmadd132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4962" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4962" bodyend="4962"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0780268ad20766d0748fc76f88cb5aef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4964" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4964" bodyend="4964"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a509800606ba0165877f9d861bee14bc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4965" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4965" bodyend="4965"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4abb9759bff6ccd56081552091ae30fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4967" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4967" bodyend="4967"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80160f29e434c656fda74290972da485" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4968" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4968" bodyend="4968"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb3c621b3f86515c6338f4e9cf847899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4970" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4970" bodyend="4970"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af83357da52ffb0451e7de390b0a07328" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4971" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4971" bodyend="4971"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa95bc5b73d5e1990c90473bd9ace0dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4972" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4972" bodyend="4972"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa628af81060ebafc127f85d264c7dcd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmadd213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4973" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4973" bodyend="4973"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7800430d9d544de16bf5054a964a053b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4975" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4975" bodyend="4975"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38e1d593efa5b109b5c955438691ef54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4976" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4976" bodyend="4976"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10f40f8e9efaf4c795eeecd5bc5968ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4977" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4977" bodyend="4977"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa51d37a9ec0a09fb654322fe97d22d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmadd213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4978" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4978" bodyend="4978"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0298519cf0469d38e49ae111eafaa1d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4980" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4980" bodyend="4980"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6fee21a704fba06544773cc96aac96aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4981" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4981" bodyend="4981"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a925b45aa3492127e20fe4874cd01a257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4983" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4983" bodyend="4983"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8a40b651aa7b1a01963dec80c6ec064" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4984" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4984" bodyend="4984"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0448abc432074d5f500d79f87b1d53b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4986" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4986" bodyend="4986"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7c6fee0e719b756c517ef3bec12affe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4987" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4987" bodyend="4987"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01e9cd0d5af3a682f0297b48a323fd3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4988" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4988" bodyend="4988"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a02851b7f39785b902fc0d66085c174" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmadd231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4989" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4989" bodyend="4989"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7138f1b6ff25cf454d41a9d7d4b4c3ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4991" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4991" bodyend="4991"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa649ef67f10f18024d0a43d788d459ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4992" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4992" bodyend="4992"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8ceed3d54e8686b33201478909a1983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4993" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4993" bodyend="4993"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0638fe3b9d59517587f7d4c338ee9358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmadd231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4994" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4994" bodyend="4994"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06a893e6dc732f611b41dbea76d6f896" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4996" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4996" bodyend="4996"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad72e2bed921c24141c70494cc05c6e6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4997" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4997" bodyend="4997"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a322a8176b7a35bad8e4825644e1657a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmadd231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="4999" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="4999" bodyend="4999"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1189ff81e8a73dcf0576973da6b29c34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmadd231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmadd231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5000" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5000" bodyend="5000"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40c2f84c66b474f3ed976215bfc039c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5002" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5002" bodyend="5002"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ebeb3d3a5a49ea43b79efc35d304645" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5003" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5003" bodyend="5003"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf42dd9d8279828292afd5a13978daac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5004" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5004" bodyend="5004"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4120d30dd0ad4754ea22c8f883c28c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmsub132pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5005" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5005" bodyend="5005"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab118ce9fd207b67c0c4dc1bbe20b9e44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5007" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5007" bodyend="5007"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a391caff9128c45ecdc70619efabc72ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5008" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5008" bodyend="5008"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc297febc121b78045460cc42f05ffb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5009" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5009" bodyend="5009"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac721211c1597b706e4864c5c2739c368" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmsub132ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5010" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5010" bodyend="5010"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa24b6c9b4d267d27f22659b6d24bb432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5012" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5012" bodyend="5012"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12399d9760197c7a3bf923fed17f5755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub132sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5013" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5013" bodyend="5013"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25ae77304be46459e037c63a7e0027f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5015" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5015" bodyend="5015"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1dab219c929cb0d7928bd6e0a352bd6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub132ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub132ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5016" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5016" bodyend="5016"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12d416096ebcf6521b1d8c5a3314ca4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5018" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5018" bodyend="5018"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25e5e3d5bcd15366f47fa94573edf035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5019" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5019" bodyend="5019"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac983364209da576fd3339561d1ddcd92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5020" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5020" bodyend="5020"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad806026ef2b9f6e3ddbfb6c5317c4be4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmsub213pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5021" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5021" bodyend="5021"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c0b76512be1c92550f6e267c62d019b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5023" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5023" bodyend="5023"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5be7d87c38ada7b213b3a5d8e0eb063e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5024" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5024" bodyend="5024"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec1b5d2e5cbdf366119d081e06de9dd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5025" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5025" bodyend="5025"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5caf2611045e722fa4368c6cc15c3b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmsub213ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5026" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5026" bodyend="5026"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9078c923bb3649ad5d6d9e60943c958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5028" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5028" bodyend="5028"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad26aa6a3189e1864681605dcf9c50751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub213sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5029" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5029" bodyend="5029"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96e996faceffdabc2a87f0803b8ea90a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5031" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5031" bodyend="5031"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03e862c949fded50dd201d03657f6e2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub213ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub213ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5032" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5032" bodyend="5032"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae56dda2aa140acbe0983369974d71beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5034" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5034" bodyend="5034"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d3fd3d542f23337945f2aa68e65df35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231pd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5035" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5035" bodyend="5035"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e9f6a2531f61f797aabdc57e840fde0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5036" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5036" bodyend="5036"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fc844c8352625915043531429390b18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231pd</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmsub231pd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5037" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5037" bodyend="5037"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2816cd9e2219cdb989af5f55f8ef527b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5039" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5039" bodyend="5039"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d9a05145ca510129ee87ea704b8a08f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5040" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5040" bodyend="5040"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade62989ed7ce93ca3cb961a127dd98a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5041" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5041" bodyend="5041"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad75fe7bf418581ae31dc1cf74cc67884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231ps</definition>
        <argsstring>(const YmmReg &amp;o0, const YmmReg &amp;o1, const YmmReg &amp;o2)</argsstring>
        <name>vfnmsub231ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5042" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5042" bodyend="5042"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af80b31fa34f56cc121a2bd0ea519cfb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5044" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5044" bodyend="5044"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1db8f4c927482781d2dca51b50e5c0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231sd</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub231sd</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5045" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5045" bodyend="5045"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1677135ec7d8e7e0b216f7afdb0b0fce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>vfnmsub231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5047" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5047" bodyend="5047"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68ba1b85b96c84e66fdfc2944e216169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vfnmsub231ss</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const XmmReg &amp;o2)</argsstring>
        <name>vfnmsub231ss</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5048" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5048" bodyend="5048"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1edacda608eb2a3678296973b170b41f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andn</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>andn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5054" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5054" bodyend="5054"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a005cb433f5218643d2d193dbfaefe169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::andn</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>andn</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5055" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5055" bodyend="5055"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac89838ab720436a8640c2f8a914335e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bextr</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>bextr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5057" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5057" bodyend="5057"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a043a8cb3dc531e29be348f86ec031fcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bextr</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>bextr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5058" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5058" bodyend="5058"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acea64980da58e45395f2c7ab18e036ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blsi</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>blsi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5060" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5060" bodyend="5060"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abad74c40ad25bda40e11075e9e13e3bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blsi</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>blsi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5061" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5061" bodyend="5061"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ded41c50787e4e1ba1b30074755bcef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blsmsk</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>blsmsk</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5063" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5063" bodyend="5063"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac87b2abac6c021358b08b7272f2bb7cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blsmsk</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>blsmsk</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5064" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5064" bodyend="5064"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93a48fa8d7875cc51b6a2aa6320f8eec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blsr</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>blsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5066" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5066" bodyend="5066"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf8dac9d14833f963d8c22e806e057d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::blsr</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>blsr</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5067" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5067" bodyend="5067"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a4fadd61fed061d3b9e0f13bacfe448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::tzcnt</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>tzcnt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5069" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5069" bodyend="5069"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a125a139dda048635e5968180888d5932" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::tzcnt</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>tzcnt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5070" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5070" bodyend="5070"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77ff1536986e5bbda1411635babf9133" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::lzcnt</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1)</argsstring>
        <name>lzcnt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5076" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5076" bodyend="5076"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a290dfb1d39ee74558670cadadd5db772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::lzcnt</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>lzcnt</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5077" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5077" bodyend="5077"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc8b77f0dd177174309cdf6b9eeae956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bzhi</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>bzhi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5083" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5083" bodyend="5083"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05804212c63e7672e2e2c1076bee3194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::bzhi</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>bzhi</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5084" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5084" bodyend="5084"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1247e080bfb93ce169c728337cf7b3ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>mulx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5086" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5086" bodyend="5086"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af480db20086515888ae7f4d69c507248" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::mulx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>mulx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5087" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5087" bodyend="5087"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a180405c7c02ebfa774c5450393518517" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pdep</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>pdep</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5089" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5089" bodyend="5089"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90d2ec0949f80c2358500eb6fd8b46fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pdep</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>pdep</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5090" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5090" bodyend="5090"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6a392a8dff834f11adbbf30dc8b4779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pext</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>pext</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5092" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5092" bodyend="5092"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1add5d0426e1554cd8db220daa9d4abe9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::pext</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Mem &amp;o2)</argsstring>
        <name>pext</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5093" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5093" bodyend="5093"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab965f2beea33de472ff0e4822ffae2b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rorx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>rorx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5095" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5095" bodyend="5095"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6b78312f4d974bf527ffde7978ed046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rorx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, int o2)</argsstring>
        <name>rorx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5095" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5095" bodyend="5095"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36feb1153a81705b17c7654e6a22943f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rorx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const Imm &amp;o2)</argsstring>
        <name>rorx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5096" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5096" bodyend="5096"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac7d467f62b211bd6738f5382ca2b2855" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rorx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, int o2)</argsstring>
        <name>rorx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5096" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5096" bodyend="5096"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac458a6a8d8ec453d4ec61c779fbf8e7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sarx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>sarx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5098" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5098" bodyend="5098"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18a032352917d6c774b268a8d2da4a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::sarx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>sarx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5099" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5099" bodyend="5099"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1af68ed77e0722f5f92cd3d87664b18b87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shlx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shlx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5101" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5101" bodyend="5101"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc3888ce0e70072cccb2a54dbe7a8160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shlx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shlx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5102" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5102" bodyend="5102"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93b6fb0ec370c682e27809781725ffb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrx</definition>
        <argsstring>(const GpReg &amp;o0, const GpReg &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shrx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5104" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5104" bodyend="5104"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4157bf211b20a3dca7bcc05c116ae660" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::shrx</definition>
        <argsstring>(const GpReg &amp;o0, const Mem &amp;o1, const GpReg &amp;o2)</argsstring>
        <name>shrx</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5105" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5105" bodyend="5105"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa41be5787af1f8c8a5b1be00e1e2b30b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::rdrand</definition>
        <argsstring>(const GpReg &amp;o0)</argsstring>
        <name>rdrand</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5111" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5111" bodyend="5111"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5f87dffc9ceb8a89e11236b3b8905fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtph2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtph2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5117" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5117" bodyend="5117"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8a4d71cd4920fef11bce8594495a976" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtph2ps</definition>
        <argsstring>(const XmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtph2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5118" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5118" bodyend="5118"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33eb3766a444c1c37120c1d66784edee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtph2ps</definition>
        <argsstring>(const YmmReg &amp;o0, const XmmReg &amp;o1)</argsstring>
        <name>vcvtph2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5119" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5119" bodyend="5119"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a550f6da984bdcfeed414d581e2f41251" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtph2ps</definition>
        <argsstring>(const YmmReg &amp;o0, const Mem &amp;o1)</argsstring>
        <name>vcvtph2ps</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5120" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5120" bodyend="5120"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a246f10e22c638a9f515ffa08cf195ecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5122" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5122" bodyend="5122"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab28bb4559fc784f2ca853458bc69a815" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const XmmReg &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5122" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5122" bodyend="5122"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c73d4f5795d5ed78455fae47e7dc71d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5123" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5123" bodyend="5123"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a57761077e6a0535b016d611cc9ab32f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const Mem &amp;o0, const XmmReg &amp;o1, int o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5123" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5123" bodyend="5123"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa4468d3c6cb89ff748079a44711f07c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5124" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5124" bodyend="5124"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ef17aaba862b7af12b421ef23a928b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const XmmReg &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1XmmReg" kindref="compound">XmmReg</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5124" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5124" bodyend="5124"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27f5ae9bff35404188b1a4e4bdafc2ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, const Imm &amp;o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1Imm" kindref="compound">Imm</ref> &amp;</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5125" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5125" bodyend="5125"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7b735e4e56514ecb9a45e4c1c7e595e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Error</type>
        <definition>Error asmjit::x86x64::X86X64Assembler::vcvtps2ph</definition>
        <argsstring>(const Mem &amp;o0, const YmmReg &amp;o1, int o2)</argsstring>
        <name>vcvtps2ph</name>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1Mem" kindref="compound">Mem</ref> &amp;</type>
          <declname>o0</declname>
        </param>
        <param>
          <type>const <ref refid="structasmjit_1_1x86x64_1_1YmmReg" kindref="compound">YmmReg</ref> &amp;</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="5125" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="5125" bodyend="5125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>X86/X64 assembler. </para>    </briefdescription>
    <detaileddescription>
<para>Assembler is the main class in AsmJit that can encode instructions and their operands to a binary stream runnable by CPU. It creates internal buffer where the encodes instructions are stored and it contains intrinsics that can be used to emit the code in a convenent way. Code generation is in general safe, because the intrinsics uses method overloading so even the code is emitted it can be checked by a C++ compiler. It&apos;s nearly impossible to create invalid instruction (for example <computeroutput>mov [eax], [eax]</computeroutput>, because such overload doesn&apos;t exist.</para><para>Each call to an assembler intrinsic function emits instruction directly to the binary stream. There are also runtime checks that prevent invalid code to be emitted. It will assert in debug mode and put the Assembler instance to an error state in production mode.</para><sect1 id="structasmjit_1_1x86x64_1_1X86X64Assembler_1AsmJit_Assembler_CodeGeneration">
<title>Code Generation</title>
<para>To generate code is only needed to create instance of <computeroutput>asmjit::Assembler</computeroutput> and to use intrinsics. See example how to do that:</para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>asmjit<sp/>namespace.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asmjit;</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asmjit::host;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Assembler<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>Assembler<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Prolog.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.push(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>,<sp/><ref refid="group__asmjit__x86x64_1gafee3a114f6450196ac970f3cc964b19b" kindref="member" tooltip="Gpd register.">esp</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Mov<sp/>1024<sp/>to<sp/>EAX,<sp/>EAX<sp/>is<sp/>also<sp/>return<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/>1024);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Epilog.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gafee3a114f6450196ac970f3cc964b19b" kindref="member" tooltip="Gpd register.">esp</ref>,<sp/><ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.pop(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Return.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.ret();</highlight></codeline>
</programlisting></para><para>You can see that syntax is very close to Intel one. Only difference is that you are calling functions that emits the binary code for you. All registers are in <computeroutput>asmjit</computeroutput> namespace, so it&apos;s very comfortable to use it (look at first line). There is also used method <computeroutput><ref refid="group__asmjit__base_1ga65a8413c6d6ca49e69246bb684ac60eb" kindref="member">asmjit::imm()</ref></computeroutput> to create an immediate value. Use <computeroutput><ref refid="group__asmjit__base_1ga4594b4672222fbd0152080800fe73779" kindref="member">asmjit::imm_u()</ref></computeroutput> to create unsigned immediate value.</para><para>There is also possibility to use memory addresses and immediates. To build memory address use <computeroutput><ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member">ptr()</ref></computeroutput>, <computeroutput><ref refid="group__asmjit__x86x64_1ga63ec6f038e14f638db2711d0ba762e29" kindref="member">byte_ptr()</ref></computeroutput>, <computeroutput><ref refid="group__asmjit__x86x64_1ga8072a973c0787fa1661d03d14dd44200" kindref="member">word_ptr()</ref></computeroutput>, <computeroutput><ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member">dword_ptr()</ref></computeroutput> or other friend methods. In most cases you needs only <computeroutput><ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member">ptr()</ref></computeroutput> method, but there are instructions where you must specify address size,</para><para>for example (a is <computeroutput>asmjit::Assembler</computeroutput> instance):</para><para><programlisting><codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>),<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>),<sp/><ref refid="group__asmjit__x86x64_1gacc5e7948fbb4596d3e8407a858cb1817" kindref="member" tooltip="Gpd register.">edx</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax],<sp/>edx</highlight></codeline>
</programlisting></para><para>But it&apos;s also possible to create complex addresses:</para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>eax<sp/>+<sp/>ecx*x<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>0),<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>1),<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/>*<sp/>2],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>2),<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/>*<sp/>4],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>3),<sp/>0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/>*<sp/>8],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>eax<sp/>+<sp/>ecx*x<sp/>+<sp/>disp<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>0,<sp/><sp/>4),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>4],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>1,<sp/><sp/>8),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/>*<sp/>2<sp/>+<sp/><sp/>8],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>2,<sp/>12),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/>*<sp/>4<sp/>+<sp/>12],<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>3,<sp/>16),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>mov<sp/>ptr<sp/>[eax<sp/>+<sp/>ecx<sp/>*<sp/>8<sp/>+<sp/>16],<sp/>0</highlight></codeline>
</programlisting></para><para>All addresses shown are using <computeroutput><ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member">asmjit::ptr()</ref></computeroutput> to make memory operand. Some assembler instructions (single operand ones) needs to have specified memory operand size. For example <computeroutput>a.inc(ptr(eax))</computeroutput> can&apos;t be called. <computeroutput>asmjit::Assembler::inc()</computeroutput>, <computeroutput>asmjit::Assembler::dec()</computeroutput> and similar instructions can&apos;t be encoded without specifying the operand size. See next code how the assembler works:</para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>[byte]<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.inc(<ref refid="group__asmjit__x86x64_1ga63ec6f038e14f638db2711d0ba762e29" kindref="member" tooltip="Create a byte pointer operand.">byte_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inc<sp/>byte<sp/>ptr<sp/>[eax]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.dec(<ref refid="group__asmjit__x86x64_1ga63ec6f038e14f638db2711d0ba762e29" kindref="member" tooltip="Create a byte pointer operand.">byte_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dec<sp/>byte<sp/>ptr<sp/>[eax]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>[word]<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.inc(<ref refid="group__asmjit__x86x64_1ga8072a973c0787fa1661d03d14dd44200" kindref="member" tooltip="Create a word pointer operand.">word_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inc<sp/>word<sp/>ptr<sp/>[eax]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.dec(<ref refid="group__asmjit__x86x64_1ga8072a973c0787fa1661d03d14dd44200" kindref="member" tooltip="Create a word pointer operand.">word_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dec<sp/>word<sp/>ptr<sp/>[eax]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>[dword]<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.inc(<ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inc<sp/>dword<sp/>ptr<sp/>[eax]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.dec(<ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dec<sp/>dword<sp/>ptr<sp/>[eax]</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="structasmjit_1_1x86x64_1_1X86X64Assembler_1AsmJit_Assembler_CallingJitCode">
<title>Calling JIT Code</title>
<para>While you are over from emitting instructions, you can make your function using <computeroutput>asmjit::Assembler::make()</computeroutput> method. This method will use memory manager to allocate virtual memory and relocates generated code to it. For memory allocation is used global memory manager by default and memory is freeable, but of course this default behavior can be overridden specifying your memory manager and allocation type. If you want to do with code something else you can always override <ref refid="structasmjit_1_1BaseAssembler_1ace12d41f06c429a957dc4bd4dd14df3e" kindref="member">make()</ref> method and do what you want.</para><para>You can get size of generated code by <computeroutput><ref refid="structasmjit_1_1BaseAssembler_1acea24f6a20a4abb52af3d0cdfb2b3d9d" kindref="member">getCodeSize()</ref></computeroutput> or <computeroutput><ref refid="structasmjit_1_1BaseAssembler_1a3f019fb35781fb3f45b791387828ada3" kindref="member">getOffset()</ref></computeroutput> methods. These methods returns you code size (or more precisely current code offset) in bytes. Use takeCode() to take internal buffer (all pointers in <computeroutput>asmjit::Assembler</computeroutput> instance will be zeroed and current buffer returned) to use it. If you don&apos;t take it, <computeroutput>asmjit::Assembler</computeroutput> destructor will free it automatically. To alloc and run code manually don&apos;t use <computeroutput>malloc()&apos;ed</computeroutput> memory, but instead use <computeroutput><ref refid="structasmjit_1_1VMem_1aaf08965d4c0b29f1f79061273bda7f8b" kindref="member">asmjit::VMem::alloc()</ref></computeroutput> to get memory for executing (specify <computeroutput>canExecute</computeroutput> to <computeroutput>true</computeroutput>) or <computeroutput><ref refid="structasmjit_1_1MemoryManager" kindref="compound">asmjit::MemoryManager</ref></computeroutput> that provides more effective and comfortable way to allocate virtual memory.</para><para>See next example how to allocate memory where you can execute code created by <computeroutput>asmjit::Assembler:</computeroutput> </para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asmjit;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>JitRuntime<sp/>runtime;</highlight></codeline>
<codeline><highlight class="normal"><sp/>Assembler<sp/>a(&amp;runtime);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>...<sp/>Your<sp/>code<sp/>generation<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>prototype</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*MyFunc)();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>make<sp/>your<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>MyFunc<sp/>func<sp/>=<sp/>asmjit_cast&lt;MyFunc&gt;(a.make());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>call<sp/>your<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>func();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>don&apos;t<sp/>need<sp/>your<sp/>function<sp/>again,<sp/>free<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>runtime.free(func);</highlight></codeline>
</programlisting></para><para><computeroutput>note</computeroutput> This was very primitive example how to call generated code. In production code you will never do alloc/free for one run, you will probably store the allocated function and free it when the application ends or when JIT objects does cleanup.</para></sect1>
<sect1 id="structasmjit_1_1x86x64_1_1X86X64Assembler_1AsmJit_Assembler_Labels">
<title>Labels</title>
<para>While generating assembler code, you will usually need to create complex code with labels. Labels are fully supported and you can call <computeroutput>jmp</computeroutput> or <computeroutput>je</computeroutput> (and similar) instructions to initialized or yet uninitialized label. Each label expects to be bound into offset. To bind label to specific offset, use <computeroutput><ref refid="structasmjit_1_1BaseAssembler_1aa84ba41d616921d8ca7f3087023afce1" kindref="member">bind()</ref></computeroutput> method.</para><para>See next example that contains complete code that creates simple memory copy function (in DWord entities).</para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>Usage<sp/>of<sp/>Label<sp/>(32-bit<sp/>code).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>simple<sp/>DWord<sp/>memory<sp/>copy<sp/>function:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>ASMJIT_STDCALL<sp/>void<sp/>copy32(uint32_t*<sp/>dst,<sp/>const<sp/>uint32_t*<sp/>src,<sp/>size_t<sp/>count);</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asmjit;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Assembler<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>JitRuntime<sp/>runtime;</highlight></codeline>
<codeline><highlight class="normal"><sp/>Assembler<sp/>a(&amp;runtime);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_offset<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Arguments<sp/>offset<sp/>(STDCALL<sp/>EBP).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_size<sp/>=<sp/>12;<sp/><sp/></highlight><highlight class="comment">//<sp/>Arguments<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><ref refid="structasmjit_1_1Label" kindref="compound" tooltip="Label (jump target or data location).">Label</ref><sp/>L_Loop(a);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Prolog.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.push(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>,<sp/><ref refid="group__asmjit__x86x64_1gafee3a114f6450196ac970f3cc964b19b" kindref="member" tooltip="Gpd register.">esp</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.push(<ref refid="group__asmjit__x86x64_1ga1ad3750870b7e8657e9ad5be6b820a17" kindref="member" tooltip="Gpd register.">esi</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.push(<ref refid="group__asmjit__x86x64_1ga64bf639da31c64be79d6ab1f67b933af" kindref="member" tooltip="Gpd register.">edi</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1ga1ad3750870b7e8657e9ad5be6b820a17" kindref="member" tooltip="Gpd register.">esi</ref>,<sp/><ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>,<sp/>arg_offset<sp/>+<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>dst.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1ga64bf639da31c64be79d6ab1f67b933af" kindref="member" tooltip="Gpd register.">edi</ref>,<sp/><ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>,<sp/>arg_offset<sp/>+<sp/>4));<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>src.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/><ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>,<sp/>arg_offset<sp/>+<sp/>8));<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>L_Loop<sp/>label<sp/>to<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.bind(L_Loop);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>Copy<sp/>4<sp/>bytes.</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/><ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga1ad3750870b7e8657e9ad5be6b820a17" kindref="member" tooltip="Gpd register.">esi</ref>));</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(<ref refid="group__asmjit__x86x64_1ga64bf639da31c64be79d6ab1f67b933af" kindref="member" tooltip="Gpd register.">edi</ref>),<sp/><ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.add(<ref refid="group__asmjit__x86x64_1ga1ad3750870b7e8657e9ad5be6b820a17" kindref="member" tooltip="Gpd register.">esi</ref>,<sp/>4);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.add(<ref refid="group__asmjit__x86x64_1ga64bf639da31c64be79d6ab1f67b933af" kindref="member" tooltip="Gpd register.">edi</ref>,<sp/>4);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Repeat<sp/>loop<sp/>until<sp/>(--ecx<sp/>!=<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.dec(<ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.jz(L_Loop);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Epilog.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.pop(<ref refid="group__asmjit__x86x64_1ga64bf639da31c64be79d6ab1f67b933af" kindref="member" tooltip="Gpd register.">edi</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.pop(<ref refid="group__asmjit__x86x64_1ga1ad3750870b7e8657e9ad5be6b820a17" kindref="member" tooltip="Gpd register.">esi</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gafee3a114f6450196ac970f3cc964b19b" kindref="member" tooltip="Gpd register.">esp</ref>,<sp/><ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>a.pop(<ref refid="group__asmjit__x86x64_1ga55deb3ba95a959b5461bd4525501e92e" kindref="member" tooltip="Gpd register.">ebp</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Return:<sp/>STDCALL<sp/>convention<sp/>is<sp/>to<sp/>pop<sp/>stack<sp/>in<sp/>called<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.ret(arg_size);</highlight></codeline>
</programlisting></para><para>If you need more abstraction for generating assembler code and you want to hide calling conventions between 32-bit and 64-bit operating systems, look at <computeroutput>Compiler</computeroutput> class that is designed for higher level code generation.</para></sect1>
<sect1 id="structasmjit_1_1x86x64_1_1X86X64Assembler_1AsmJit_Assembler_AdvancedCodeGeneration">
<title>Advanced Code Generation</title>
<para>This section describes some advanced generation features of <computeroutput>Assembler</computeroutput> class which can be simply overlooked. The first thing that is very likely needed is generic register support. In previous example the named registers were used. AsmJit contains functions which can convert register index into operand and back.</para><para>Let&apos;s define function which can be used to generate some abstract code:</para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>function<sp/>that<sp/>generates<sp/>dword<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>genCopyDWord(BaseAssembler&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpReg&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpReg&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpReg&amp;<sp/>tmp)</highlight></codeline>
<codeline><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>a.mov(tmp,<sp/><ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(src));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>a.mov(<ref refid="group__asmjit__x86x64_1gacb3da80de191d540f364469338809f30" kindref="member" tooltip="Create a dword pointer operand.">dword_ptr</ref>(dst),<sp/>tmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/>}</highlight></codeline>
</programlisting></para><para>This function can be called like <computeroutput>genCopyDWord(a, edi, esi, ebx)</computeroutput> or by using existing <ref refid="structasmjit_1_1x86x64_1_1GpReg" kindref="compound">GpReg</ref> instances. This abstraction allows to join more code sections together without rewriting each to use specific registers. You need to take care only about implicit registers which may be used by several instructions (like mul, imul, div, idiv, shifting, etc...).</para><para>Next, more advanced, but often needed technique is that you can build your own registers allocator. X86 architecture contains 8 general purpose registers, 8 Mm registers and 8 Xmm registers. The X64 (AMD64) architecture extends count of Gp registers and Xmm registers to 16. Use the <computeroutput>kRegCountBase</computeroutput> constant to get count of Gp or Xmm registers or <computeroutput>kRegCountGp</computeroutput>, <computeroutput>kRegCountMm</computeroutput> and <computeroutput>kRegCountXmm</computeroutput> constants individually.</para><para>To build register from index (value from 0 inclusive to kRegNumXXX exclusive) use <ref refid="group__asmjit__x86x64_1ga7edc123ef6a6bc00b64fe45d9a295c1c" kindref="member">gpd()</ref>, gpq() or gpz() functions. To create a 8 or 16-bit register use <ref refid="group__asmjit__x86x64_1ga84d074ec698bde54e1b258a5afe0ab21" kindref="member">gpw()</ref>, <ref refid="group__asmjit__x86x64_1ga89be8bc827d7615648e7074c9b0a11b3" kindref="member">gpb_lo()</ref> or <ref refid="group__asmjit__x86x64_1ga0005f63fd37e6867078d64f361c6c49d" kindref="member">gpb_hi()</ref>. To create other registers there are similar methods like <ref refid="group__asmjit__x86x64_1ga9a8333264f20709b9757ea2fe6d98062" kindref="member">mm()</ref>, <ref refid="group__asmjit__x86x64_1ga5ad41041b11d6664c9dedcdf67bd431a" kindref="member">xmm()</ref> and <ref refid="group__asmjit__x86x64_1ga966625c8483c9f4de98c1697840ab166" kindref="member">fp()</ref>.</para><para>So our function call to genCopyDWord can be also used like this:</para><para><programlisting><codeline><highlight class="normal"><sp/>genCopyDWord(a,<sp/><ref refid="group__asmjit__x86x64_1ga7edc123ef6a6bc00b64fe45d9a295c1c" kindref="member" tooltip="Get Gpd register.">gpd</ref>(<ref refid="group__asmjit__x86x64_1gga8c39346e0695453a5cd38ead0d62931aa2128d2d1988f757b6de2583d0bda1fdb" kindref="member" tooltip="Index of DIL/DI/EDI/RDI registers.">kRegIndexDi</ref>),<sp/><ref refid="group__asmjit__x86x64_1ga7edc123ef6a6bc00b64fe45d9a295c1c" kindref="member" tooltip="Get Gpd register.">gpd</ref>(<ref refid="group__asmjit__x86x64_1gga8c39346e0695453a5cd38ead0d62931aa0d713e0bcf536538a2b3f097c81a9e7f" kindref="member" tooltip="Index of SIL/SI/ESI/RSI registers.">kRegIndexSi</ref>),<sp/><ref refid="group__asmjit__x86x64_1ga7edc123ef6a6bc00b64fe45d9a295c1c" kindref="member" tooltip="Get Gpd register.">gpd</ref>(<ref refid="group__asmjit__x86x64_1gga8c39346e0695453a5cd38ead0d62931aa64bdbf966add3a3fb3785d2b055abb3e" kindref="member" tooltip="Index of BL/BH/BX/EBX/RBX registers.">kRegIndexBx</ref>));</highlight></codeline>
</programlisting></para><para>kRegIndexXXX are constants defined by kRegIndex enum. You can use your own register allocator (or register slot manager) to alloc / free registers so kRegIndexXXX values can be replaced by your variables (0 to kRegNumXXX-1).</para><para><simplesect kind="see"><para>Compiler. </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="1236">
        <label>asmjit::CodeGen</label>
        <link refid="structasmjit_1_1CodeGen"/>
      </node>
      <node id="1234">
        <label>asmjit::x86x64::X86X64Assembler</label>
        <link refid="structasmjit_1_1x86x64_1_1X86X64Assembler"/>
        <childnode refid="1235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1235">
        <label>asmjit::BaseAssembler</label>
        <link refid="structasmjit_1_1BaseAssembler"/>
        <childnode refid="1236" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1240">
        <label>asmjit::BaseLogger</label>
        <link refid="structasmjit_1_1BaseLogger"/>
      </node>
      <node id="1241">
        <label>asmjit::Zone</label>
        <link refid="structasmjit_1_1Zone"/>
      </node>
      <node id="1242">
        <label>asmjit::BaseRuntime</label>
        <link refid="structasmjit_1_1BaseRuntime"/>
      </node>
      <node id="1239">
        <label>asmjit::CodeGen</label>
        <link refid="structasmjit_1_1CodeGen"/>
        <childnode refid="1240" relation="usage">
          <edgelabel>_logger</edgelabel>
        </childnode>
        <childnode refid="1241" relation="usage">
          <edgelabel>_zoneAllocator</edgelabel>
        </childnode>
        <childnode refid="1242" relation="usage">
          <edgelabel>_runtime</edgelabel>
        </childnode>
      </node>
      <node id="1237">
        <label>asmjit::x86x64::X86X64Assembler</label>
        <link refid="structasmjit_1_1x86x64_1_1X86X64Assembler"/>
        <childnode refid="1238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1243">
        <label>asmjit::PodVector&lt; LabelData &gt;</label>
        <link refid="structasmjit_1_1PodVector"/>
      </node>
      <node id="1245">
        <label>asmjit::LabelLink</label>
        <link refid="structasmjit_1_1LabelLink"/>
        <childnode refid="1245" relation="usage">
          <edgelabel>prev</edgelabel>
        </childnode>
      </node>
      <node id="1244">
        <label>asmjit::PodVector&lt; RelocData &gt;</label>
        <link refid="structasmjit_1_1PodVector"/>
      </node>
      <node id="1238">
        <label>asmjit::BaseAssembler</label>
        <link refid="structasmjit_1_1BaseAssembler"/>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
        <childnode refid="1243" relation="usage">
          <edgelabel>_labels</edgelabel>
        </childnode>
        <childnode refid="1244" relation="usage">
          <edgelabel>_relocData</edgelabel>
        </childnode>
        <childnode refid="1245" relation="usage">
          <edgelabel>_unusedLinks</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" line="506" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86assembler.h" bodystart="506" bodyend="5126"/>
    <listofallmembers>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad93ad4c447740fac276ff4d44dc7b17" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_align</name></member>
      <member refid="structasmjit_1_1CodeGen_1a26c78e4494d88ab9805496e023d3baa0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_arch</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03342dd0dfa785b87d02d150842ab240" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_bind</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a76e3f3c869dd14619eb27b5989b2bcf4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_buffer</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a7e1d16799822fbe74887cbe830046af5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_comment</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ad9d44d8890ff85a6d2a8a4703c4294c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_cursor</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1acfe8b34d536e58e0197bb9de6d0409f9" prot="public" virt="pure-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1afa99ede2f1e862ef77cbe5e8e34fafd4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_end</name></member>
      <member refid="structasmjit_1_1CodeGen_1a80674754a2e660567710113a61823594" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_error</name></member>
      <member refid="structasmjit_1_1CodeGen_1ae1a02cc46e87087c0c1b79c35849158f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_errorHandler</name></member>
      <member refid="structasmjit_1_1CodeGen_1a835716d06498d34b53a56a8565907d28" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_features</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a927cad7e8b3831394b39c870a4c04ad0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_grow</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a0d432a605983c347cf9c7aade8652918" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_labels</name></member>
      <member refid="structasmjit_1_1CodeGen_1aa548a9a7f87d7cbf4d34755c3cffa17b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_logger</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a7cadbee55a9420a3a0e46244a2aabc0d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_newLabel</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a8d3c75f208cdbf8e531cf42adb744ba8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_newLabelLink</name></member>
      <member refid="structasmjit_1_1CodeGen_1a4fb02f71d3669ae2345645490a4b1539" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_options</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a88b0276f3f05f55665f2d919bb1660bb" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_purge</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a0ef5f74f771ca1b86cf71f7b767cb095" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_registerIndexedLabels</name></member>
      <member refid="structasmjit_1_1CodeGen_1acbfa512e3ec91bff2364d868d2da3280" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_regSize</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aa05de560f2701e803832407978d63194" prot="public" virt="pure-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_relocCode</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1affeabe44cabed328b9dcc6a0096e97d5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_relocData</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a5c0f2e4a9e73a9738b8703ad5b0f67b1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_reserve</name></member>
      <member refid="structasmjit_1_1CodeGen_1a64fd203c2592221acd076eb8800acfea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_runtime</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1abf44fdf0fdc0436b8fc7aa2b5bbbff7a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_trampolineSize</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1acd0096db6e6bcef8bb582bbe716db1f3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_unusedLinks</name></member>
      <member refid="structasmjit_1_1CodeGen_1a48c754a0ff7c8b76c0b0f1c9c4652a29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>_zoneAllocator</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09bb8604db0966492eebbea6ff822bb4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9307732fa4890ce51ade771f665b08f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adace07476380737a357ef0bfb1c27de2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71ef7d405268fcd84462140f8dc5c159" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6cc436a518032741404c4fb06b46374" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a311bcdf872fffbe14ac20a0747747709" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5e9c95e1413c2c71c4eb0cea913535d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>adc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf17346a934ca1ceef39faf2e5ee0613" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a123e9debe131db86b590774e8bc7274e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c36fa922da5c95c9004c4f74b63516f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8bf1db6abbe8be983a431a7a1339a9eb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa36d85712c894d1c6c4a5366ccd3ad3f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a054a7c1ce066cc2fc4cb463adc824e67" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abff71b6452bad1f0288f913bda2e8ada" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>add</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35991ed4ef719bbc5ddbc5d2d7780ac1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ae9d6f39d02a59044038850518cde66" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d316afac7844bbcb594555a0b88053b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeaec81a9449cd551ac83bed49f4c7754" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58f385f72928e4000e338d502926c891" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4484086145cc1932d45d8aeef736d4b1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3d43d56b81154de0192af96d9d508ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1adb2a28e271a8e033fee66b669d9448" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af79fadba4388af8ab5262b0a6d596ac5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a930ad30139b5fa4a625b85c205be631f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0f0d24ecf0458d2ba5827e452b811a5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30925c17cf0fd04064adcff454bd4099" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>addsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0289a9566a7229ce4cf7ad8a09f2787" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesdec</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74e74f3f914969fcfe01c57271926514" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesdec</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71cdf864316de41fcc2ab74274dcd21c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesdeclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee601847c1c658ed9bfacb4f37e80911" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesdeclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c19d5c6b84495e1b32fa1ef827a5090" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesenc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac311ff7ca7e2fa64a0292cb4385532ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesenc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad53c07f087b7119de6eda91b575174b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesenclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5ca25dc97da1a704a86724580f73d5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesenclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac9f0c71ca41f98f31914bd5f40731dc4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesimc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a587f093ba4d0d1ec059c45470aaeedf7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aesimc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a714d9f1b39e6a3d52d324ebb800b4fc8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5a85a38e0b6b01a17472f6fd38c4b60" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7bb8684863db50c9c30510fab079e44" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8808fd9f6a6d20aaae726ac65029ad02" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>aeskeygenassist</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a7834000ab163eeb416824504c728655e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>align</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a585e196347ced0242f8fe82a70732a95" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac84d11297d20c98ac684820f34ef5556" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d90774d51cab52957d1804509c2554e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0889ca3355df6b46f83178e9a244dfe6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae78d25229629e648235d848376fbb760" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a784623b64c88ff2fe374d825187154da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a092af0d301a1de55b3214e4e0347ad06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>and_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1edacda608eb2a3678296973b170b41f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a005cb433f5218643d2d193dbfaefe169" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3156ce624211552efc5375565662239" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andnpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1addf8571c60dfc73732d1144bf3fa719a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andnpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b928d38b15155cde2c66b6fe92943a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andnps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acf197d37a7b3071b60b34758e3142785" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andnps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58a1ee9600ccf81ef9c5404f2412e6b7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3031ab0eeb708c342c2bf00d66d6c839" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82d28ee6c4b4a672614b8361961a43e6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0bea0289c4a3a9169d6c75307fa5e11f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>andps</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a17bd49b8739839e750bcafd840329471" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>BaseAssembler</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac89838ab720436a8640c2f8a914335e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bextr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a043a8cb3dc531e29be348f86ec031fcc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bextr</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aa84ba41d616921d8ca7f3087023afce1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bind</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa078fa4e03ad648be4e56223b4feae07" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3d6975fd67e70918b68bb0b889c2cb4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c8849b3ac70e99ac9d592957c185fd3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21c3a1965d7068dbbe868e09ce927900" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7864078be39ff19f71a3a5c1dae8bf67" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a205bcfdd18dd51907ebb4367145698c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad02614b24ebb17202d0ab2b0149308ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2644d15f2332987cbd233e270eb21e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a684786ae6fdae41735db543f0791bc94" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendvpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79d59cbc02b571114dc23fbdc4394656" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendvpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c8936aca362113587ae28323cdb7bea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendvps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafee6101429abb8e39cff586b62fdc5f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blendvps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acea64980da58e45395f2c7ab18e036ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blsi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abad74c40ad25bda40e11075e9e13e3bc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blsi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ded41c50787e4e1ba1b30074755bcef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blsmsk</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac87b2abac6c021358b08b7272f2bb7cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blsmsk</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93a48fa8d7875cc51b6a2aa6320f8eec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf8dac9d14833f963d8c22e806e057d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>blsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa35dcdd080d05c94d808f7c5eda8257c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bsf</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02bcff5e21fb10025abacc9892e4214f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bsf</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77afba1dc7861b0cd19abd4380dde9ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ae5ea82792ea4689341c96f715a1330" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129b39773ab0e6c4845623cd1f6edcf3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bswap</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80c2b6c30ae88ef782cdc9ac9d775ac4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a547a3eebce32cc1a984224d445aa20c4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43a79b466f144d075e8a227b67dd5f06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cbf4d867dd41dd3426395ed66e20e57" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a74087c8c60c53df4193287ea66c8e5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38c94e04f5bd1b1f2d89fc8153b23ea1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac648815ccd11ef9699b4f7d1c15534ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2e213b533713ae676d1966e47482966" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9fb86c5ca86998fde887bcb287cf998c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6de90e2e4b7b9669acd10cd06a156072" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6b2fb605c78486fa826bce649456ba4c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf9c7f4cafd560e1dca4f9307d091090" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c81b2592b719d30f13b220eb2331089" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2c03d765ec1a5cad8bada4a6d6e52b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4cf6392966852bb6dacd8d0551fb285b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a238aa7ba59db624f71965d756c982413" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38d9ff918a3710343f541f81c356a8d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52b1dcdc7ed87688fff06065d2280912" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>btr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e5eff364723db63dba7aafdedc1f990" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bts</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74980fc08024273cf9073a32c77505ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bts</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9dc3bb4672134ad6648ec3d946f452ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bts</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad365312413c3cdebd92d8674ac5c38a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bts</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6c58d271a99fd229590abb1994e0f0c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bts</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad4d9e6e250dea08e46df4194c7451cdb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bts</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc8b77f0dd177174309cdf6b9eeae956" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bzhi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05804212c63e7672e2e2c1076bee3194" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>bzhi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55e12c1fd997bee8416f92d7f047434f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>call</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d5b9717e9e2de4e9d5b3c93c8063abe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>call</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36c326b99f1e261ed6cd90d1fd5d4371" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>call</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa457456ddcfd231041031cb8fdce8f3a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>call</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9cd3b8d4b380346122e62750248bb276" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>call</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c410d4d7dc54525faa3e45fd6132b23" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40bb116dd5492e9b3346d26b8a1df867" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06f398d2713daa5a7eaa4c13e6938200" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>clc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a2fbf6d104e5792af3c660b19130d39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cld</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a9473ddc146797832aac3aa21e1948f8b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>clear</name></member>
      <member refid="structasmjit_1_1CodeGen_1a20674b359509b562f6079bfef6342692" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>clearError</name></member>
      <member refid="structasmjit_1_1CodeGen_1a0f1f14151bf464a31a3bb1a7f69e9bfe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>clearErrorHandler</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a763bee18f28f584b8d165820f3ebe16d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>clflush</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d485e7cbc50040f04b1a8084e7adbfb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abdaef7ae610657fa7b235386bc487d8c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace67993986709ce473147baf6bd2cfc8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a227a1d8054d4705a9e07ae4f37ef6d90" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmova</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42c1a2a3087e25dfce804ab5c9d2268d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmova</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7446429e197d0590cf1b857d085b433a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d75805ce6f7d2dd07b76238a1d8f138" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0aa02c16cda5b03549033923a75adf5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade235ed645421358f9a248d055dcf499" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2389b13fe558179e48cca6035c729f31" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac47a8c078fb30b5dd006dc8b18dac938" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7752b904e8a69e8a88e9e5898d51588a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada16c4c4411fba1ffa5831ce95452f2b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6cc1d3afc5647a5728564a97996c80d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmove</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d2aef1b52106b4b477af589b115f790" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmove</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc9b7a00129f4d63b3369d2708e9bbf6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77060db4639195a8809af5b0ab69ebaf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac941e73ae15ba06b4eeaaab55e5b777c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac33f8d73999cc171f113a422c57d7a53" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2eb2606589d200d8ff58e20291d996b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa38d40e295e63f45382949cde10c06b1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe5af6c3c3effbdbf3cde5ef3414035b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af71917fcc2a2c9bf08d3af4b73680145" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb3bde0bc84aba8aebc5d4f93ebb22db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovna</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a7ef2b590c640a46c8354850c09388c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovna</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae46aa263f103a421b63c8135f7ec6f5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb398f90ee1a4e15a13a40ce8a2c2969" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b055e566524a83bd536951f989f354" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6bacc2aa0bf7f4f258ee1e42b7c524af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1accd940053b2bfa818599080d7fbac390" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82062c73b191f5a4145d9e1378edf5ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04be10b5039999df5b63bac191553775" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6617cbad7e62a7007d3efd07743d5c24" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5c81018dbe07ee3c95b5c8267b630d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovne</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac44a40875ae850c583f1847b101014f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovne</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a722abab88d0d8768f25451afdc2b23e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovng</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abab58b376c40c223be9901fc9b69ec49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovng</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9cb560e81fa8037fef7e24bcd329d80" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa186e2e5fd42cc6ca9b8b88ff5dfd890" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2441eb37482a410aa1e2ac56f28d8897" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab48fd71200f16eb5381ad56c21a8e0d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d177a8fb206e2b4c152fe1c364e7972" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07907a6e3bbe491a0498ca2449b6c0bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d9869af4dd5551bf12bfdd7b9b18ad2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovno</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a842445a0de54dadfa8294d3f9dd249c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovno</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa7322d240bcaccdb3bc0db624c80104" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af698618f79458448041a15584a8defcf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e7cb886e4471e0b8a21f2dc3e8a512f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovns</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4492c8614553bd747f948daf6da205a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovns</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71763a1590b5eb7feb0ce759e29e6183" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0751c6f6580974c38fdb5ec0479a3778" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovnz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcb1e7134963b2c67033065a52006fcd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6175e75734f144666e0eb5fc9d8d6a75" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2fe48d6d968d5c36eb6abec2d2dac679" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb2061614661f2a1727b3a5fdc3c6df2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8c34267a67609c6db2ca96fc23b94da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovpe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af32e1bb763656c9343bdecd2b617a4c8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovpe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a179fde382848a0081f03b8df0e9b526f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovpo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa027832275b6e4bcf3efc0b5f7da4d14" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovpo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3dcf5da61c9f247dafcff9a75d50e50b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovs</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa139b68cc8d0418c477a0446bd3dff9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovs</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6ea629980babf2c955b6ee3dbd2a4c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9901b7f67180fbd209b14c768d25776e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmovz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f580891a731a5f667aa42c3636b598b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa43210fb12a06948c108b600a6313d85" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee776ac43b399fc63f1a2842578e3aa8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33be13212ffbc794e203f23a103994c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1debfb0afef990268c44bcafeb966a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d3e95e5f33748a02e4568c3fc608514" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a270f10d2723059efe3b7a7403b3be641" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23738c5a8ff9c2ba1e14b3870dd2584e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c11854f94db812596c0c53b8c5c53e0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a924163e482359a7296af631d19458ff0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5758f19cdad2e2ddff8c8f8d8bd82225" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade03627e652c0038284ce47ec8d3c53e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a50cb8ee0acb840e344b83098c011b1bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc3830e697f8b39e7d340e737fddc65f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a285dbe2bc28c20b8aa269ebfe5b6049b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a014600ddf19b281bc050d79bb69228b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96ef79f6db4e2492c331a2af048415ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2ecb653566c1332afa1993eda46a27d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab049d163a3a0342dbd7cc4796b366f6a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09e7dca8115f29c7aabed5efb2319fba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5fadbb4b20104c2118fa94fd0d260804" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1dcd2046ed82fe5ac65b0dd45d8fb842" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8c3d7e330ab4170e8da577a7e9c1054" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0555c6be6b6412e3938c9d06a36c9134" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpxchg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4041b399d1e1ae8e45b2be72cbd9f68e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpxchg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d7e323d8ea8bb9b30782a23ee7b0284" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cmpxchg8b</name></member>
      <member refid="structasmjit_1_1CodeGen_1a3e5282956457ed71030395c96b753225" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>CodeGen</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70fc47e40023aa28c0d90cc800bf0ff4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>comisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa60e6d4bf1704e2814532c622a3a9068" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>comisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a66b184725850ae76ae240f9cd942150a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>comiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7b26589d162bfd518192a33c75ceedbc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>comiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc78c56d4044004b42327af96fbb7df9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cpuid</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2abcd2f5c396a2ba0aa968467e4465aa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>crc32</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60d72a484631faf737594d606a129922" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>crc32</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a651435ffe71891f73cdcc0d4220ac1d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtdq2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5889cbdd7109feb5c033349ffa640b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtdq2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6877c97dda97d21657088bc1f82ba6cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtdq2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92ce752721403155e2cbc750cf67beb8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtdq2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7046914d46e0fac764af8961f9ec2ef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afba2d574d2231045fb417b0e77495e3c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2973c5ddb3b10d827fac683c1b8954f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpd2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a815470e4d0f8a91c823a12d511793194" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpd2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d548594a8407f5c6690cfa6f434c957" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpd2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6db7810bf3386a560038ed4dfb99582" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpd2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02af38ceb452519de910c0fd55cc40d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpi2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1e4bec30ad2e3db5103493d23b2f18d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpi2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1add0dd48a04a447e63cbdae5bc54fdff6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpi2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac583b6c4e84a268e7f1a2b8af00e64c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtpi2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c841c6fff8c57b2739489dda5967808" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0f7ffc3d73649749e54a07336428b382" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c0738315009363a2fa737b8f70685cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtps2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3445956f16d639789ed90b611d02d69d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtps2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21f012a0f5faf8b6c0e8d58d5ad5b45d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtps2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8591fcbe6bd29104edadc24c35002b04" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtps2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c9b1726f16b0eee737af57897f32292" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34837ad1ce65444d35274ea1aebf770f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c549dbd671de61510dbdedc46466708" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsd2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad703d5681decbc2c20fa5584797b2280" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsd2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a821dda7e23e2c709221e84da9b3872ba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsi2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ec9296d29f08b34497616d1540bd205" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsi2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2f737c1c0b03d41b30285c9649da7ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsi2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9dd24bfbbe0bbccf788b3fcfc10d6f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtsi2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7520c9035b974f23ba20bcb4eb3c934d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtss2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70beb6e31d552cd05e66fc567d413a1c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtss2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6acb3b5812e8258795fb7a6fb8336dcc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0fed0e6e71ac4fb32d0dc4288487e06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvtss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8751b58f87dbba7d77e6c1f1491647c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d14a924f396c1cd5416c212a23f96b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a894a88f3570c89902b7845f09187c4fd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttpd2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c1d10335473c727d9b3dc5af7431883" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttpd2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56ad8f9ebff79bc1211006c417634ae8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ac683a61df6f851b60af7c7a2b410f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a513939ed423fae5f8b0e9e76c253243f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttps2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0839943db757aec07004612ee6c72ad5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttps2pi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcab0e4d34878c56985a05d7e8b3f613" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82ea0ff3c23af1f0ad093e340ab17d8d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa43b9695b9dccff4ed75c8267b89fc87" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23ebef79e6ba4cac29ee9b60f03d197b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cvttss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb275bcb47545d8c506af0a575d35de5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb918ac12b4fd98037d6cbb43ae2222d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>cwde</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a391bc9aaa86e0b02bb1578e88071a0b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>db</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00b0a761b66db630d66cf41b24817454" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad49c2c9937b3117dd738d39ebe1cbb55" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ddouble</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a4f3b80edde834d618caa61284fabfa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dec</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40f0bc1162ce30dcc1847ee79fada5f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dec</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a492d7c017a53c2100d9d4dfee26708a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dfloat</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adce534e2886dc85d43a58b95c718f7a8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dint16</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a797ea3afee7522e86ecc75724b1105b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dint32</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4277d803ab640caae8170159b073273" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dint64</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b00e0e0808638f1c0f006fdd5d3221b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dint8</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b103414ab939ddd8e60c955d4956440" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>div</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36e6f25f420b006079c68f80ebc118bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>div</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35885c066818e39b9cb31b4d86ac0c60" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac97cfec5f27e835d134f9b01b7754a4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc7dd6617d40988ce09d534cce7d3b30" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18ee8f2c96f93727616b049e73bd442d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4faaa0e884931258e3f64057b0cf473c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4b2086fa03651aa48687e06ddaa0315" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adda3fbd65468e271a9df1efc52516fd2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fdeb8f3239cc587064656f38e84d3c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>divss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68555681970dabb5526f095d38be6062" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dmm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1edc248cacb5c41f915d62a1aa3e97e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52b7a7ae4041b10c35fa1f6b624052c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30455597f12647769482c45ae3aa50db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11fa32651d8a738c675d5fc441c93d74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab80aede68af6ecd54555f9daa6ff050e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a59882e63f112841c9b31cc3edffcde4f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab413d4464917f185c1dca4fb27b67116" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a962e3fb858a4d7e7949b82ffc50c8585" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05cae54708c937155806c9163d1b200d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dptr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab39a64fc66a4ba0e0888fdb30d0d7d23" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b953f91dce73078b860882be8fa687c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dstruct</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab48365aac5ae63b2715e038e95bcd2d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>duint16</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a4cfc87cbd158f75569e1b022c20e06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>duint32</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5c4e115675af304ee530a1524db2799" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>duint64</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31d7aaf4d9ad53790eef763815861fb9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>duint8</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9700e7c9c60f6908bfb51e57fd3f95f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad35a23b0a0bb58adb027716a551d6c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>dxmm</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a2bfa219dec130116f562581fce67c05b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>embed</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b6551b9ce0558cf5488e4ee96965f66" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>embedLabel</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a60de9faf6ee0db06d416085299149969" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a80b671098d535dddfb870ad23e6566fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ac7d3486553f0d1095f56007847752e8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ae3c9c97b17af0014a11c8ba964212515" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aba3894dfb3dc0297a897d0388a4c7fe9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a62b2481ecc60d97da13d56c06c5092db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1adb0cc4072ca42441b6fb9ebc9f7eae8d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a13d0f4273ae6afeb8e6078a8609ba9f6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a30b017c05a83ddc84467df318a443a03" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emit</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28b1a3263824d8edea4b6aae6722d5ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>emms</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeed513e1dc8ab8bd5238e09cf7c49519" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>enter</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af116bc5e349673b53fb56a5e3a9cd8b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>extractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a998a0c29f6dc88b9a9f7cf99af76bec2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>extractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd83fce70ea7200d6384dc6381568b39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>extractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab22c745d1db1eb7d86e2299731514bcb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>extractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f7fc1d4c4e5603bad7bd50b885aaf6a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>f2xm1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad02f5263a01bcf0605293e46e8ad3130" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fabs</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa00e12bc7877ae59f313f0d270ef008" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a782bcd9c1f48c9b6e4c5ad2e225a39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98435cae3365a20a4a6bc77ebe47e074" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>faddp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a332e05884bd83e037cc01dbce591b975" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>faddp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad45a4aeda5c59a30103085780bdf8821" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fbld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a15c93ea471ef906d3590184d52d7e8e1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fbstp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c3ef97898e0b33af29dc150a0076d92" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fchs</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c578819e1ca9f99895ea9f448196a2b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fclex</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace6bac9107b09c09343e4c8fc7de2c8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a619e16b969a37fa4cfc144dd9570e4f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeab1eeacbfb6f5c791b132b07786402c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmove</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab17ecfc82d1a114c72ccab431f32c01c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovnb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bd7d38d69a5182b49be692d07deb747" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovnbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af78135b6bc68664a20fde3a3e638b942" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovne</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2555b1028863f2e95afe76fe609f846f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovnu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a817a07cfb7d1632d1d716fd2f8540b54" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcmovu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11ae9fdb6991834ae87cf4becd199804" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcom</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85ba9551aa1a070fe939e4b2fcf85477" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcom</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a450fe3918fdf151d3ed6d5f2e23eefe3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcom</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad68b10d2998821e121acf0456bbfc16c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcomi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e19243ca4825953673705baa068ce20" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcomip</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5673368bd48679fc3596b2a5599731fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcomp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ea26dc4e91fb4f7aba33873d0a0d61d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcomp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10b5a114fe43ba523be2aa177c6c7abc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcomp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01814c982a9d9656df6e732b77425bc4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcompp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a159699ee299ff9353ac2d68b351f85ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fcos</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a107af790357ea7f634b1bc1c68571c74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdecstp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a880bf7df28c43fa85d8be64d1cfe37" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdiv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3dea5ec3ac611f54b765a7fb16e76db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdiv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5ee38bb6bc0cb6d3a9cd19b68b15e74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdivp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38ea53e8fde240aa95ec3f012b505b0d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdivp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0d104e8222b75d79d56ae34e466f229" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdivr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3337604f4af377ca95fc2f5340549ace" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdivr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad98c21804253e29bdab18a976ddb58f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdivrp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94c61045c2c98fc9e4dab8dd8158c394" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fdivrp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a0792987f2fe38b682cba05da87c8ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>femms</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2dd9ad45b02f4220f9ca772de38118ea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ffree</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abab5588d0f3d6e1d7b94ac76ff4c5f58" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fiadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac3d921e0b7175e82bf21bbbd5b7732b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ficom</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbd5fb8a56fa5acd3fb39d6005cfd976" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ficomp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04d3c548635c17d2985cb3f0cd658d6c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fidiv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7bed3fefd7cebd3521efb223cb3713b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fidivr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a637e343d70a2b979f4534a82fc0fa036" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fild</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed56f8ec52b6e96d37bd31ec7c20f753" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fimul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef6ccb3d7c7e575ae6c880aaa51c11d0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fincstp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa55730caa3983d6737c57a1652649ba2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>finit</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3785969cbf95b665f13c350920256e73" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab802b333ccdfc502099d339973f62d30" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fistp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e93fa8b5f78df0b94930918d287eed4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fisttp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b227ecfc1dd6b7a693e336e6576b8fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fisub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68e3e21da6fde8663fa6af7aa4e64fce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fisubr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a606b21fccdb766ab4d29f2eb7ca3f70e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4274c647d9c45c6c2b9bb2e81be0d99" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bafa7684e43dff769bb206c0d5af16b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fld1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8bce119e7fc6ec71a8038b9d8cc1d65b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldcw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae29e81dc82681a76a1532c20e8ed551a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldenv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afae6e3b3c9040103a2f5cf2a9bec22db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldl2e</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28ab9e424781e237bd2eab22c2880e30" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldl2t</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a37e0f0a811c65417a56dc1190c99817d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldlg2</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef0758b9c188b089a85e9f21d88c0eb2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldln2</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d2a70f5774d791b073cd5b5fea0a683" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldpi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6904a3fcfbb051bd65461f178da129fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fldz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36a9cb0ff748a1fa67d1e1ba5e356c39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fmul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9f6ac9f394d5110411fd56102f4df57" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fmul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a961a8f91af17582a2f260e7c90d55881" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fmulp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd38e20218f6be6e67f762a06fdd306e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fmulp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fcb571cca1148102d078db08c14474d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnclex</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a744b993bc0836612038227b72dcf92bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fninit</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21d45bfaad8c94bc7a55875621ca04d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnop</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25d6b4db6eeb826ebed7f75159dc8d3e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnsave</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acec4eb3db346be537c4dbc408f82338a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnstcw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6662477a1d42b96900250dfd3e257d68" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnstenv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77fe002f2357ef326b51d37b557e35ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnstsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d0e2444c639aac5a00f1e897c3c088f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fnstsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0659d1b85d0b5d12203a0b2e12f79da6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fpatan</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ead7284ab096932c27b2877727df247" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fprem</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12235e33008b95304570f737f9f2c0be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fprem1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa402d4553790ca02c334623a940ae5a8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fptan</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3682ce3effb6a744af3a8309675bcb4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>frndint</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa318fc4326ac246531f3edaa85c95603" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>frstor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad1f926049b6c0a676b48b7e24522d2d0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsave</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c338d9878a541172f151f972a431057" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fscale</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b78463c463dca02c907d26558b2b447" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsin</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a2cb918927a5eee662b25a0dbc57839" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsincos</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5c424ebd03f444ecafc8ebc884902a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsqrt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23a518a11d5157adbbabd6771a791184" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fst</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc6eb43b22b359606315bc801eb54739" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fst</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a986e2dd51ff655bd4fb5681e952d8d67" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fstcw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91f4549537add6de05f324420eee058b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fstenv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d537ac5b53a5d472ebd88ddf6e45008" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fstp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6a96975edcb39bc3f1520b514089703" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fstp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3881577e7727aceaff1329a194aa81cc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fstsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35814d64db49e72d59591095fedd4dce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fstsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad0028cf4a906c1ba95f6bf2c0c9934a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03c08ee7ae80366efccffbb4a59239ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd134873a85917cc9f0b1697dae853af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsubp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4968650f5f855c44985f241f2a889b98" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsubp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a32d85bc7bd35da913b55384426387a7f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsubr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe8dcfaa8e3c3be881f2b543f271bd64" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsubr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4762ada7b6a051c9e757821c292dcc1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsubrp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f64d7afcfa4681faa3768586e0ee277" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fsubrp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa32f296999c6ee6f78a8a696d6c6f6e2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ftst</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d8de83d179523190d54656c5c5a3ad1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucom</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bf10a0148e2cd0bdcf057d81c403a8f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucom</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54a6fcf95f2e81b633ff2e3536f6f0c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucomi</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d93c4fe24806d33f3024f5e9249a857" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucomip</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f1e39bc9df4a6c5c26be9ee4169d511" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucomp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a294b8d5b2db1f9ebf7a62bfaa8e6f300" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucomp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01d2425a4173d46282513c7ac00efebb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fucompp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1bbdded75d2f3576f76dc1a6893b01cc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fwait</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae016e6f9250099aa6730014e25ba73b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fxam</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cc24293147a53595122450566b76fe0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fxch</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b14b2681405b1180ee2d99179472e61" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fxrstor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5db7f98b45629fb84333549387287f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fxsave</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d020c2293ac1b0199df72fbbe998be8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fxtract</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20cfa2cf22c06af2f895bc12773c04f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fyl2x</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4c8c4b4adb44da5d3a000e09b6bd3b0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>fyl2xp1</name></member>
      <member refid="structasmjit_1_1CodeGen_1af0de6375faa88373299618dc893c6e02" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getArch</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1afd7f176edcad814fa49cf1b8f73cff50" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getBuffer</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a7a36a0a0a374d2bd504d4f2b76eaac3b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getByteAt</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a014dad0a0895bc1180cc8dea1bdcbac9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getCapacity</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1acea24f6a20a4abb52af3d0cdfb2b3d9d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getCodeSize</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a68d96442996aead68a55393b6fa21703" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getCursor</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ac424a1e029f09a6557914970cdebbad7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getDWordAt</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a70fc306a275e245593310256eda49e9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getEnd</name></member>
      <member refid="structasmjit_1_1CodeGen_1a44e04ba3f82ffa90550d7227603e643d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getError</name></member>
      <member refid="structasmjit_1_1CodeGen_1acefc96c0ac363fcf81625d232ed3d34b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getErrorHandler</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a353f3e0228cb6c544ecd0a05e07cc077" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getInt32At</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1abcf7f78c1326311f391f61250aebe0a0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getLabelData</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a865046fd5f6e6ec4fc587cef604210f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getLabelDataById</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a1f798b95035873c7395546c6f21e764f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getLabelsCount</name></member>
      <member refid="structasmjit_1_1CodeGen_1a74d11332a9175e011875b1fc63599f8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getLogger</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a3f019fb35781fb3f45b791387828ada3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getOffset</name></member>
      <member refid="structasmjit_1_1CodeGen_1af8f725cbd3aa4c226ea0fc7175d0a92c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getOptions</name></member>
      <member refid="structasmjit_1_1CodeGen_1aab3bc0b503327c62bc7d952d41365705" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getOptionsAndClear</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a02181697b851e272e0d50f7171580614" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getQWordAt</name></member>
      <member refid="structasmjit_1_1CodeGen_1a25290524d42466e7f341f0c41790ab34" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getRegSize</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1abdaca957b0afeb3188d4f67a4f4bab8c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getRemainingSpace</name></member>
      <member refid="structasmjit_1_1CodeGen_1a3d7daab958f99527363d5d97a0d32a0d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getRuntime</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aa3140d2eaa3c02f1bb2759b0ec85c2e6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getTrampolineSize</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1adcd890caadc41802d19ef1e430136f94" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getUInt32At</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aa7d786dfbbf2e2ccc88b9185014d7101" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>getWordAt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36727effd4148c1b2252765feaeb27ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>haddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c3f3912fd0f734fc2c4b9084965ab1c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>haddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7301eee68732b30c75a8e349fc6962e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>haddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab59ba9c9eadd368b6c49872d6f848bed" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>haddps</name></member>
      <member refid="structasmjit_1_1CodeGen_1a87c1df0563f369232f67d7d869710c65" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>hasFeature</name></member>
      <member refid="structasmjit_1_1CodeGen_1ae747a5b9778251fd11943d0f8a00bedd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>hasLogger</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bbe915def622bb482d230568518af12" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>hsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65329f0a6476eb3eb9d5e0d8a78eefa3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>hsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cbf52ff00a543b3192c85fb586e949d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>hsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2efe5bdf095181c258777a730d962de6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>hsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a66d8cbde58404e3ec4c8b56edb236c60" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>idiv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb6ed518a3802794e403a308e1b5d794" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>idiv</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a773d403234b30324816b4e741d1dc643" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0553a37108f8e2815f94ac1ca6179635" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5786ac5bf965455193f7c1b3b6cd5286" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69e698e27aa9bcf26ee99847ac9ed288" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a726b902661c9e322a5cfcba5873f071a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b9d6a876c85e2dea0afeaee554495a0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc4a3f0a5e849b0d0fff2e676745b7d9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0feeb189c7d43f043678108d330c60d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad483ce1e554362986db6c566417a830d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1accd0f24512ee30fbc58aaa1f99fbb06f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>imul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcafdf4783d90f84ca36b478c1c384df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>inc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23d85c0accdad2d6bc511784c6cd2f10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>inc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfa98159b7a7ca19320dd1ed71c9045d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>int3</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a6f8c89def17cb4f1f412d2be48c3e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>int_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a78034e98e978106954cd6c8078be6ccf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>int_</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a2e915489f3e3d70912ec69aebc405479" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>isLabelCreated</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8bcda3b9efc7f942fd66b78075edc54d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>j</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75fe70d760e26a35b4cbbde1b60980d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ja</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46426a9dba7edc20095143edb4eaf434" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea8cda9a7be47ca71af31fafbf6f9186" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a183030fe37aa4ed364ad741d51621b39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d8282d7bfa366af6e93e01de7556f33" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1addc2640351df2accf5d98495d7afe3c1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>je</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5cca12f64c7c4a257c4a504c04c2f506" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2cda00b224e0d8ea42e8c817a896044" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9f5def9f4d8c76c0340aeb394153f5c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b5294477c7f62a2dcec1d014006494" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a679c333a1db76a27d01750db323e08c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a1dca6f50fa5c46a9a9021e24ac23dc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3acda7b1fe809841783a45125c9ef0e5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b16f297b7a23165cedbee329e925ec7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08e8fbb1ae7ba1cdb7081a93b766b721" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jmp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93c098e7870279fe9d9478d51a04278c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jna</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a464a55b3286d487cdd56f73dcb7d676d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34842048603583b2f4628b58f6e99f5f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acaffbc2efe83a20623621ecae5972740" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc53bce0a4ea5a26cb841727b8ceca09" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86ac4ec2370a7d9bbe6e1b3036c59bbe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jne</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6467fd2497cf34665b6ce1dcf383b26" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jng</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab981fae3726e36bb847713db7ba22045" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30d4049aceee496a2bdbbe6c22e65f58" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a699a3dcbfd5eb5c8b7fad3de026275fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e2a27d219ea4fe75f6f2289e4d1828d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jno</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c06409342954e325165064acc798e35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94ebfa65550d57e32a863c5919348945" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jns</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2865f33826aef19e65ce571a3496178" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jnz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e0ea6255cedad9574d67c6ad3ffe0c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab86bc453f3d22b35bc73336fc3f2546e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a638b59ddd84f4b7a9542ca7a86231e17" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jpe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8379451f08e2dda69aba88f50887b9f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jpo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d6035cb4bfdb110b6f290c42d28bda9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>js</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabaa6e87594b40254342b2a045ee4839" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>jz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a209547ed81c2d3022ba6949a2bbc433d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lahf</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8efb84c61f61dce456e21473eef13097" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lddqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0f404966f1ee7a3a9e929739f8b25d3d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ldmxcsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacb33a55c07a087aff6f228ed065258e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lea</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac63f50d62bb05660721ad5b3fe117791" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>leave</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06c20e382dc0efc771eec4bcf398bd0b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lfence</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a658225aaf041bd3642399b5a6e6cbb4d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lock</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad07b9845dec35f20d615ffc524af078a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>long_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77ff1536986e5bbda1411635babf9133" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lzcnt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a290dfb1d39ee74558670cadadd5db772" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>lzcnt</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ace12d41f06c429a957dc4bd4dd14df3e" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>make</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad2cc5bb11b889c19ef5ca42d3ebab28" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maskmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8346a2b3f39b0d999fd515ada4563dc5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maskmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca4488913d82b0856881569dfd2e75be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a743df8fe0871365e12f7a42e95675ac9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa498b968fd38f63366194433cbb218b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af741bc017b4fe6e60264115354c4b80c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a97ac870f1583f8f9dc65b1248a8e22e1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a15f0fba8487e9a6a083059f9dd392e56" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb193f2b2407bcb78d8a96d5c00c54f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adbfe6f260d0b9e4afc01f18b5dbb9a67" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>maxss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8b280bb880661c6ab60abab86d2f898" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mfence</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9dbd64b66cb0eefecdb533ad9ec8425" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a157821fc5ff833979725ec0583d96253" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82ba7224b60e0670379f5945706695af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af74777209f6e3b68f33f790f71227552" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92b48a41edbb7fc5c3f6d3789742bfb5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4b8b38e8db2e287a5fb7cf4eb8e56d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2e3f17b6f66f41e1f0f8ec714dc3bc8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bd5c645f7c122e64c4ca8c1b03d411f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>minss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a218c80e9a9a250ee46e492c35790f1f6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>monitor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac65612674f48c7708fdac79c4b5f436a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b84f3e3792e897309082af29cb8ceac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2bb8dc3c05648652ae3f4fe888438ef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33e8b4b614e6e127585c06bda144b578" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b1daeca44ec515c44b9f6e607ac1677" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a296314439a02c6eec281cf4bb73be854" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a119cb05b5663bdbcedd0029c646e007f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac866bbbd762c4826542ea2da105e9999" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf5341332e825cfe0b1652d2043dbee0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e9569b4444951415032da1ecc813ff1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f40e60bbbd688026d53afd1eaf4871a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56217e58a951d3cb74f80756e6b0cd06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov_ptr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad639320b46f8172702a3ed1c9079a402" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mov_ptr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c4f948ff2aa9276af6b548664061195" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4c05b1f1daf2599576ecfe1450802a5e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae88f95a6c633fe0bc060ec3a73f61b5c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad360620842308574252539f0f5b2247c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf46f36bc3a15feda93c73ebe4481964" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1dd436fea5399de365d28e51eaba7234" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca9bdfb4f7c271c474cf40e1fcba6ec9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaadf7773074aa74ec769fe96107d7e8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b48c4e84a6565ee7fddf55282f69b62" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4607c8ac6520525a1fa900428c7c5a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68cd47f521205e5606942a6379ae39d9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6076e28a58d8f8454bf73076d003898" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad134ad7ea3ae2428f33e81619507b373" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3015bb090b76325c18fc5e8f7533164d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a624c89375020e9d981c0bc0ec2ba2c78" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6839f8634e9851e2bd299187d60c3ff0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acdd918bb75969394540f8e991d84b115" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movddup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26111636b975cd84fb19299c4d2f93ae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movddup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb9a3802137ffd2af61f3328ca1a7a7e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdq2q</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac90d33fdcbeae3092deffbd9fadfc9fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa9386b21063b7526c2969b847b955f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b727be864ba2e9de4f1040aea28749c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad12fac691914ac592a4da04703f36301" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95a0f0adf1c324dceb4b7371ce47ca81" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae05b1d4814e56a6aaed2d8221eb94219" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac286f25c418edd897a3de01d78bbc833" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movhlps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedfc61f774caf25bb5e52920e442eddd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60920742f8f0704935a774e7bd9baf50" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5441e88bedc67cf4439a23cfbac97185" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a399858eb2c3f2a93361fd34e4dd66a40" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71004b174af5a848e8fb732a175832d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movlhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab34aaff253babe071661f629a27ad593" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movlpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad080be2c9527c1cbfe21f8e50f845b08" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movlpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80d611e737f9f92b785f9f4b7f2120b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movlps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a165f865d8d331de28a6cd0f13185cd7c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movlps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a423f778347567585b87682fba7c47e29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movmskpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b34c7d742188646a47ef5462bf6edd2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movmskps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a08f6162da0003f2eda60ebdb9b5363" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movntdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac465f359d830843b27d2393673a100fd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movntdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa78aa185a1636c43b1717ecf0d26beae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movnti</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2963268c55b12fcc88d08953500806ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movntpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a075cc39dcfbbfff63177c2d2504e1758" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movntps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1b5f77be259abe76bda00dcbe6ac39d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movntq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade72365e231f52b6a3b3aec363387d7c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a97120769a5e52ae44dc31a57dbea03df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80cc4c30a999a4b398c9f60162d21727" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aefc5d862bca5fa52cb5792bb85b9534c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a147c95b82dc15dd0d0cfa9a070df6958" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82c0c345f6fa10ebceb007ecd1c2f19a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae733e7e52774b27be97640b8047807b0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movq2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c3f1c1496ed0aac4f3e994f20f7dcc8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fe1657e0c586605444fc50479435329" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad971835b68d06541b9fc0dd7bdca1f4c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a378847bc542df777b0ca562a4f5813a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movshdup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19a262f1c0612a5bdebac15ceefba242" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movshdup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6538b05dc8e42a2357fcabcda667519" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsldup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc0e5f12fb343bab7094dbb699da47f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsldup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad4bd4723265f7c554703ce10c75a433f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5e6735ab05b9b9b88c4d17671f4facc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3f7c4a714345dd72170004eaf473bae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7456d0f3691a8c5360e57bc2c77f8b0a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38e13eef2c3b8981eb59172a17a2005d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movsx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6e1bf01ac2ad4b9239137a17be6a067" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac224b2983399517ed37cd994136b7614" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a246a47fb155e5f8931f7eab04e8300d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a723aa4b30fcdb3d5ff7427a7e38405ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a15ccd198b23f97783c94c648e27d79" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafed902bcb0bc596328ff865409e6d65" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1328dd2fdae2c765ae899674f29daefd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movzx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af829d4912646885ad2d03d4eaccb240d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>movzx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a103106269cd310496f750b506a08a74a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab66fb37934ea83a227901141de3cda57" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2924ba4f961f9564f6b1f8fad6233f2c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab368a5beea2ec5bdd163c635f2c38793" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60259d8ef4b0bb4b17d3e98362c57f06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5302e42b7c1d7f54c3f224889a86e141" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab18d07a30e3ee02a12e97b329db098df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3121db7961a468669c2ab5883446a847" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac810ea5df3e28037f9b41acf4c97efc7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afcad04bfb6ac77ece4e0dc692da69781" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58b74bdd23175ae79ac097bddd4037c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a027a9ca18f74c1d8cf16ca6db20c0d83" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a185455ffcdd9f6216e1240c7fce20454" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4feb47cecc7f277597b35e05121a76a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1247e080bfb93ce169c728337cf7b3ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af480db20086515888ae7f4d69c507248" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mulx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeeb927331cae84bf3cc940fab5896ae6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>mwait</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfe381dce41a9439aca7a034573636ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>neg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd7e480ee74bf3f98d25fa7dd8b9581b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>neg</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ac4ff0a9995f59f13d62c015acae7ac89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>newLabel</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47f8a553fc5f4840b85418e91ebf89c7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>nop</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7798ce53180bedd43da933cf857f139" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>not_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73cbdc2ce4827a177718fae6ec016c2f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>not_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecb7e0529403c55576b6968d80af2c01" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>notTaken</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a012b22121616f658f25af1a7bcd1b52f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1b775e8e08580467f1aea2ea3e1706b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca40799a27099ca1e939dbcbacd9f3bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a272751be7b35f51669f38e480a4e3797" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a607e45011d2542f9cedf6015dbe73722" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5908964cd7ed4392fd406ea64f58cff0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afca273e71cdfbb510c0b8c12086d54e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>or_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90c4634cc3fc2412764180d2ed155bf3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>orpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab5a9fecc0ecfccd2a4632525b138357" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>orpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d7bb4f2bc06b410f09efb50988a1f19" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>orps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa70119e0f4e98ac949704e4f5536b65d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>orps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaed9ac4b4e4409e991b66e77e868d672" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5ec1ef27ec14ef499573d83c177379b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4857e9b9d9f58c2fee2d544e6a551ed0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0741bccb3c62aaca868a0e2c7166bd9d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fc24ddef92ce81ffa6e244d1c9edbd1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa98afbd8e00619264ce2f46ff6ba8f82" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28b92ba355a81ef8ee6927af5f5cdac3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8f607c302e921cccfbbdc7eb3dcdf69" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36de3ecd267a9989377efa4d441460de" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9841512daf6120f450c771ad547a218" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a648537f9bfc5bcca0b4b493c3de1770f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac0901e89705e452f7dafe46590e53bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92e021e7f54feaeba3c5dbf2a783664f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acce5c5452b6a26d57d5a8bdb560b62c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab10d0f66898140a862e8c6c5633168b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a951b9bca81fcb55043468ef6bf35a9c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ed46933966107200e97f61d781f07a4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packsswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab53328989b0e42d76f7a61e0d34ab08" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packsswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa976b542c04f197c4dc2a80c139536c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packsswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a576e6dacbf11f44bb026b937608a3f09" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packsswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4285b24766ac4001060cc9b68ff6fe9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packusdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacd4bd5b64a6843b333e6ea8df63b019" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packusdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75cfe53ee2233d43618e6e98e6583a29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75aee6e99664faa676ae6c64e6e00fa9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5f8fe0f2e68208bb47db870edb82fb5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77ff6c99642e0ca321631bf9fdd7539e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>packuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a156a944157710498bb3b1abf6f5abe91" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8cb15044ebe14efb937c1de5d18b88b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a903837f65b5ee7371e6d1262d89b8d53" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a827599bab0a8f7757a7819961189bd5f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afcde5e1a7863194af1ae23eede17e67e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8fbc792e4ff145272290cdf6722a590" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af611b9541a470fb015b03206627e3ea2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93a07c5fa3d3c3519c3fc5df477e87b7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a214930eabc9b96554749139ddb2df069" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ef88bc678e9330840637bb4cf8c16a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0650f9bcaf5b91c86fd105081df1912a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6f05451e9c8b3d54c8d197876a89547" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae899fe96a3ca7ed2a7964c85db1a9c68" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7532f37390ae1b0f87be0ddb70f7d2f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1accbd619504682ae22a77f6e774664c5c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4efef46aedac85244e2c81a93afeea0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a165ab1c5a5ff81c08f210e13de5c82be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0a191c9e44c5e3cb00aaa6d2bcab6474" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c53d2ff187f2c5def7047590e4bca35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8bebf715054ca3e0e498d2ebf3d03c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ab24f91bcdf5f9898eff81980ad1ff6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a3c161119710d154033f3a06f1962ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a363552ec79358bc40173f2a7db93ae33" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a924be893e7a45ddc04475f25aef58b8b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f6b6b0899695a8c4175d088db30d761" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6f0d2e85128dd02b8b430b097bf4e5e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b4e17702f523f9df3ca249739f2dc10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a645f78b9107b0c2e46c1b1b52a676a76" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa963ad97957f84f372c65ef6e6cebfbf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecfa1f76362d3ea0c6feaa21d462dbff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc9898ebce5a67dde5ee13ab810ce61c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a768e0a12c047ff08be7da8067ab48a50" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>paddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7efc4555593d9353a37d0af87bd01f7a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a940a4381cc87568f685c782214b16f12" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac64b289129a07af153106dae3e4b4e82" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb3deea8cc129dcffc3ce8de28bfed94" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a628a5e9b99d9639c84bcd9696f04ee38" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f30d5345b286720484d43237a93b283" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a63c8b1c16f640542c0a6cff98ef32850" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b67d9cc2cbc4411331fdc08c03fe478" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>palignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6730a7f50afdffea98a2208c0558ee0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c1941155592bbfcb311160ea9e5a4ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb74d56b287138abc7d2d03ea6ef4126" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bfdbeaa57ecf42a63cf470384009c32" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07fa82c06feff46c1cde06755ce9f26f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9546554b72925fc94c0776d60d308d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3e6951b8a2f16a3bba6094191900d23" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36017be9e32a2a02267c3f554972fab9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba5154fbf0ace805977076b06d07e4ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pause</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0c8425153db1b22c9598378e2f09837" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a63dbe1ba32cae73468efb9517d11ce99" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c52b6e58b0b53b724cf714828c86623" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2fd4d8f98e9d81d8cd08799efc1cbcf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f685e4b5093085a2dac3bf1c1bb786e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48e9d613a0979af1ff562dc59d457523" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a39a44d6d44ec5f72cc49cba2c860b555" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10031cff4e0932830baac9a04d8f680f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2afcf846845781b4402017ffc45fba4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pblendvb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a263ad44156d58cedefff71a4bddc350c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pblendvb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17e09b8eae53bea01776b0784ff3a630" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98649b98d6981cf07d9eb0874696d414" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae55e60acc23edbeaea0d84553469d29c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ef05338a00c3f1b99140d07363b0448" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b0d7bf8ef77e5f3524055af4d8fff1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00c15738958eb921c789729d9c9d60aa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0536059b069571a5505a68911b3fcfcb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55d07125cfdbda7c42b4346de307a9b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac26367e810570f11432b9f1ea3058edb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab97be0c661ae84af91b5cde40943c4f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a884cfb86ff739138754a98b02937511f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a88bbd2fc0a4fa02620cd16304e8684b7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4a2412cc65ac43d424d134164c9f6c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb7f7cbe849081bacdf1bb6b2126af54" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee2703540ab2edf9dfd0d190f82699cf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa590714657d14cb99f5c973892216259" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d1bf7a9b3a4ddb8a609e7b942e2947c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a380562c098fb9a58bfd85945b092f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7901233f3888feb1ef274c0b0b8baf85" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a72b39c52b238f5f822c93a4b7797c3e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee3bcd32e3aa77326446def9e67b2586" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba8f1f25188ada3252b2674fdc885ec2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d1fab56942fd793475e6897f8ad711b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a778af90f62b5eb0305f1b2241a390db8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab73d5c3e40b980730da10af3841be5f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f7ae183db975ba472a528073cbeabc1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2b21c454ae0658bbde448f5d228c4f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc23b3afbad1399e2f25b689fb1cda13" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6e94470f48a0eddf2525dd6000c9f254" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9eaf06f449619aff5e08339ade7fd0d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d3c1af5c9e5c3c5de2d8dbca735f7ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8c48b13cc4177f70b1df04e65151720" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd7ed377367c8689f9047bdfce855368" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ea861ddcfae240174e70e1747f35f92" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c400406a753bd67593ddfa8b0572009" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad40ff9fa8e9481df3d0c1c1ac7a7108e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a126c3edc4bdb2b4d00c6914217f9ea00" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a680cbc35fdf19c353434212a8c69a4a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee63d248fd7aa0599634a0cdf620dbf3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8aae0ef41b76629f74f1673cd4abfb6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ea82db10f715cf8444eaa5d162841ef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fc0617f163412e8a2f1c4a08b2aad04" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36c2312c2a5359b2b43871c6cd3ca586" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81952a5ccd770bf2a0e502cae75def8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ca738291123fd8f4c78fb680b1d61a8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f09058db4cce2f9d943088b865bd967" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ac5ff69ef2940fa31987296f6a42e53" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b56d26b15f9fdc33e0f73547dfb02ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a98b72b5e538cd2ddbbe3a47d933bfc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af574bd64ea63ff4b38e2941bc9c35b86" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d9e1b5d715e4a04c21e8e52da829197" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3e26316a9229e0080f1f895c123aeafc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a180405c7c02ebfa774c5450393518517" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pdep</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90d2ec0949f80c2358500eb6fd8b46fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pdep</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6a392a8dff834f11adbbf30dc8b4779" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pext</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1add5d0426e1554cd8db220daa9d4abe9f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pext</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5edf15feace7075dcc97b51ce7b54c35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a584f0128624f6d7e1f5721e667a3d3f3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc91c69f3d66554be3afceb0cf6c1c89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96af9193a537b8f155cac156aca8f6c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56821453ab19683155133e80266e926e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abec906e294b6d3bcffae6ef66f55950d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a961ec929e9073a7481bb640523e76c29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7d21d4805ede48c83a02fde333c7c70d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac1ece4cb778c208659c2514f8cc58a16" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6c09096a4e1b6cba4fe13cbd982df51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61214a30ba3e862312da126958e1f1da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a119483bd70ac49180de6b56a79e954bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a639d3a57783d2f7443e1a3698b3edf01" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1be756ac02ff5e2cb7a9746fb7e550d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74c3efbab0b5114cdb059ae8a5ae0689" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c51dbf539a09f7b130b9f15539b6d8a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a62853abe5e79d657443bdbe7b6733d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27a30d77663952a3977baedebcfb9ad7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35aef9ee20ed94788d5b2ac9cdc7ea90" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pf2id</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af60e72666ebe775caf99c58c2c8886f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pf2id</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08d13a0ad479c349afdb570316824637" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pf2iw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9f7f1c3480c14b3212023f3dd9b7f50" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pf2iw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a863624de2325983d960f8b06d7d36079" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfacc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43a5d0702988df7115a2379b29400433" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfacc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6859a6bc427421202f3ff616420165f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afce9ba78cd2a0d27fcfdf6ef6856ba1f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80c835fd74b7c6b2fcd970b92635c764" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfcmpeq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1cc4b7e8d35cd86365f75f6b79c31d83" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfcmpeq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ee302cad654187caae9defb06c798a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfcmpge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0268ab7c09f6f144b78c7274468daf3f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfcmpge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e283aed20497d2e2e23596055afcfee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfcmpgt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5d5915de476cb224b8482c77f22db15" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfcmpgt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2010cf6a14eddb1bfe3826ebc3d31de" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfmax</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7a45edeca1affba1bbcfc82ed87c858" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfmax</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a053f2c3412368be099d5865b9a9f3fbf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfmin</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9739deb9625a197ed1b8ce7c2e45fad4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfmin</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a670e627f641e21d7b3a876ef6810f146" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfmul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1573af28dabb9bb6d3f7d2468cb9a69c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfmul</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab6e36ba204ca6cef7e4c49625679e86" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfnacc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafadb689bad64fa8155e6bb86bc3fdd2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfnacc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa18570a1db2b8938f7fe744e2b07f8a8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfpnacc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a532d2aa83ac84b8c8d1c58754fadbffe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfpnacc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77a095b3fad2aa3de9d21547f83cd221" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrcp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00e94d89c06af2a7c57b9fdc7e68dc59" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrcp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad9e205ab5c502d197f07bab9e1345f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrcpit1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd7bcf386374efb71edaeb9741385d88" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrcpit1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af906d77a961321f7ae38774163429204" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrcpit2</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa36a4472eaaaca8c98308150a751c420" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrcpit2</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4d822856c8e6ef693e923e3c19bcc35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrsqit1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61c05ea6ebb09d4c8242cc8408895f21" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrsqit1</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2472fd8b1f54cd7985cf95179ff07c8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrsqrt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac43b315b5317535074513c0da9f5ffa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfrsqrt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8cd0716536adf3cc34541f3c5bc39735" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfsub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0949bccd8ec4009eead96e27529f76d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfsub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd20ab98bae02fda5503d484a500a08a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfsubr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae174d35705ca5fdd2b5f2bf5e2dbb5f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pfsubr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a78932b83e50eb16d06e859824940b4f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99254be8df0201a3f94d3020d826985e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b9c624af7cad57c14d6d78d50ea1fbd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd730fa489c3fbc54b107b1a3961f49b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a9407d72cd191061aee62f46a8623b7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4bc430ad861e9d89aff4c007ed24124b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a78d9867520f0175c8de51ad5c3332e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f0bc0494d348b6ef578840bed25902f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a72de60bcfa226c631e630fd9df223b3f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58c76bfc9c1ff3d248b7a74a161d2307" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcd417893efadabfaf7b93933e4fd9e1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b73448c2fe534eb842ad0eb719b5032" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af5fa5350bad4ea90c2a6b9086dde4849" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phminposuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae51a0c2b68bade5a5aea23c1b5b23a4a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phminposuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2766372a6d61eb8a0a114376516ff4f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cfe004332adb535908983b9ffe05f0b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6bf9068269d0ba48ee126ff4685630cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92b17a05930473d526c8efcc8af68fbe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18d0e203015ccec5648f206bd5ebd683" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedd8cec51fdb4de5d0887ffacfd5e25f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86c8e56d52f95d55574ebb012a121f34" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabe6f3d4c191faeceaa510dc62683ce4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3f4f33bda7f6493c3d4c4ecdd7d9eb4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae74cb6c79fbde8fa9e316e5b1faa48cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5bf159751a09c82bdc85c69bfd86966" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8719e60e176d286148a8271b2dc882c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>phsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a959e28aa679f534ac52ed47b0fb184ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pi2fd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf12ed0523a81e98781e0beba96e587b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pi2fd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aceb7d543cb6732ba2bfe50cb597e3959" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pi2fw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d4364afa53e3d6472e6a09ae3f31fd9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pi2fw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85bbd19193f8f1e3ed9682c4c83469af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a896c1c936efc6441076c6b4b521a0e78" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae05b3e16d2a77873c0284dd1b73a92b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a506eda345964db4ae45bbd4693f7488c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a585373816acbe6be43070c2d11bb7e7d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6d30927ada77add116cbdae6fe2a44b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a308377a0968644423f0581862df94157" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83149ffcdb34caa2133ccb98a377ad1e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac5bb3d272b361ad825a564a1f654807" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa26fccd8d5eb76f81f7abd3fa500519" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcf75160fe6704753dfadd64c9226056" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3496949ad291341d76fdbaed4a043889" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2220e7bc4b9f3482cc1c497cdd153c97" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d0ca6c07d83383869208e58f13615f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac30dc3cd293e7723a3dc17b2fec23903" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4803c7100e38bad9461721beac485890" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a102f6781f6b124a5c4e22f49b19924b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0bdca96d090c3fb040047e6bfc7a7f4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94927a6ea13d26dc991609713f0ff242" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad41175523cde34afe67d0f4d6df50ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19c292bf19f9215e8db3e49145c30bc7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13e34ae5fca85c1a9f23b0ad128c60f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34a59487a9207674185f586a53f02b21" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6d7d8e577dd517b70da709fa06dda4d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaedfcf691d60677d21ec7a6fb8fba876" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7adf43722d6d04f905ecafd60201c460" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13cc85e975a29c03cfd2ff4819f53b93" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17a750d54570abd02e1edf8adffc4b81" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5db2c89280e73ba5b95778bfa2a7a871" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe729d5df3304581281a30fb9aade811" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb7f88c10bc7cef61a8f39abd6a709fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a277ccc805cc337b61a6907dd7a84652e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b0e2a8347cde4979732cb70f546a2bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed5737ebb35ffe54b136724399ec5054" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a528f9ec30c3cbe2ad0f54e6d6ecddb92" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a343a8dd597ef9d205f6dc0b791a68c89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7474422f245d2c2a7b1174f19074ff1e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04fa03cb1eb91d78a9db7a578b4e0f19" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7045cf159f66279017ed12c23f4e0925" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab80275ba7ab9126acb070a7a562af000" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9dbe12976e76ebd60333836fcba87f8d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11bb6955b1a3606c47a577f0e56f5695" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26c2aad0b743389dcdf4365960292851" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc63f449c478472a7ba813b5985b902f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmaxuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4737cc38da378a4cb1b5546ba6441fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa550fd10cc0ed21489091d33fbb88f08" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7103c5ded68920fa9e4929070e48c3d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff586ad5c2c1fe007d75e647ddf43198" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acaf5e61c828bdc2a72177e697e4a43d5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4acbb0dce7f00fc821f5760601540e15" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac86144e6831ce229a5a81d03b5461b7d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1113b8a108b638882cc33db06f08be6f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd4ca813a42cfbae284ce817a8cc3c2b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7174435ad753eca6423f259a6466f07e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae7095e64f376dca20d73997fde0cd4b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaad62bc84bc5902a10abaaf93bf9d53b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6467560b5f9fdafdd1c2655fffbc36ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0a6779d3f74401dcdbc4f2081bea0a05" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4797c789b617f65cb4c15d34f7e1098d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a114f17300690d9425873373b2022304b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pminuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abfb982c05ce442997ec0e4a94d85039d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovmskb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aadc3f7e8486d75b128cf4538b4a9b31b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovmskb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4cbea0e9812b7fb5869c68e6e6a9e618" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12c32471c4a8b9f2c169eac58f36f3b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2cd8f31ba691946ad70d2db4a9002cf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8169596331d69bbbfbcf0cb5067dc69d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae486864abff3913d2b8d5b49ef6ef99e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3a914363794eb95f2b34cc90c07b12af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5cf4cf618d721480c62903fcf7062b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4060e97971ce582234c02921804d87e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3fb64ac95151ab93b94c6e4a35bc0f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a961dd8ea2607e01ab759178c3b26c04e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74020a94c59d5d1dde906594cb67148a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b9344f1a80a02892934be60005d1049" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovsxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af81f2d61b81a56ca8478e171940a0df7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae33411152102f0f9cfd277ddb3d9acd9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5817de4ab3ae2d2d5d64dc46de698665" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3ac8f6b5a8125f14b455b3a2ffb54fea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4477a5ae8bb9ecbba29c75abead15daf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adebd7984ffdf55c0d7ba93b7e1a7ca75" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab5a495937b56fd1e743765b6bbb36896" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc492612fb97622699a6c825b241ab49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129012abf702a2f8bb491fd023b23720" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5382c0f290c115a852264c1317a263c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a828c31b54542e3f3f09f88ea1a59c6e1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81b1e3618a465cad1a07f9ab3411112f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmovzxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a405e89d93473994c6fcc1192e121baed" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmuldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb5a7615c6b7db74aa50ac058a9d41fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmuldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2aab58b03d498b0f401bd2a4ad6378ac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac4db2c03362a3b196116960926e2cea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaf78a64a999aaf9a4237eb969e26d9e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19f22cef6f2a80052261dec1064b609e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9fe37248e9f6c52214046c0165ff9316" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a999ca292d39f2274918e2d613e38054e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c2effbfabebf5b7835af8ec1dcb50bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9fbe4270337d4c55f57b4845d10ae7ea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa16a4e3284e540b2df528fdb7ce0b07a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab57ae5611133513da8507b29b3f127bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3cd1b018054e0875b4733d83ea227ed0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecf0b2bce9e65183f66129061d822786" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a846af1ff224b4feed650f9704343bda0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80e07764f04127b3be50c6dbac955115" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmulld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc751ac51972cac275e4d93229799501" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc7392965bc0f113f1a7d703b27cebf8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d89b5ea508bba0133a895b3d87f6798" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3f0f6f2ba63a3e0bfa758798ab6598b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0a16f3726ddcde115ee3146e8e5e31a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a716c885102f7a523908f96719bba425f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b1f5a29572e8bffbf2d1526e5157c4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a071265fc42027e851eff00a37aed0678" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a739d705cd9917fd0a50140ac0b05893b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pop</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e65442d7a0d67defa6f31245a838383" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pop</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c0cfa4b21e43352ddedb24f725a64fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pop</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65fa96a4c1b614cce89eab7505af8a9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>popcnt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00eaac477eb482b1e55e4c00bb01e1a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>popcnt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82da8b3f86564a77f4195227f070ab2b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>popf</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade38950fe45915edd8b79ee7e8ae72a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>por</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a84df020b4dc80a317141cb3bf59fdbeb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>por</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af50f9bcc7a216138a464e094c8c3d339" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>por</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1b44c234ae39c6ecfbeb6dd68001965" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>por</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae59f6874c5443228e93df39af5ebf669" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>prefetch</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25b5670e5ba1f489470259d6ae4fb37d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>prefetch</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e20904f4a7a99b02c03b6086c812d6d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>prefetch3dnow</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a483db1c9f5edde3d13e7fb4bdacc1c89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>prefetchw3dnow</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4a7fe27f5fb637c9f41f495b0915d3c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a453e080f0975f4433a1d73cd067b075a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a64ea3f50cde731bd8c47a07dee971659" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42277bbc179ac8ed93041415fda385d4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24c1107e633aee812cc01d5a3c843d9d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9d869b3f9003cabb9d2efc37cc37885" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adefb81a0ceed75bde1244b80b6c80f20" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3716df33e059c8c1881245c42285f6a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca074118efd81dc2b608470b68fd731a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa3429931ba73b211211aa4bddec0a9a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc1e9b64fa164fb2a71966c1b39c7af3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dd73733c4b2c8e6a6f36bbf1d3770fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a420de56e952575b9ccfecb31146bee74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34fab5da71b2f89493bce3d5a3c6371b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9ecf3584c799ca177c850f662a596b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62e389ed19c1f52dfa405d3469647a15" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d2f19c6f5433998e9b61597494fb618" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23b94f4d69c07494a7ccc7988e06fc0f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b0017cc8f3d5fffb0a1420124db9b69" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa5c5dba1ab496d4e891a7d4831ceb91" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a569dca34f3488ad0763b2415bfa5d778" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bce3181bb737186e1da03b9537a1aad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad05f3e1a4a0a3a6b8dcdf0a9365173d9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c5cf54a4ac239633a9fb78f6ea61a0a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pshufw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa44275cd2b22e7590d51d6ca2622695a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb4c4618dda5e7fca4c3bcabfcdda8ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb93e24e1d09f12e18c18d131112f355" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab10725cd8ed21adeeb11934139b7626d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ecfdf29e2a82c59c25bea16d011fb54" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85b71d8f8df9e4aae4543a97939b3810" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2161806ced00128cf549656bdad162d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8447ea4025aa08c05206e8f7afcc24ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b8ddb6d347649bbf38b0e34b77064b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02f9e77e6737a54a11bfda097228f228" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad30dfa6133cc020e31c29b13f83957cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc47412a9a0804780fb322cc2c913233" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa55f15bf91f4f8251fd5700e96ac393f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81463ca07f4d28f4063aa1954e6ff304" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acdaab9f4eea8941b5a869ac8c7a6edf2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a623d8b3010bb0c363dbcf5c4ef1376d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a97021b8fdc12dd0274bb87b64b465af8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a341e1f6dc621880c83031b2f967cf123" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a590b6a2ef488cd82822c857b9d2dcc79" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a934a751901e2651e684372f4e9a53bca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1daf0547a2947dfe97edf7011ad7bdb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad309a0248ba6cc251b2ecdaf75f80599" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pslldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a221c0a400675ce8df5ae484267dde716" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a611c1f528d3e32ca9a9498520ab589c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0bd44306f001a98e5b54337be0f856d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ae8f41d3a458b9481d85e7e34db0809" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa542c755be51ec5c9ef3f7211d433461" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a086156f21d067281596022d6b01e6c09" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a63362d2e2b8ae39a73e9cf09a28705fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d3a587dd507a7a841e5b6470ef282fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec93ad20cfdcb191002a1f34bc3f606c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a44b7fa587a82a55c20e1824aeccb0aee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d0a32cc3c158eeda7240c7ad372e0bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1af5cbf93eee58e4d4297640910092b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23f124889c4b4a0c213d8336971ab2c7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5965637cf741c23bc89fb781a8865994" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4dc476f406b8cc0adefcb7d1a990e05" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee97590c994f896cf8fe61084d8eda1f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13b9ecc85162fb316e4eddd9cb69d6f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e2d81c8c54359022a394f7ec0f5bffe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3a0376efd490c9c5b4dc200fe7991e2b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea7d396efa8d5413cf6f6866a98cddab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ed1911919e8dce9ef579b495210162c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fbb272a26c6c97996ada937d686d153" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d1dc5d94d5eb81a6fd0127d460442a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e9d6fda1252d0b6048d8a68c01f6c45" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77bfe6e59b8cf5ca54f47d003fe1c57f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e16b545c3fabce89474056c2cc95a7b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a2a6dda795758352a6c85726092b376" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6a05faab1c7ebfa07dfb632652032d4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba397d10355c84da890904b1fd5aa8dc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b31f6f7501a39772989da396afcc87e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7951585ab1ad43b145c13e338c87f105" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9ad21acc605101e4423c96f06ca1f15" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9cc65ca040c046b7e3863b6e4046c28" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afbbb0be96ece3159b56def658344b28e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5ec85f776bc24e1776535739b3bb914" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a585f4eac4390d1f0cd4c4fc70d29c2bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1affec6c9cedb4d7cfd5edd01da86ad1a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb12d7c9ef5b5ddf189484b61b4b3088" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af539a7e215bec2cee742f4b077b80223" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acde86da88b4ed8fb42e682d91cafabfb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f17518f0389a06a5e8635f0b156972f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb71376178efdcdd71d6571014375835" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe7dcb31b4836756ff98e5e9a2315ad2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa83eba27cf1c6b4f8527e56a865b6125" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad86a39408ee9a470c2a48f86200093a4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedf59a61a4cd7c5f6b07de3dc948a8d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a506a935d74a44277cff8f96d5a6c1230" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9001762c75286c118179d416bd1cf7da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a182721b2de257bdde0d40852ee6deb18" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c05d7bbc66e42bd5de154c8098944b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77c0c084a026a94ae5e1a9d67d3e0966" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac70c3bb66871c2999eed64685c8f0c29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae57bb3e0cfef8a57cf0d55f05bc8cfec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ea2b890a31753d9d81bafda43ef795" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17d23fe6b9d1b6f53be68c1274505a8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeeac7b69374ce677488cfa4a7c4d2089" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08dd9d1fdb247337c21c6a214a0ce600" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae45df89cfc1258a76afbf546111529f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04c0a82c47a90719435c9b833ecb2443" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad650be2d922df124698b560866304b18" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4614ee037edec8d0cd3688f42d8eec8c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe9e5f18c18c01ca3db239a12ecacdc8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f5aa141751e25ffee568f3e9d7147a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90cb625693db0b762852c4742a6ea345" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a014420d63fe871a9cf497c999211d7b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ce7d30022c2880a79c6e644630219b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a315d9a93448db72ca47a5e1c51db3908" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0873f1ee7b44e27532fb14ce66969a74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af10d67ea40c3fe8a97a388bf74a889fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1addff194dcb93942807f5cc2aff4c3ee5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab14f14e7c062b4fa66847240a2aef2e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99a63475a672ed6264820a14b3b77feb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d8006863446801bbf21e76029a620d9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a473185b3c0c4beb7d89b725f71ad3a48" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c195bd9303d08dd051b538ec99818a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19b0c1b4f0d69c3da899262872fabd89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a936082c2adfb6f6b38bbb4bb814f4839" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01ecd6f6d1f9e2fba162205a2fc8ca05" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfee711cdb72e75fe89e2e4e60266c6a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6beb0cd7a8877d3b78e8e2ffacc71ea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbe4c6727104e8cab8d53a8dd7df23a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d9b81bd302c60ef26c0ea7d548143ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1addd8227d5371d1b82de689303593c2d4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac17db2a99303a734fa62c86c5a0bc6d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d21cc312714e044f93726516c9d624b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad38201988f57265a9c1cf0d8349b87ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ca88b960241bd5f25be1b7803930c83" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3b7d062a53dc374bc17a40df8de8c35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24616b061443177742bee2b4d0854ae3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe669bd4e715b09bd55dcce6ef6e1774" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>psubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a0c0edf09758df7e89e2e0c031a6ea3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pswapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5dd4dce7b41023ae2ec92aa513919fd0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pswapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e6f0aeca4a62d20dbafbf8b52a85d1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ptest</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a831d0904c51a4dcae606c54c5d223592" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ptest</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf6e7f1a4ac2bcba7fdb137a6518d5dd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00511753929cfa464eda70c9fa9d6c09" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81273ed2f2138b7321ff6b84fa3d51b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d76a2bd9f65d7c6e1b336855aca6c5f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f4e3c7a4eddc6558998b66ad0f207e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a29f2cc99b0157977573c8ea1487d708d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad93f9db0d12b955b48367ac7d8a9ff2c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d49efa68b776d4d023240f97b2196c4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54cb8da0c8bd2322ea32702203d2f128" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b15acc24850405092fc074bee44e4e9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a84c0eb8f9ee322e91f0e48098765b607" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2bb1223884dc3ab32ce37f257e85ce1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2706c8952cc4155de813fdb6d9697b78" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2179fa12d7456db007a46d922ee5b160" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52ed02f6fddeb946aa1cd6bbd59d9cfa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad059757a4685faa25cea9c4dace3eaca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a571d965a858dd83f86ed4e885a76b967" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea3df5e9d74fdb7b087e674262324b42" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a703445ec657aaf57e2faf2c3452a1e30" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a884bf8390c8f569af50d1bb5b73e68eb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24e006c37983f566652468d7897aec51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad349aba71bfbe08b08e76197d6cf1981" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03b18be0df803fad90a1118ef09a2017" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85847b6063670b46bf99a291efc79377" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4271319655650beed40aa8a1ab7ac05" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73dfdf9057210e61b2e8176633fef305" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aebe4df740a06842ffec90aec395c4c76" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb9573644379d89dffafaa8f8305bce3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>punpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a128a78f4e29313580e6c727d420d2946" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>push</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab9774b1f116c234b0857b60f3a5e7643" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>push</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afeb94572447f52773db71cf51ef21f85" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>push</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3577b057387f08b7ec71444034f2f217" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>push</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb47f11f372f50e7437c872bbbf7726f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>push</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeaa8376163f5d21d7031af67a207b2d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pushf</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac1e5293ef936b85b08a4fd050fd3e116" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af43ac1f08b408f3397d52ae59fc8e0cf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae1a1a01b64075ff0be490de8fc2f5681" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a0204368ab7bbb0e767afe7bbbabedc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>pxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fd4011d019b35fbca7047f048211586" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a641d9acfeae3d0c117b1742ec210352c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f8ead574f4c13a05c6f234b24c09508" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5f29024e14e03232631fbae28a439fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a269edf51cfae07af52b48df0e7cc129a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a1380a8c48ba2a522b39068affc300c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00bd63f9dab2988acd6f373e2545c2da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f4277ef37b83bc86dc1a911db440507" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89c585b6608a3a776156d3b91274d0e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47fbe5b3f4d1642b3584d793255e6d1c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafec59d5dde65388109357dc31629203" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a861341a87e266b8ea7d7b6932300d882" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a975205c7b64e5f6f75131567e2eed3fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19e3cd60ecd275ec92a5ce44ae289420" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac0f176bb4f9697d181d65ce6a325657" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3449cbd72569f2cc3139763729a10c5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rcr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa41be5787af1f8c8a5b1be00e1e2b30b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rdrand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bcd218d9e3f85bd651aa0fde62111b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rdtsc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01570ca32fa10e6742dc027d114787b7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rdtscp</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aca29847661b4757f3739cda1eff70e95" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>relocCode</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a24f2b63ad71b926c53b267e56582c0fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>relocCode</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a813f374dcebaf99bd88128637dc2f24c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_lodsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7f56299d2be1236307901f5253efa51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_lodsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56150da369090b27a10af53162ecc002" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_lodsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdf4c8362786adf1b66abd325250d764" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_movsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f6d12cf30fc8b41c047ef4496ba9457" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_movsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6e2f87fc9c5fb772d5051cabbc09269" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_movsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9471851f26a731b9a0a70f3cf50b9ce3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_stosb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e7bea0f4db79b70cdcf396d1bf600be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_stosd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03f8de12f4cac87c6c07aef836193830" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rep_stosw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac45296ac53772fa2df30889d2a582b4a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repe_cmpsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6ea05290bca0b3deeb957e40cb869cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repe_cmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2f469a24c4024f4c28a83184d843bfba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repe_cmpsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2f68732f1e09ec7cb1c17a337d7658ba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repe_scasb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3510e55661f7a2db258a4f968e463c10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repe_scasd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0f0c557b2976e87e47d064f34343c23a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repe_scasw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7faae42f969839e100edccdba98aa46" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repne_cmpsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01d274347fd08664c3b967517fe4f5bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repne_cmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad643126d9c1279e3406db49822a47020" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repne_cmpsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1affb0f23f696c9388aa6cee8d3db24652" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repne_scasb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba93950d9c77109b588f956c7ab0f123" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repne_scasd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab54cbac88c9cd2885fbd102fe58c90a8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>repne_scasw</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a44e1d6769b5e0110570bde93e6780b99" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>reset</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa785d84603b3a06841eded0a7826b2cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ret</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9201a8c2b33b4dcb6498b48afa4958ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ret</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a587f692a56c42832d42c8ff89700edd3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ret</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96582e738a3b3f842066f5cc396e89f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rol</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8b6ff8e881c25d785a37d79efe487df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rol</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a180cf4bd0d7b8ea57698d7c3fcb37998" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rol</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9eee1b0da47b7bfbfeb1eae16a751376" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rol</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1b9fc89fc2d2e0ececc771b0009d2e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rol</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa68111e93771eac5720073e88bd4e388" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rol</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d330b4c163d961c0bd0af8b7d0dcab5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ror</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01f843b0643e4cad9921d3afed55e7f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ror</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4789ea48c295a889d2850a1532d0ce34" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ror</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac7a1098e4ff89b9e70231a0c9e347c1b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ror</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93c327a037591993a4fcc621e9208645" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ror</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0156f7e12f05f2fcd212bbce81f014b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ror</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab965f2beea33de472ff0e4822ffae2b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rorx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6b78312f4d974bf527ffde7978ed046" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rorx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36feb1153a81705b17c7654e6a22943f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rorx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac7d467f62b211bd6738f5382ca2b2855" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rorx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2950ef3bc38c3e672c2d2b6f75af40cc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82bd25053ceca089059fd379f0ac82ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a60be84c619925fc229ea9849c01118aa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c39878c7f647fc57fb9676dcaeadb9e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a398d772482d6c16c52a771a6b69c3ab6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc1ec73594cb14095e772d67f32483da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6e18cf5b501d1d019ed955745adaa3e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad398af316b2719010379f4e9f2a4c519" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ef2d060625be52e17c8c2f02b5dbb00" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acf903b02ed4b03cff4a0ce22885d01a0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad4a3dfec2ace0305ff7fa11664c536a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8f2d83c124460cd8e56f54586782626" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42b15924d329dbc5a66a76fb4c678051" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82b3b7313483523c04aa0bdbf5bb3fbc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8364b72851086dfad1f0ff978206f31f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52b9e1dba3b50625351d60990f8749c1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>roundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab03abfff83a509a1f678ac3c2ce21382" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a228c9163446af814da1bc32e7c10eac9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd52d16edd9ea70d950e7c861124628e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rsqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5807c8d99394de0e040d53739d3d16c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>rsqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0bf528c5aff4b0efb3294e3d4451728" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sahf</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1ca0222b0b9b5b90b9908692d265d904" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sal</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5cbb03aa2f48de75c482962fd3ebe376" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sal</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af214fae96267726036ea8c9df1fdaf39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sal</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a01a6ad07a9865592649ae5900f8f6a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sal</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08d0da8f72c004ce3636605c7583c213" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sal</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4eb448951ccf353feb8ddc620d769b3c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sal</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19bdf11acb846ded2b1337ed98c3308b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sar</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad67d83a75af5b7ae4d6fdabb1b6f5370" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sar</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67fe1e41fceb050b25a7a5ade03fed1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sar</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad34a9357bdc8d445c7b5c38b17a4697b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sar</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13cfbcb1a049480ce0208aa68203ed4e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sar</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2404cf786656478671618586f181f921" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sar</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac458a6a8d8ec453d4ec61c779fbf8e7f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sarx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18a032352917d6c774b268a8d2da4a98" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sarx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36733f68538df32814bc1240841aa238" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a374a8ab528200f3f0f207f78dc6da6ba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe8c04fa10075150a62d5de1a95bdd38" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5396a6dcabb90ec97707ff8845c021ed" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdbffb9b2301760fb3ff8208a9d8235d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8a89a48de2e3cb60db671ac28a6f949" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a422da96d778758ec4b6c222956562140" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sbb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab263c44d72267fa0080837dd54b3c761" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>set</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f4ebb4a06e56cd0487a8857f578b17a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>set</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeac52490117d9e58957ad8ac23975952" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>seta</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a19ce488699f9ec84b132df4251df60de" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>seta</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a561d1ec9b3332ecf57656fab01630b41" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3311bd85e83987ae038b8bc41597de3d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b9b740752dcb1bce2bf02ecf873b925" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9584beda3c64ef056a5ce3d0b870a00e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a045fe0099ee0847cc0c82b09618adff7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99af1034a6829e159343e61e1b3601a4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setbe</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a519af6a96788ff18e0f07739f8ff2f82" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setByteAt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f2d8d8a1ccf8107cc378e6734165727" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a94a21a51dc5c0659f839f1ebaf26a3e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setc</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1abad761abd9733070f7fc6085082ebdeb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setCursor</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ac582f476927910ba8f35d1a2a3be4d9d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setDWordAt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d466a06a489997cc687147d9068ed10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sete</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e68d587ac982ff9712d8abbba51e613" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sete</name></member>
      <member refid="structasmjit_1_1CodeGen_1aee542611426601efd4f9acb2ac89f346" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setError</name></member>
      <member refid="structasmjit_1_1CodeGen_1ac96640528ff277229ba55c51d013820c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setErrorHandler</name></member>
      <member refid="structasmjit_1_1CodeGen_1aca656dd1075adc8eb87dff52775f29c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setFeature</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6273e1adf6c193b9106c31b4a033abc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae78d128b35979ca7cc0cbf6759924b62" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46e0196332cf7d81d818ff1e47774b51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b3c742c2389994479870630f12273bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setge</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1aa4f6f950c09dfe97306c4370279093cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setInt32At</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d8e840cf89e5f3b7d64cf14d431128b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a244c64e19f3bbe3816f26b6d0e339d15" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abdf25142c5c98d8a27a8e91a0ca0a90e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ad7b643b1385d0be909fc56e46cc8d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setle</name></member>
      <member refid="structasmjit_1_1CodeGen_1af166f166ed4223a8ba11d1966bdbe63a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setLogger</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c675195c665584da828c713b453d0a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setna</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afcd75025f39f8033f60c042e24b6ee55" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setna</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8fffb702ac5ba494c44fbdeef37e9bc0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbf24a7b94ff099feb8aac986e3ecd06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnae</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8ba364100ed13df05c6b16124ea7fe4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a1743cefcffa303862e249ec8329a98" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a538643935678d720eba12ff5c3c9c70e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af51d50c386fa34d8b022524b80c33056" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnbe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe6be687e598d64697426a3b8d79e0e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129591175ae49eebd71e9b6439b580ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8fd544114b0d44b734c7bac7529f32f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setne</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f9683c8e553828a644d52aaea0dbd1b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setne</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6aa0448ff5a92162b21a817d78031baa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setng</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82572fa2c72a26d2a497cc3ae0a41ee3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setng</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e8d63a29e355eedcfff008376fcc2c1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad077cfa0be5421646efe6c6838d91054" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnge</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e7e8934930d2158a8f7d491c5dda59f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae19c5c079af63b439f0fb36b1cc0ed3e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae69d400ce7e89af52ceeba55a149d2ef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab86a387f7779d36868a3adbdd8319451" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnle</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c3f6764b30755355420a5cbad1956b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setno</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa09ba996e4f1d58c2a34ce27fd2dda70" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setno</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3ff410ed29488fe622d7f0258585abc4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0df8df97cf1157e8823c2402f12be4e9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9bc91b7a24aa2cd2c40af047c1e3adb0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setns</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2116b512a39874492636ff107bcd774" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setns</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa08a2181553ce721766b35cec852d9c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4f311f9a4c137bd70b621ee5aa0a6fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setnz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a16c31c2d9e85979e3877086edf20afb2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>seto</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1da210bc4b1e16aed47519d2149f1322" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>seto</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1accf0e32f66a2a9f6ad01c0a037c84950" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setOffset</name></member>
      <member refid="structasmjit_1_1CodeGen_1a06a916b4813dc544d7991f06093bdfc0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setOptions</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48c3efac9ee6f5e1d18fd2c5249f48e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2513b02b9d0d1b73db2012820b1629d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setp</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae38de9ab882139672f00f1a89a2cf735" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setpe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a009496981c68be204fae66bd8bd2b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setpe</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4401a3f2e85d7110384aea5b364ab64e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setpo</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4dbffc872afc5728296c41e05304866" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setpo</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1ac21727fcd69969a4995c05841c7a1375" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setQWordAt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ecc4302219fc1519fe965778496bb4a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sets</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4049b7b736c46225dd45fadefd826e47" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sets</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a07c171719b88c0e4a9afd7dd0b1bcad4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setUInt32At</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a87539f4f474e101ae2bbc7e7b814ef48" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setWordAt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaeab1b8a7c652655c46a4eb261774871" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab92feb10b1c12147e2d726a48b10d724" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>setz</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a504d5e2ba4a2f25bfc26195c8d721a1b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sfence</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a625cbf9a77b2506b0fb0d1bec7f499" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adae3ffb51af172a697caf277a78ea8f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dafb2afece7af354470a1b926f011bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a6628121bcba2010ebe287b3e706da9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a848be1399fce2abc63e2240ca3c654b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b4e6d550b7f5b6246355d8a3b3b723f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shl</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7773fd4212c470b6c3267724e2cba761" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf4f0b22a615e69658c39a90f597ae2a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad573afa732ceb01aecec01919a5f7c02" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4cd7108a9e31db7059cb41d7dace86c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62b47e3edae80cc9ff5b1ce638c3dbdf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c4c8a8c66fb1cb2617b4fe3d7d19cae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af68ed77e0722f5f92cd3d87664b18b87" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shlx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc3888ce0e70072cccb2a54dbe7a8160" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shlx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac90cd9a5dd8e8f2ef05a91ba2ce06206" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>short_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41bf786351f7b6caa71d3c972a34ef4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91a09009338435d4b8d0dee90a511ae7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03d3b29bd7457fedb758157f606b688c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af26b0edf9ba9fa6f12a61e40bcb90621" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8e44c03865f3d6387f5832c223f6c6d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0dcbb696d12e130d81e51320bfc1a7a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73fdeb741a3da855f8d7dd126f8d0fd5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ed51697df9a30d7a143127e11161287" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98dc718b2bd3e55e6fba153c76f0c88f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae1938808144ed5a01e93d4389ff59f7b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a50a542de4d645479871427a8bc851a43" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36751efef1e5cd5b204aa35fbf3d221f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93b6fb0ec370c682e27809781725ffb5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4157bf211b20a3dca7bcc05c116ae660" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shrx</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6998ebdb00659e9c3aaf658bd7fae8e0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3092224d2a77a47793eb5b0a5395355" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a636f13ee29e0415f6a363fe17230628a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a013a4c57172df2c51bad350d858536" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecbf65ca74e038674699427568b8d988" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae08c2b2bf29f77d7b032ef86e1d05f73" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06dfba2087bda9aee63920ebac901c2f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04bff5ba6fdbd6c07825827cb7707dc5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>shufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a714df0767868cca5915654b13a886ff7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7b99f5d7091810519ca3b5409d25c1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6179c0ec0bca940eaf5233694bfd41cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa13211674a92eac4daa8a72de36d6b2a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0844bca6aee89271e66032b3d5b194ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3294b0ad5d88fa9c996481ca7c29d8b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad63e5fae4386c333668529a0e3fc84d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a181db99a3e24536c02631e7f4b3f9b01" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec22c0778679f007780d41b3207c0927" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>stc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48beac4397c1fd86ff9d2c73e8866e37" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>std</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa433da13b7d68f7d08196d2f51662e17" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>stmxcsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a117a908a51de30b9cca7f7c6c506bb02" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24e46bb6c8bfac7f258ad876f2221316" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ba487e0d16ec482693a66179d88d9dc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a4018e1b64f80e9b57a0ef4f49a2a3f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99f1223892df9dc196108659b00c35d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a947303284b6a8d7c962c72fdf2f64915" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3f08e387a60389bec1878a939d66e34" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>sub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a599d69565902f9c87517504084cb23cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e0c94902d7c3da7c6ec46ef5e7f776f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87360277291db7b87e88c87bd6c8bdf9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac79401bac030b9ce2a4c0cb2e224cbaf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad069c1fc8e3285bd26909eddad107553" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2a4ec38cf4e876f34eac05bc3a79607" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af80f72a7f7853772165cb1f647c80536" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d353d7b0612d426e4774f92a1838d83" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>subss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a535457b9596539d18821acf82c33d6e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>taken</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7699830820a10662ca2485188173181e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>test</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac1f58c4a9132e07c9feae142eaa83a1b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>test</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6d444c7b331e561e7cc2e4f9290421c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>test</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae678d7eaeebc731740f3b7be7b36369e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>test</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9baec239f4c20af3ab32a46fab4fcd1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>test</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9852af92e4804322e0ad7ddd7286ed22" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>test</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a4fadd61fed061d3b9e0f13bacfe448" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>tzcnt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a125a139dda048635e5968180888d5932" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>tzcnt</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80330d759287846bf519e56347240eac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ucomisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8746cf5e5942afc461b7ccb5b7b76c66" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ucomisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13e4c6207799cea487f081c394a94eac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ucomiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc8eb97de7f4e89468d52c2cd8e92481" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ucomiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5043f0d900ff3dcfa5da023f055c649d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>ud2</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e177785d3def1330a0c7455a5bd86f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpckhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a520b66b0d328d48546eece18ddd9dd9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpckhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03918c60a16ddfa67c615fd6107d37ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpckhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae071c83720a29c57bdada05e1f7360c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpckhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5927198e0ab1b1b593106f77ce7b1996" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpcklpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa7a6edf658e1fd250ea9fb02a930bd18" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpcklpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6664448f7a3cee98a157af1273dbb51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpcklps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75a30ec7bb277eaaafe671c5b5b22880" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>unpcklps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5357d620360a9added9a800936bd866b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c17dcdbf6998916b1145ed27ef878d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a058443d78d9fcfb84ceb5909aada180c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a959a2b0ffe336885314910e47f5ef497" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c1fef39ec10b25b4a2bc0644fb166bc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aedd8afb645c8135b73a6a457e94c859b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4c485577d0aba4f975d3015e4d232e0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90e429de06827951bddc04d566b8e91a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99b83fa60044a6dff0b340762fbc79a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00563f6e3d8d5294869b87c165b88aea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a495f8071f5f2d19e12a5858a33753cb5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa0c1d41b13f40aff1cd8fba8db7226b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8c7f28a7f38d9485fbfe80436aeeffa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac81c6a6b4a4e00c1595476df096abf0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a363b50cc9d7f3ac0b2eaa0da3ece2300" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8990b83138847650280349db3d9d9a50" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98297c291d48730425e4923bb082805c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a49bcc1a9a3fb0074f0dfad0fea2ab500" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad17da2b87b3c361e7e380e5298ee747d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3cc896d9d1278eaf3995e9d2032d6e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaddsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af42ee665c5106babfaa354ef430242d3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesdec</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b7b6fcc6b1df3b578b516b6b0a74380" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesdec</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93931b2cbdafe61135978030c9eefc9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesdeclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad859b39347d459a54d2aea0e5285341" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesdeclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c8b13bb7ebb60d4d40a59b1d939d4ae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesenc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80a1e72c444885a5996ddca43f63aa8e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesenc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae46eb8391754b78da6895ea127c8e420" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesenclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21631129ebe23e8cf77e6853fca40feb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesenclast</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad00a215a942e3e68ba23f75213c0fbc4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesimc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56726126e595167c7bddd063f304e12d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaesimc</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93d7e20dfbcf907dea92ddd47e89a830" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c1c5bf73b048b2bc042e024519e614c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27d154e9045a4ef1cd539cfdb9dd5275" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87f486c4b799cfe4c7735b9f34507060" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vaeskeygenassist</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af587332d6552ee53d0a1e6a3c27f0a20" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a96508558e06a197d2fb767f09af117" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ca8785b09af4b71e2be553ca0376db1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d66afec0f0724092c81f886b32ae942" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae86c5e7815c0ad35f6e2210bda027dbd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab763ea4c512d4b70e4e79f9e30e4d178" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae23c7f7ddef8e3e62461ae24aa16f196" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0db0b75ee62983ecfeea5f0977bc0d79" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandnps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a881361a649a2fadc31a6e4d60c5e7ef5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3aa17c1b80084acb319a7b8f00db7a4d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e03019ebfd39d84620a02eb83218de2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6dd250adca7cca5b83cfa9d150daa66" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62edf60ae3ba5c6130a280d301a9a880" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70275ec210c31d60bb6f9938209a9be1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd74856d85d01bf5ac48f9317f33e2eb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a777d80e5d68b4af160e10075a56ee879" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vandps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4040da65f29172d4c9caba581be510fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a460fad5a63f5e83d8df7186dc219986e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8b60f6c896dbaf5ca34186251cba7fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6e10ec09f0a9b737c606f5651f671c1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a22aa894057f73e6879c033d9a8c2e67e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae57d4b9777cf35f8572b3a982c45375d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa94639afcad47fc62aa7a656bcd41200" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56a46f2cc03e1fa41d4ddc9e3adf2e88" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c616c19a3a65359aaa9dac3843655e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3a76a1522469c97a86fedcb707c4d1d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afef0875d557bff853f835f4c1bbdf81b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80d172d382e894bc7326993b05a4de1f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac6dc599df41a1f6a85777baf73dbbd2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3affb542f7a2219117e0939a8a9f9ad4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9922d81bf429bb89ef94bb397e8417f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1030a278d167296bc51ec573ff111da2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3a0dd094657279912847075683e6b6d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac3ce036a7d12ac5047acfba6cfb53627" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48c2c19f267369623d1a81e3af08cd92" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae97fcf4f3baa3a16b5022bdc545ed9b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecc20a8a930fa58c08bf0ddbf6a392b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a16b0640e3e79c5635dd65477aa4f3f8f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa631c449ba3d48fe7653454b296d0f9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc305e85c91bb50ad0e6a8432b6278b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vblendvps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa568abe7e8cb024df0cf28b114123bb2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0779cf337e22d1b2f799c1ed3eefeb82" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcasti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23a04fcec4002dc5f179ad2d9715a70c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6820b8d7c3bc7f0a21fae74427b29346" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a8e9a61b01b84f843c58b0ccb5db278" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3249a5f70d01ea083579e8639e795bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada2179676edb4a9acb3319993821a5f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a485890fb6658149b86498a2674dfc5f3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vbroadcastss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e3c66237101c34130222c17f5333054" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af839aae5011b4d90b1c926e97231110e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ba8807651db857b64e37af4e12cb653" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae7237e8214818b3f758195aa2d8957de" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5249f9d95fda6dc8ed150e86eaf795a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd911de94dac5d0551b6d1c806c317a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe477469599da7dff4b99a41b3bd65ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7611b0d55a0d2b54b7c31b00ca252d3d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8c30560be81e8b684d4b9250207dbc0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8ed388de8f33dd9936ba639157d00e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc5ad046ccd0a22034d591d20f96a5fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a664a252e1317b99e467ae98137efc27b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b491d42ddaf14b8282d830d7dee8639" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09bee4f24b246e4f4440185619e99791" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40fc8f1f5070add9daa82ec761a629a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecdf47fbf1ac6b88d134a6d64537569a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a1fb150b23a6015ae5d6cfae16cce0f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae32a55034e64b5c0913f1532d01971b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff4a28b92ab237bba6161268a14f6869" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41a47b3e2a2a6248addc7c56386b9dea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1214fe2758b4b29162b3a567c961c41b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87d753e473e9928c179f8564d9480bfb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20c4c897c60bf8745c2ddf2a6a51c084" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c7681662277ce42a7a1d43e6b81d632" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcmpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a244c8065498d17c13ac107990fc1b661" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcomisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af99c81c93b1a75ad90743dbb2ca198a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcomisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acba4e039e5e84d11bc85e3cd668f2184" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcomiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeac75604a388be1d7df8e5d6961a79fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcomiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b2463a7bdff10b6f378da9943a28ccf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43100133a3af98ef30fdc50825cb44be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55166f72c5c52930afdabf9bf110eaf4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbbb21a39bc9c3902f60045206f78795" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad45abd5d3052b223955aa9d5cb04e498" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab3cf3e46de964c8cf1d949bf3c9692a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2907f9468ab3db45bca9b7215dc57223" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3769152d0772062c71968981eba2ad89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtdq2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab416159801476c8c2323dc4323ed2fe0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e242f990a6c19bd1ea1f79c7e025bd5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4c131bedf7f88e639b83b4371bfd381" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2ae5e6cd668c9f18b8ee2e78b98bb29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtpd2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf22570a08476d1b5256c72d013da673" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtpd2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa87aa18b8dbd5d37a81e39776e053db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtpd2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5f87dffc9ceb8a89e11236b3b8905fd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtph2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8a4d71cd4920fef11bce8594495a976" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtph2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33eb3766a444c1c37120c1d66784edee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtph2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a550f6da984bdcfeed414d581e2f41251" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtph2ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4bd3f6a9e6f20a6d2be72c5f16b18654" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cb749873c67ca633d64dbdccf1e954b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a313040652bc06751f4502dbcf46c4d41" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a805a087f7442da547d7e3405da132e40" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b33e23f4497ed9d2fd07b039cbde293" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d36695e269b53ebacd858a3e4b6af2c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a020d109843867a064a3c0fe4cdc42da5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a715ec4228be92439b1dfa2ccd37e3307" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a246f10e22c638a9f515ffa08cf195ecb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab28bb4559fc784f2ca853458bc69a815" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c73d4f5795d5ed78455fae47e7dc71d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a57761077e6a0535b016d611cc9ab32f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa4468d3c6cb89ff748079a44711f07c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ef17aaba862b7af12b421ef23a928b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27f5ae9bff35404188b1a4e4bdafc2ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7b735e4e56514ecb9a45e4c1c7e595e0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtps2ph</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2fc777e9cbfcf960a9d62329607fed1f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a57bd67a2ed2b0a89a61635ec08b1c1b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a473e619921551d9606abfa2458cae8d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsd2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9c81e4de3b2480bac09a6e9b7b9c37e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsd2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8128ebe5e90fbdb8cb7cd3ef4e5b26ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsi2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75efe6362a3c0cedc837d90999738fcb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsi2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae870a5981aca28202d370e077e5d7b16" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsi2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0c38e270d6cbb1b05de2c8775f57f86" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtsi2ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6baaa52f06a48e7c62d1ccac23834c4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtss2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae77093b55c1a2b62a2344d8aeb57394a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtss2sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9ef36d76177ab12df91d1edf3bcfb61" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a73adfc5dc6b83f573422bf390c06aa8b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvtss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1eab2d75e6992ccde8bff16fc18852f3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6684262a656372948931c278086e5229" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96201f065c1e3b2c793b607855ce6e88" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttpd2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a37f259a33af57ef1387edf96a396ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1538ff62fc9c8ac350804f3a74299e94" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69c348167dbb4d69c8a5314dad54c102" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acda1f67dc4d5b89b5294baff788d6815" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttps2dq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdb76ad2caaf1911f5458ce2d003e7fd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9118ea58642bfb687d6201bd7eda1884" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttsd2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a395daa3c7700c8667309455a722945" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8aedf190de1176c148aa14dece30d015" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vcvttss2si</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa94d94e37f63c9a2d312aba975e3a350" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5b82e0ba75e39c553825e0bbfcfe819" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a903bc573eed56cee786d74ee390aff13" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6fe38aee9fa4b4059fbb84535964849c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b20374681950000d431a83c730e2b85" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a734da053f3e3d86805f5749ffc34a3c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26e57df494bf86c9b95917b69fafcc75" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a66b460a5641e4a30664274475f32c67c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5008e6564f80e3dec8f2201876e4ca56" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa212c77ee0ce9287c9c3d5f421bfc93f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1add62bdb1a55fe93f798cc56c7b45163b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03af2ff08f14313b1b4fb5a3592514ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdivss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae52270bc4c81982f1c0ba4ca30cde864" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af46ac2a3241e55a1115dc956f4bb2b74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab174c19981fb60e06a8801f199e9abb9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab1763dd0e9c7b8f298220d4ceffd13d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdppd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a9d3df2b150de349c3a9352ac728cb4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21741310029eecee581200d6f649e2ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17c1b8ec99de74300d74da18c71311ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b7af66dc81717550102f4e4cbeac2d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bbaf9f7488204c7aad4b5750ac43534" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1affc90a3ced782872c66426c69c45e63c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abdcb40c17ecb6038492859ddedbb8466" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb45b43125a6a0f498bd4255e3cceda8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vdpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afac68f01b7f4a8ace86bf8da451979ae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2ed1b4e8c439b7f58fa4324b698692f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a548284c0eb42c462c3847a016d1555e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81f273b759e424765fc770e57e15711f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a572496447ac45bf54a6f8e0e686428fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextracti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56285296ffc184f21586f346487e1877" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextracti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5014b637a59065f222b084c1d10b889a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextracti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a216dba9ca670af096d9c50d041e9a6ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextracti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace7fbde875c262ab6162c82a4a37a2b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47ac77c49566d44bd74cd2bca23573da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab0e9352239d1d9917f2fe2d325d25d9a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbf5eb4b965bd90f27b3ca8bf1f5602d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vextractps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52a16407ab67844cb66240c558cb62bc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79ba579e4ef05bd2e0d3347559898220" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0eedd339e5135b3dcc6884ba97146223" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b02f2a974303ca62cb9027f0b9cfdb7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7913dd931a62907c3cc7c2ff4768f7e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d73fb8872c1459c3f73ff04eeb8574f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30d1649db71be33db87f659a18f1cb31" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a884f58b17f85306f6f2c868ffa65bf9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb67d9bb544b317b495f9d33125b56ea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04f5b3d0a5ac763eddda076d0b3641fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad09d41df32bff8d6736ad8625bda415e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac059b6297c227afabb4a3360add36b4f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5385b9f7f38b7a359e05cdc2e24a6d5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a904336ff61fd3944a3dd93ffc145fb3b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f44dff35a9faffef5dcca1edb9f14e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77a62f6d1e8ea3803ad64f75d43cc0ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca0ebf9a6bae2c3d952794561aed3d06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a568443868ca94724624118387162a252" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5caf70464cb703b4906031a465c59156" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d7d5d59aed91baba3ba6ff8fd24a147" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0c4746a12844fc131ec1bbaa255b5a91" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65503cc94941dd4ff809870661e5d0c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb350aa887840ea1cdfd9a5995d4cbbf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a805477af0177282567db318b6cda6e9a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9947a1d892cbe6172bdf12fcf2c5fd4c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abea86a50eddf35cda10027cdecdd89ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7760cee4f686eb6e7c9bffd6f245a1ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada43748e67e13099123ec7b3e243636b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a121e61e624503fc0be79bf408cb96ec8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2eb5ad4dc43a393e1c1e3857fb2bef81" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2bf7e634b2d7f43941eb097f79a0323c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a88e57f567cd3f67e2e411d8b8395f923" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeba5ec9a21dbc79fdeced9b795047191" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a84bb2aa74e9085de1e0a0284115edd6c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62fb5127cebc2d585084e836dbb75554" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab77c576c3344de531e55f29546ca9948" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmadd231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55a9747c72a7e8e06f48f222aca55a61" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fbd8363300d4134a65f1ab8de9ae36b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74f05baffbf8a6087b132857451da825" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13c078af04ee11321077568260389ea5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4428c631fa013ef9419ac2f697559ac7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af74c0111f659484460744ab1d4574ece" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e4d2a3e8eedeef66adaac6b1b8a9f05" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae08bb55963f8c8bcca41133a8d2ebf46" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d5ee1e39994e089e0b081c382701872" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a53b55385f0b5c6d6955e4841aad99ac2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa5f25ef1ec13de8bd53a539d3af81b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9742b8f01da53f932561050be5e8db2a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a29a6defc02984a7f5cacfa5c6ca30f8f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab39ceb0b9e7e3b60ab20870c9fee32a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38611bdd585bed9297dc7c6b6d9710ed" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5dd0fe7e11ab07929aff45bc7ad4eaec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5fb6fea86ea985e9b34e678f2717d30" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad86fd8c42e590896ad08180068ab164a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1b9d5825650ddae174114069cc57c5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02302be19ec368b3378fb14c0730a48b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a60119cad7c1f53744ee2ebc5894b0a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aea2c8b0329a259cb5f0a0c7dd78e9c3a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0ef0679cab89b3a461d7a4f3ff9f490" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67ec3a0f362a021f10d8da123fe78f7e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmaddsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae32d0dee01db306a63198efe22ffef5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93f24da509a6aff063396b9ce26ee4a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1984e3e0a74dc09b125d5701750f9acc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5ff5658b793e1d4830499bf8bb83e53" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9182270dd50eeb555011e544dc209b5c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad26dbf022d9c9f66e0e322fcdbb9f232" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a470169d1184f8b32be294d2261d60706" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85dc84e7309f67356baed3d135a57524" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac408074aa7663c955b47fc0aee78f088" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc4763da5ddecb1acf46968545acd9c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8a32421084f279c6b533c7797400992" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a259111a644d467acd516c974bb79f490" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae50e8d1ef9656f630f0e482e4791333f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa5d9e7582d49956fdf977850d4bd441" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab047f3def52103c1794d55dcedb643b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac4a91ebc95b4965155aeb0108c353e52" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a14c364079444ce27bc4ec3c6d8cd5338" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e27ff8af5aa7bba63507abf395f5012" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae616f25dd83c62420a117f7dc79c451b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af3cca5eedb5218f83d58681ab8b7e5e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcfb1c249b61abe932c35d695ea35fbd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d8af6546c69764c2bf7420c28a616ea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a089adedaddcb79461a91dd601dae23" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a182904d77374f09c140f8f28da9f67e2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a121edd0df40351427e64dd3a1dc5f24f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed00b671f8c293e777702f25d678d813" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a070c6f074a470c9311d4ff1c53e23ca5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0b74df15b677bfa4223c937b1b0edcf3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02ce88babc25e949886ffc74b0796f9d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab19c1a7e0eaf133b0db891b82daa21c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a32d31f7ce291ca27d37868ccdcd67a87" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4da00aa20452a362802561a5b42fa2ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a736b350b5c65637e05de05c44509eb17" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31788bbc11b55086b17b58bf12d5e865" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a421ca084043b2a9bb7f89af529800f3f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f284b56bd7e41eb3105531c4ef0f882" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsub231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdad9d0a397598662b030a66078db41e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8e8e39786002e597921b0981fc3c564" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d7b865b30c34c41bcabc91ac0d245fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a815af3fd09c3a964fb17df42c6f6c327" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a237cfeb65e97c477fae46f697f1711a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae62cfac4c914917f853e662f9ffe7cdd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b450a48166602b80e7559bd77dab001" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f7b4165bdc7bea7200f16fdfaca1b10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a276bd599e6698d0188d7f44f054fc707" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab37448c073702b5a78a9cfb3d7aaf458" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a944afd46b5943de0d44c36f5936d4f4f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2da1a1e2af3578504f493ca6ac738cb2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07cabdd063afef9163b51bb35d7c1b5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6d975c0bb848d555cad05075a6c6cc4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67b056653785d7ba097d4c640b3fc97a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ec4399dde71098bdff33e876b8fdb5b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2cc45f52f2107c10cd63380bb5beda5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85041660db73e46a92dc1dd91c9877e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a226fc37a54da98347e80e2deb8c5990a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd2df2948d483fdda1e630633711ecfa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c0efc615eeddc715260e037a5baffd0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8a41042578bbed72755cc3002185889" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04ac15e94452a4006b213434e0f02aed" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74518b0db71c81e5567bf7d2e47c3596" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfmsubadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a563796b3bf72e8d926c3d84d0fdd2e3d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a083ab2a05a045b7a4bbe56e14364fe7b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2f40753ab18b2cd58b9293dca7ccf76" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ef7ba1f222b614d70d3b671b96424f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae71b1adbcd49e019c81b5a2a17ae03ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a367653e15e300d277f5f6e901fe93b23" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a192881423940a09fcc03fd81ca1b48a4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabec5daa32110cb2f01f12d68af7ebaa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0780268ad20766d0748fc76f88cb5aef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a509800606ba0165877f9d861bee14bc1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4abb9759bff6ccd56081552091ae30fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80160f29e434c656fda74290972da485" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb3c621b3f86515c6338f4e9cf847899" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af83357da52ffb0451e7de390b0a07328" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa95bc5b73d5e1990c90473bd9ace0dd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa628af81060ebafc127f85d264c7dcd4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7800430d9d544de16bf5054a964a053b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38e1d593efa5b109b5c955438691ef54" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10f40f8e9efaf4c795eeecd5bc5968ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa51d37a9ec0a09fb654322fe97d22d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0298519cf0469d38e49ae111eafaa1d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6fee21a704fba06544773cc96aac96aa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a925b45aa3492127e20fe4874cd01a257" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8a40b651aa7b1a01963dec80c6ec064" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0448abc432074d5f500d79f87b1d53b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7c6fee0e719b756c517ef3bec12affe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a01e9cd0d5af3a682f0297b48a323fd3c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8a02851b7f39785b902fc0d66085c174" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7138f1b6ff25cf454d41a9d7d4b4c3ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa649ef67f10f18024d0a43d788d459ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8ceed3d54e8686b33201478909a1983" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0638fe3b9d59517587f7d4c338ee9358" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06a893e6dc732f611b41dbea76d6f896" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad72e2bed921c24141c70494cc05c6e6b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a322a8176b7a35bad8e4825644e1657a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1189ff81e8a73dcf0576973da6b29c34" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmadd231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a40c2f84c66b474f3ed976215bfc039c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ebeb3d3a5a49ea43b79efc35d304645" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf42dd9d8279828292afd5a13978daac" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4120d30dd0ad4754ea22c8f883c28c5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab118ce9fd207b67c0c4dc1bbe20b9e44" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a391caff9128c45ecdc70619efabc72ef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc297febc121b78045460cc42f05ffb7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac721211c1597b706e4864c5c2739c368" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa24b6c9b4d267d27f22659b6d24bb432" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12399d9760197c7a3bf923fed17f5755" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25ae77304be46459e037c63a7e0027f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1dab219c929cb0d7928bd6e0a352bd6c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub132ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a12d416096ebcf6521b1d8c5a3314ca4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25e5e3d5bcd15366f47fa94573edf035" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac983364209da576fd3339561d1ddcd92" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad806026ef2b9f6e3ddbfb6c5317c4be4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c0b76512be1c92550f6e267c62d019b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5be7d87c38ada7b213b3a5d8e0eb063e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec1b5d2e5cbdf366119d081e06de9dd1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5caf2611045e722fa4368c6cc15c3b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9078c923bb3649ad5d6d9e60943c958" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad26aa6a3189e1864681605dcf9c50751" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96e996faceffdabc2a87f0803b8ea90a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03e862c949fded50dd201d03657f6e2d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub213ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae56dda2aa140acbe0983369974d71beb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d3fd3d542f23337945f2aa68e65df35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e9f6a2531f61f797aabdc57e840fde0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fc844c8352625915043531429390b18" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231pd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2816cd9e2219cdb989af5f55f8ef527b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d9a05145ca510129ee87ea704b8a08f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade62989ed7ce93ca3cb961a127dd98a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad75fe7bf418581ae31dc1cf74cc67884" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231ps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af80b31fa34f56cc121a2bd0ea519cfb8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1db8f4c927482781d2dca51b50e5c0f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231sd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1677135ec7d8e7e0b216f7afdb0b0fce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68ba1b85b96c84e66fdfc2944e216169" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vfnmsub231ss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10ef3482e80d8d057d8630114cd0fd87" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherdpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7fd31fee33a4174d2041165c027d0ad7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherdpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0a2a0db3a575b316d2fb7238849ebe7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherdps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a2d06ceb400dc14ef4c0f6fa6730f6f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherdps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0d4014354cbf835624ca5a9d1de8754" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherqpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0c118a5eeb8f2f7afeb41685efd6421" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherqpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17891d6c9a5212a5d7fd8a737648de05" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vgatherqps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70390c74656b21bbd6001e4359ce265d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a39fefdff135aeb4230401e2ad9d6f35f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75a79826e9ce814380a8209edecb0a94" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28a272d73a879c730dab6abdd18c5d64" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af04f32ad25da7ae53b85139fd3bf6988" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf16c610a1324e02fcc9aee37c62256c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5845c34d6a0679b8d8d43a5008da9f45" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaa0d5e84cdb77f1cebf76053ecd1ec7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhaddps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a131c76f54162aba288ab2a2cdcce2ddf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e65ca99439f5a3114f68e14c62442c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a59508accc13d1c7d72e544a3f00394fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af59f1a2167ab78358d8b8ab22d080256" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27960c629064c40a619a6b2adfa7ff60" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9b05fd38c647894924396f8a3ed40d37" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c249b91a754ab6b28791e119170f7df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5a7603319266f89f0aeddb97d2c38113" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vhsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a129b6202ad0a3d3e47d1964e3cea0e37" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecc30667a637ca61961cf45cf0711878" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5219a54aedc3a0bf7e27bfafe669db6e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a598e16b50a6070e5b8e3fba854d5b8b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertf128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af76c03370a5d5d60e4d743aa70189df5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinserti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17fbbbca3d52a0370cfdee5f0939a280" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinserti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25826ed73c4ad5b664ad2b074c010820" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinserti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c96bc77d9bc586c8a363d86034a2cc7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinserti128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33bc97eac696510bd045a1a527c39c6c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a813707d7be6b5dd58667b54e68c4a86b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af78118acab3f1a5e37b9eb1d8884d0c8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af3de3e3afd3022c2ac941b06eff846d9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vinsertps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac70eb41dc5d9cc5f2bf9638c039d2446" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vlddqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a78b060d115dfb520c6b4ca283c876a5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vlddqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0db26d6e74825b859614af607bc431f6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vldmxcsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc322fb090605c1b4293076e662a23c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e46c856248098ddac289c9fafa96015" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1d9883adeec6dbb08f4f8ee4972cbd44" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acf65b311c0a66da3862d3e67f4b5975e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aecaeb4be727e8e9ce62e17e88ac1425f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a341d3e4a2e8eb785b90ebdd6c38f78aa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacc01ed9b63c68f366a55ac5fc6f8ffb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae46519bb3699fa15d8c0042895c86a5c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75ecdd8de05e9e734befb78c843640d4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaskmovps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2941ad27354ae193ee3d322404d77764" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a573158e43c65c2ff14c5e0228ac3ca49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ae19fd5a95efb56352938fc15ac47d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afa5b58eb8a2e82a25d0069f2039579b0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3adc43efc504859e632cf4d0ab039c34" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec07c80556fa4e5a4a1f2e8b9a608513" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a00a27def8191255bd63801b666717653" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6007be2a83c66c3fa7283b2136ffdcc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0017864f44e465325d6ffc7243e9f5d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae92b7f13d6586ba6e2dcf891eb524fc8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9b9682ebb6e8a5d1b457743eda63dd3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e68f3d134e746b2057765270a106d07" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmaxss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab79217d7c8f60ff31562c25189a52bf9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0971e7434fd21d2324123aad688ab6c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96407f92305c6eb0883b23c6ff853ee1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2ace697000377e96bbaf68dd82b3e50" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43ecc186f2d74ca1fbf158709eb643c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f83763cfc8ac08041cb53127bc33f35" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec3d991ea97b7da53626aa56cc6c0313" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab391a3c73194199612344917d501c423" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3ebb0fea7aabfc8d5ab01e2e2b16919b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8500f044cace40a65ca601d529ee3459" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a76e22daa7b672c2083e20fa4a27333f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41108cee9df3c2431b3b0048b8ddec39" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vminss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f6e00b8d2ef431baa211ba3868307b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85b0cc2aa378d2c03c06dab7cf3ed2e1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8271425a309fee487258efe400deef6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43da7bc53eba4e479b3d9136f4711160" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2bbad2aa79470a64d4c1cbf3e242062" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af47edaf56e02bdd6c761d964ca0bbe4a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovapd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a50aeaea8d08b4f25325d4c7bbc5a218b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0de53d70e7a0963b30156a6cf4c2054" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec7b4bb44055cf439e43ffed0fb9c807" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55e678d4c513d71052a7beb8f7593417" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a247fbe72ca6034df042aa42d4243d079" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec0c878b98e1b9ef158f2644736a700f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovaps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab7bd1856dc1b5a62a3a09b1a3167403" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4c9dd1df05ec6cff6a8f26dfba0931c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acac89855a7496b60275052848c269f10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2f5538a813a58063e735b6f9c1fa864c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a923bf3a84cd81a59cd7404f379d2b922" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovddup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac65e35eed69e759518fdc19495c5e8cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovddup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa69065c71a055a3bd128bb45ee1413e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovddup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08735f0423bec53351c058c34d1a64d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovddup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1accc1b355188140b442f327ae78ec287f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7eb9e816f901d27a626af53f8e2c9f98" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1cace0726c7bfdc4e46a306240c8274f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61f2774b7538a8d2c91cb1eee1c31124" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ab95a09e2221d1e4d3073f53273190a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac04e52681ab8a6872d97bea5ce019fee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a80f3f5a9f4663402659fc47ee0218d4a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9bd4a8db3a498757b51a8ecd5f92a855" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbbe258d6bb3f651394dad3cc8cf8665" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08639346d45f4e3b03aa77e189a88e89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3eaeec84ef51504a69e8435a9eed241c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a214d300791500a3180767565e0941422" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovdqu</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1fa244399e0de340ceebfd08500e23d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovhlps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aced4cd42f2a727569d073db1b04b86d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1ff342be2b23d02da4529b0d13d34b80" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c93ae6198c33fddb16d0a65e95a104e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a977023e265764c35d881a267cdb5ee4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fd46f8d7e90438aaa40a51ec76619e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovlhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d99fd7df3a3936dacf58602158bd3af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovlpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2a3cfb9e76b4a74127ce1ca1fedd114" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovlpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab758292f00cef26e167a0f52359037f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovlps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac60bd70365051cfc74ab79372306ea4e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovlps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20ed7e7a384f483527e3ec743f076c62" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovmskpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb86f796930f9e4a7094bfc907c113f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovmskpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6bf4dfe0d8b01d56d6d81334b63918a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovmskps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5df14c3e2a8ff83ad2e689712e47d1f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovmskps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3de6c81859139c25066d65273db7a40" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7c7b63107f46376d37ab546355632ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ca4dfbd4f862b98e1df7bbe62cb544d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24e79937ef0f86ffdfb9a71be9551b8c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntdqa</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7ffc486050e2d4f5e3f398d2b8d74be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6e2ea989f6515713ef38ed073d59732e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07818ffef2351a5802f2457479b8c498" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a193cfea0568800d709037a444218ac12" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovntps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae03181bc80fbcccffab7b7f303876495" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a98a3732db1c80c14dc9ecc5063e987f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a07fd1e3929cbc463f379193e2794a988" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c81e78aca48de2cc7f81b6d7bf2737f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7625cd8b9adac3f2a24afa88704a24fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c8c3ffb2b7fe3743553af11455d5aa6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa83850ad524ae2b87b9f504351754e0d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovshdup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83b705dd6820cd7ec7e1092059b5f129" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovshdup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9ad43b160765c34a06ddcde967b30be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovshdup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a316692fe5c6b2e2cf7a56f5361ab1b85" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovshdup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afbd699a465070335aa260a54bae038c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsldup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff4394ac48721358776a1850bbfa6c93" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsldup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6f2bd898dcf5af70db9466bbe32867b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsldup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e6f9233ad4e4c75ba16cf280d884467" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovsldup</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc04ac758f0bb18573aafccc17ce9c5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4d1538ea6190c89adef6410bcbe2f334" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c49650194a803752f40ad464ff92275" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a506ac39d8cae7940d3e6a12230271766" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca0cd137953f99174da8dbe2522566ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a676ff4accda55aa1f0235cfb1788fe5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6e3cb77b94407b9971bff0bea5fd3ecf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace178944d6a752bd8ccfc50ef30b8ff0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7395f2553cad5fbe12f657a6e95f7330" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovupd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4733f8d0e0eb666e27e522833a093a56" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a056815883cb7c368d259d04b0a57f306" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a011aec6cbf105082f9375d500d3655ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93d4393c9cb804fda4b087acac994964" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b38904539b42a730d56d483a22687d5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab64db9ef24da43b6ddee9e5917e36b89" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmovups</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87c086d601e5dbb4352f13cec0f033e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6303b83585121a3971464f30552475a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c57e42db0fb499a5d8fe4627b8a6e55" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae151013ac49f59924fcd0b053995fa5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52c08e25871bf66d257c85bd715e50a0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05b47890f415da28f4be3c3078e7509f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2c65531f64bf2bb6aab1f563f87a2c2e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a44146fc60d7ab683643e791a6e4453ce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74db1134b0689d31534d8e4db3bd5444" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc89d28cc426f59f385333aa19b9cdbb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a660dfa9a7d9adfd1ce3349e7ac4ca1bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6422430a81c4a50d52117ce8a4f21800" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb219d129fcabe48b8ee688ceee941d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38abdcaf9ff78f9852cae160c2c4faf5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86d985a08e90ff648a184136abb31142" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3306be807c733b750f86db8704961be6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f342332f4eda1b6706704619d9c1d10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc00742dc9b937e8fe142f4526a55100" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad997c9f268172e653f0f7e54f3f102f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e7f5c545a29d688a3aa8a06efc4107c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vmulss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1097a563e8977d33a7d4672390e21dfe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa82600c0b567beecea6107bf3b298f6b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab127746f0a482f95f1a4264df643f11" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f655c8cadd9fcc117855b96cca745a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43b996b677b5d223bbc0ff1758929b72" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c2be64f254c0a5e15f7cc4811b34fd6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a34c7a302b04dd0bcbc1bd398c32b6ea8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcf18c73d4d942070a04d31a4522ebf3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adec7879116cc46b903bf559a4a44e659" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0d16f9963974659215343a4b0b9e744" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4c8c03b5345031a7ef6f9d65018ffcbc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab067e48ebd097078318ad6f20248385d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a14ab4de9a99ea61ff94a086a839753d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36cc88b6edf7b781eeb406a8b2350332" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35a374d0f48d99501cf94426b97252a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26cdb3f3e78109d7d06bde4043e1113c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0059c1555aeb0c379d807a099966e62" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92494eb0d4555550588bfa3903074f7b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dcf066999f1208692e8bf6382616a09" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f1d818ffdde8aba5d355143368dd117" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpabsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9297ff4f1b239e52ab7892cd025bbcc7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0b6327040ac0c13322a4960e2c22a21" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac8e0414220bdac02c3c574a6d751e7a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03a7b3b32d9fc96f55c01acb02971aec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackssdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad39896e096e082df91cf1f0e768dc763" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpacksswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa9238d5419918da211faa09f89a8d6a4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpacksswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf17888cd90704267cad73ab14f8ef24" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpacksswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3abf591b195fcb128df8f94c2599f2e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpacksswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4121c6ec10d3dbcd4e4b6ba7355421ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackusdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b940bc47c6597af4db2d40da6a87ca1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackusdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a411c288b80590e2c22b1def40a0fd7b1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackusdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab79115307511179d4e4226debd1f69ab" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackusdw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae20968d262c573eb06bd44c60b2444ea" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06f4f5a0164154f424751a7af4a6911b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83aa874883fdc39502252b68267592cc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a14ce1e3c948abe19ecbc77d02b5163f6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpackuswb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b6a170d949dfacc310e280317dcde1e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27b937a5264ad4cbff5c9bff2a3b7af7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae7e69155e1f5d0f5ba0a56cde3aae387" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa487221787f7a25684b83b83342feb4a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac36f6dcb93c568913289b1f438c48369" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf4726012329f6a082fd88c599e154ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17238dd675930b173ced5a11cd361f9c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa765cebae19191d9848185b7f88db6c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18f02787bd7a141a89e21e45b4cab9c4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10df821b678bcaef9474dc8e07255201" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a494296044af06408655c123d9ff9727e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd92c2fde971f7425251196a0f6dd7f1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6aa4fef918fca7ba8a542bd4de9bb8f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a849bd272a641906cc3b746d2ef723817" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac7ff75fca15cdc9db06ca9b1e49716f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0af24177dc40b106623deddefdc2eb60" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5211172c0458be915c1b566429d7f5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a354b914ca696bb2ca103e3b151aa0e42" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeee1d1a766549225e5bcd14d3bd21455" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17dac2d0ca37b7f84a5f9030b5820d2e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a99e45d31d06cb6ad0b05a7a47199850b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab90e9aeea9f49c5f7950dc1e3418c1bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad7323eec346b513900b5fec5540ea958" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab08e04f2b03774801bd8caf1a1e022c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e17ad7788ce2f06c08bc76636ecfd44" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af053d15272aa11654ab64bda0324e1fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a342f383e27367fa6811c87f6fc6aaac7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d3604a17abdfa285a9a9f05a2e5808d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a910da9c00f2db58e0a5765f6f28c7081" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a279f0150e8b63f2e6c99b6bea8206e09" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4364abe59b802fbfc335b4fc1f03e8b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a746ba59c7c4ac1f83515dfefe64240b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2deb35cc79b761593e8122a6c3a90ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2b1fb5c078e2dac2d3f78ea1f72929b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ca657c16589b720e2683998045e5a7a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a234d8eff216bba38c0798e5e59bebb0a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaad46ef2dddf85caed5233ba3cf5cfa1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb850706dd86c11efb966cf268265deb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85d575dca7f473afbdce861e4d1ebc55" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f971298e97512458ddbe1dbf34f4bba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpalignr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5aae1ac0fea7fcd808f5bd8012d7b348" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5c45eec660f92d53d8c7de1e7721d2d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c32c8bb02626944bcc082ad7d07a552" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1275e95a2089e7ebc0e1cfc434838e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpand</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ff4dcedebbaed803d54ac75d34503b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4373eefb642cf3c3496df3363c142edb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2cd68580b3b5ee457c7e72fd536cd3c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae68f0f3a61439f85e4429553166c7d23" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpandn</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d1eef82a620bcb8db80dac8f1aa51fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a280a1ef10c13f2919d4a0f0679d7bafd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d989e0409c93a0ffd1c6e9109dbee86" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef5bc910a489e09762321dfb1313b434" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8c04212b30ed65b4963809982292fec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acc75d81f1958bf58c2c136583cae2a1f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f607dbd222b84e7e845032fc6626ac5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfb002d69dd28d52da9ed40dbadaf9bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpavgw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a260234cb03fe24336124e519645e4bb3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac11f477617aeeb8dbbd5210c877e3a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1accd728d59245542ffb9c86af2cc48ec9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5bfb60ab8147c86ae387251c0b3746a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae49527390d203b00d4a6cec3715e90c9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2268dbaf898e6cffaa0db469a5265820" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25ff8babd2524478771795e438a34662" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77ede12985d079e7291263b0c72d79f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb2925ec81ff1e56f581f85906efa844" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendvb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7f70a71e1bf0023c3f9f8a99fcbe71b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendvb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae86dfb37352e7c4163ab2938363f8bdb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendvb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2f30a92427d99811766e6c7dee63b51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendvb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae75302b1edb76a201898ad3ddd729f06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d517ff2fa9f45f38b52caa6ef19d372" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab94431f758429ea25ad3de4c6c6b8ab3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a57b58da39486ca9511639dd2630c139e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a83bf8b226a4ed5ed523f79be10d1bab6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0192a7ae66b3b3e18dfd9808eeec399c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b9ff660f7061bc691d45c8795be124f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa3fe74173628d3964808019bcd99da99" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpblendw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a859a9467d4d1a7c4de918a94cb95213f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27af0439cc61b9f41ee47c6f92f30738" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac233ae6faea72c7698d3d489a81ee3b2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a034c2248524c0eff113a8421074d655f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1591c7441c810d2aa18aafcad6ede52e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e473a5b7813b3e2370c68d23188448b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a219a5915a8b0ecfaf55b5254a25566d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5fca3d5592371249a25114c77255aaf7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ed1b73192a8da1293c733197279dbe7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6f2a82193c4c4f0977978866b04f1a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a913baa714e35083f38cadcbc887edf47" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d1274bb1fc74beb4495ccd858583b68" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d1ca8f2bd0b6c8444433b5610894a5d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d4b1e6986292a081e9cd6ade23973a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a660bdf054e4ca68df2e68e86bb39f654" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a394c6a5a546e4706cd35d28c8884c75d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpbroadcastw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a45f8bcfdca285f9bc7c8c9b8410107c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad45c2d1c0f7f2d24948f5555b05b6faa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0725ca9d5ae678443aa7efea6eb0018f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac41f7689dd309cfad2368d1714fcbca6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpclmulqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a875f98a0d4f3e97f04245c00b0cbc330" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a217bfefcfb869b9c15cecdb877d1be93" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac66e3002e2b74428dcab69d3625c5bca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a987ba605390c68544224ed38071e0316" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8d7dcff1e168366313f870a8eba347d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a597a11f52f264826f13cd9b90a43d832" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a271ec31eb69fb49efeb7bd0448deec06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31b698550e933f079a2b9acfd99e48f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a51af666bb95f86b402b64009539c651e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4a359e56f169e5d1a03e03cabfc929ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a733dd2c5a48760bca984a01d4958447a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a189652dadb294e21dacbb9657c492193" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8aab2ac4983399b142405a70b8646128" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9e65cbf6fca4c0f9e9e14fab95c34cf4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a269795509f289f63b8e4797d6ff5e4f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa76f4a8515625d372b44b55650c156f3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpeqw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f45ab8a7083bd17c314241bf64159f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9d3de53b3225afe4e23031b290fc20f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68ccbae22e72c92c73fe955335562cb3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a70c65e93e29f027c7860a31b5129afc7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a16b204dffb8ff5b06dd75400e0d9b9b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a179ebdc0015fdc5378312be157fae66c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f4a142251351a502425568f6be0da26" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb6b0ea435539b0fa27ae509f120e13d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpestrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe2d78716c34b47ebd7560aca43df205" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2302729f754bc7a08cd3c580abfd2683" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d86ed9988aecb6651d2ccf453f66f8d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac82c9447398f23309518672a8624f6b6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a646e105f46ba20fc05695d61d79196a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3bb477ca2ecdc6f3c9309d89219e277" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3f81553561972237341da53889748716" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6977573c9543bc56378c62cd660a3c4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd6c0e43e545dcfe1cf9cc3292685da9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a82a35bd9a4428fa59ff0a6b68d97bb80" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a244d2fbbffc31664284bdeda9277e8c7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdaff341946a736d4ac25b66599f4640" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca8d7fcd0b18f89948bacb8ced67217d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43250b7da4a0185a0c43c595b8c727a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4e36c14551ef4cac2d104cf523ce7207" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1715e7e4bac30cd8df55bf507238d2c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpgtw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3dcb91da1a762c91038fce518342a05f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a790587b83fbb2a778b6a889557af247e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab95ce471a5630cf46563efa125cb020e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6daa88d712dbd2e9f5d1b69e135179fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistri</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1affb8756848462e71fa011f1da45b6228" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28f79b1d440d05953cc6f4eeb238b0b1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acff4631fb6ddb57a553a1eb8827c3157" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacbbcf3d412ae44066f9fda2bd6873be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpcmpistrm</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd01172fb2ea917effcc9c0492921578" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2f128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4bdaacf9b152055092cedcb6597f1afc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2f128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa612c269c1f80e8e32c2863325aba338" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2f128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13e0bde27077f28257c9ef002de0b658" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2f128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95de9613cf1f419eb9096d4cd4638e46" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2i128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac0f8b958560e71b7409ed49497d4f1a5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2i128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aefae9cdce67e414aa4b3c14882fa45a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2i128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afeaf17ec758f8e7a82fccee05e6590a6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vperm2i128</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8101e73be868fd485d91ee0883109dc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a026a448e2aa1566eecbfb7c9a218dd73" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6425636d6b902d09c14c10da7ef6bc45" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6436f18570c70ee1e045d05c06b242df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a27879fe59a39f17dc1f1b61b6c78c2cc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c639a64ccc235bc04357471e029164f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89266305d8f1a284b04fee83d990b94e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4df31c6ed17f01c4b3c4e84361c8920c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a683461829d501c9795a0f637bbeb29bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81f9c42ade8814f8846afc9ec99bb43d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abbead779ec8be5110c3671520b0057f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfca9ae59ff403dff48eabea42eefe1d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4b6c67bcc20e57659923f422126a163" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a26849f180b2fa4d268505ddc059d10" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46fa5ac770d977b61d3d5ac21af04f9a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acada581855db1a04acbb795a4f5d7da7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a998f4a02ba412f7cbab302fabf48304f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3e8adc2e3d1cef62d88220b83aeac1b0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6cbd148e3141c94708b540131e60e04f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a977ce40d836418c628c8666baba93c5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ace015aff034c59dcc4d4c59ff8861fa2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1affd337662ddf9b11e855a06a9fa2d3f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af285aedb7efe1cd4e4416e8a9d270086" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afbd3031eacdafdd018b238fbc77a9da0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcfb7bd8bf064c184868da45c1d1da9b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afec4573eda18d547800ef8a3986de152" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermilps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5619595b707109a655083157ee3ec30f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a33e82e78863ae9893c10e8ebf505ec77" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb084789ad0390ddb75dc452dcdf0a4d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52d3d484b67fca109af5ac4bd5ed5df1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a044933ae89573f8ff9e2bf517fa47016" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa74348a46f51980755cf8f52b50a0256" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b2c3249296143044e2e412049183beb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae83acd0f8470a6d30090d424232718a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab220fb75d929e92d405b933876b4e7bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab27fd9abde2d327b4fd25a593d242ae9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpermq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af5db58f8c0a1f20a48ae092e3aeb9b29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5bd55f6a2940bd4d25136d7a9d8e4557" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7636d2ac5c29899cd1ffd84fb67633d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab168fb4a9ea6b891340060e7fbabcc92" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac661acfd96015caa9c1d2aad475d799" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aec2ea4ffda6f495136d38e5e51773d60" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a112002ae53a8102cb97cc2936c3fc831" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a52dd402eef46153ca4e3efe5ced10b2d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac9b7091b5f42e34873b9590e1b8e1f51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8e199ce536005cb6657950d4ee98004f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a553ac769a657927ab45f64d4e698bdde" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab69c424080104a251ae97a539f26844" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpextrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7324da61306931e08601ec914c2f253b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherdd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe35b4523deb34ced967eab6967a52ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherdd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a031419762d7107aa8a6c29b551742e4f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a732a2459e446dda97016ff9967fc3ab6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb0101dba9107c2f866f2691d070f8c7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherqd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a502fd496b445f978b9240e3e9baca7ae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9de2ffe28a0ec740508b87dcf354932c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpgatherqq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46790bbbaa3701921fef5e9becae749b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8283ffb8a3941e5c32c5a3e216baa64c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ddabb1682c8a35837e5e0f4fe132865" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c47556e7d213d0650e09b5314e7e97e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8da7147aa134bf6683bbda20622c1632" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaca6859ed65089251d25d194fd0582c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1d0cb5960acd549598e598a05b0d1bf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a348572836e6f7ab671002900347e5b0e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c28560759a09ddac15efdea48586e65" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61c005ab3e409f647287f087a845aec1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1407f10aa8aef59f1da774cdf1d24fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2bfc6039f1fc3402adfd626096bd46a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphaddw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36140f6a8a821e25629c6188e7bff2c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphminposuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91de1f2e9e0a0cb9fd156add5b518b00" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphminposuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb64e020056e65e25c3cdfd82ec453af" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a06ca83d91a95de9b5d190123fdb9ea25" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f8c6e8f8a088be2376863cb31a2047d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a59dd911a8f2b7e08eba3b9e275275c83" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d6dbdf6b511cb39591c023c65be503a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1184e10d88559b03c71f34679d3d893f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a659f48fa613ac7482a0142716f57e5f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6cab35061f49e5dded7b3064b0cb3b0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6bf7c925417b7622d199aad92c29019d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acafcc29ecc5d4011ddb00a30800d1cf3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9aa6c2d2637a277155ca8e7fcd0ad0fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5d7cade9fb135db2aa881fe3f2a8ee6c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vphsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a166b7f7f4e70ae80c05e66fd9091e0b0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42bb05825510834e859dfd9e4f4684ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5eac16307452b48304e98c40c541a877" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2236d136b6018ed6dd114439b9dd7ff6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a253cc46157f7d8a21aa86fdfe6e5a1d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad4a3c47277c2a3ba88ac41a3504470f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f55da1f19f74fccf87b4a727496b6f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6af662f853968bc7b00e5945382bb4ef" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d24df23a92f7f9741b59c34b45b7255" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6efea8e58ce51b2825c7e781a738785" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a47e5ee3d9cef48476448ab82a7028026" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a322639d1fbe9e59084b068c6a6d883c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpinsrw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e4436ef0a20f0f4fa9d270866a41cf4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6151f25aed58d3a787a69b057a4ff246" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a026ac62d9150471dde0610590444f949" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a74d86c9db706bcb8e51d862a33bc7d29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acce576a31463c76643799987bdb89326" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a070872f250cfc25fb1b2b5cf1ff51f46" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff576f1a958c63a2e1d3ec79158d270f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86f91932588cd3a44b9576a848211c2a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaddwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa5af90f9ee8e9876f8d883e4ac1a511d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09cdb26b2edae092fbadff84a116d6cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa780ad16b07bd24ddebb31fb99047a46" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2879036a52d619a671b47495db62c122" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e22891e36d33141de1074cce7bc29b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adaaf49dd962668c2024eaee7c91da1bb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a940ca427962ad034207291da8a3fb753" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a044bf0fb7b4b8068ebb74457bb859fd9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaskmovq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa0e95f6978be5c8c119058651dd55625" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a430d1633143fe72b3e3b0cd501984dbf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac61272924ed2fd5f1dbe00eb5801cdbe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad86129d6ffa1f248a5bd0177536c5b43" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05ecb9263c356ef9acccf637a0774101" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b53a137cb8678534524ae3864fca8e9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af75b6d3d8a1f33887411be01f5667b14" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af20257ac8da35468035f8417181c71a4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0cd8bc7c85a45734e9c9406c7c9e6ce1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26c7a612c0273be20f278d1cb044cad3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0187d67fce076de9903797e248ce2bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a26cf264ea71a6e6664160bb68e6f9e5b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a328aa62f418a01255528d7f882846809" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a30c2ff1f5455777187249abdd3d70ee8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a056f3d74ca7311c14a60de63db8eb2e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1764873d8aeb575ba02a9b14758a3829" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04e64887a6aad8671b196791c5a40c7b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada1d569cf1312e87fdfd72233f135c49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8c8ebc8cc6194b74a81379d66741f28" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcd56575eb081df92f75eaa3dfe48877" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9a351b5551c94d845246349b6e4de0a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8447b2b4d3b0c05ae4b4f773df2a7b3b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd9421629e8d8a21b1c827c7b23558d7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5309c64879055f000c1e5e5e9f03fc56" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmaxuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad82f2cc150621c4c31f71eee6f3feaa2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa506cac00cc0e914d19b188a288a5ff7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af8ebca25d9b93188ecbfe16bdd08b2b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aebfb1d82ace51b6d792a8d8af01faa9f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae61f0e906f5c264f69b32611feb816f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8847e7ece70028c0b7b311bba6d25886" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55cf7c2b967cac8c0064055d0c494c74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1e3da3b282e377141d6d7a5d6d1222f7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7bf8810950a0f0ed8eda90e39045fb97" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af59f8d2c3661a9072cfa7132395d613e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac99789c315858372c9756ede0c1c91e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a43751b4b631dc558aa6062fc96113bd8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aafa8f40f9f996318fc3a67c3d270bb3a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1057ac8295fade7094dd9bb587120fb4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaa6f24b5dfe0fc44029a884005b1326d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae9c1f35bc3e0dab079991b695a92febc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminub</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6b7d10120b15bd96e6ad6377f6dab7a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae818732949d7814eb997372dc1e2f96b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79dd7c839496c15397823f45e20f5c2a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc3d61fc3c05f74220fe0f9167209b6a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminud</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a64eb6cc35a6aaa330a9723c34ddb2a3b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d534458114ab979917726d54c1f370e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6d5c240bc4aff9006e2ed0e92cd9997" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3812bde88dcc8ad5b22c652ff0b09c98" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpminuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aada65d72a477d25e543615fdd75b89f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovmskb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1bcb6932bc11793c2a4b78338a09499" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovmskb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a35dcd66ec69d5d2bdeb546e7a438fd75" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2e37f8f87587cf8df175cf134348856a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c2f1feee21ace5761c94e5e79f4ff72" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a224552c10e1ef9aa1a7e44a3cf43e15b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79248f2b9f07002b32edeea51a3dd9f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42919705792231d3d5bceb04a9e5d510" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad8c9c89766ccba914513d2be9837c4c8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67ed68fa51d09d030a21b828765356fb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeff0bc87c778861e7493add7d6775b94" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaaa64797a107560e6926843b2e4aeee3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6e3b084b0a82542bb9a70194e3d29cf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69eba1d6a69c34865a87f6ea76373388" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa7375ed86702226d2f2dda30cc9348fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24ce88d5b904e4b8347e31c8de79efbc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a29a6d7e962dc58c2abffde580311b4fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a228a4f9c98920e0634268442654140" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac6c65adcc06038b50a866572b4a176b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aadc864a4404c42390b2f649316eb1d99" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad3488ba91b474c801a86868a9b0deb9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af55c2f875d02dff1bd211e80497802f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc5ccf2d1e570b77dbae69a690123852" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af750039031b9b8faf247ac8bc53b9a18" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48d17594c84ef040ac3502e4912b69a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5bb55100eb0d834313615b928ab05c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovsxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8eeb6804a0209cd79cccc7d0cc1ae2c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af7c8e64b4d6b75fa51439b195383497c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a902d48acf7ec8462be5875d2c75966cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ade9b8e2609051fe67d58baa279927597" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65cf995394d7e8b48959ac78ba5a1ba8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb4d406f445e7fb42ef235847eea8f74" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac9ccd2ad750d56f82766e5e7be45018" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a084f2c4dc071720b4ec896a96e74978a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2f7f43bb92fbe8107cbc851a3afd201" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a87a4ae3257f87bdb1cd44ea731f9f2e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2baa9effbfbc672822124dcbaa8b761" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac60a6a85064788c64097b8c8cb8aa3ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fdf24fa96fffe52f94c1fc7eb21342b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7dffc6446fe4abcddd47c6e1c35d0f0c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acabdac81371869a05d27d2819cdbacf1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab38c0373a4bca073488f325b1dd8091f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f38769d4f30fef9a28a7242010d6132" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b820cc5f51d50b2b36de821f81ce5bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a20f38c32cea0287eae903e63cbbf3923" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6bd10de6e95cd041bb308f70f0f9f41" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7be5fc7065d6ee85e62a73abf8f75b9a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1ce47b9dce5921fcfd625b0591862660" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46bc69bd1e1e4598e51d20424bc0442f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab7720a407349eced2388ec28924ee9fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmovzxwq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b98a22344539ae86b000c7c66169391" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a71c94e737afe1e9705b0b0afb2ef74c4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89c89f9acdb5e097c85ef06e1788052e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f545a1e607e3a7da5e0c738cc7cdc75" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a09553a7fdf8cac13c5d3796412434006" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac395fb8b1e5cb1ec0908013bed6d9c6f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9d329fa306ac79629ebeb5b67f26360" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abc4aba95f47c4fc283d4814e52c3c370" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhrsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae4c72bb2012f1fbe33bbdb4f4e5d99d2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9d163395f5545bfd308a79b0267cefa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7ea5da354561ecaff8ea45bfd893469f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9285e0dbf32be3f5143019a9501c623a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhuw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a084b193a04ae352689599a68c6ec4c9c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a623b0187f9cff8a99f5d1e70663153c6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad1b0d217821dc579f7ca322cacfe9869" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9576739d10ee8fd5230488d6bebb6f5f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9f1de4ede7dc26671df5f7096d3ebdce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a298fd886015625ec5439ed7a2cad407a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a343c9bfbbb5b22ed0c0c957779924a65" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6f5e6773e97646b4be5fb42262c2360" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmulld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fd657b0460edb9b3ca51a1cb74790fc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5c3becf4afd6aa603bfbdba2f24b5360" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aadb3cb7c1bbe8456596fd9530be34574" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac243670abc04538be0f11014ac43cd51" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmullw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a857a13ce71daaf8bb0cad42bb9196859" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a56f4e13626f174a62a0c27cb1b99d8df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31377db8893c4059cd28b700802c072e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa76bfbd7daa74c33ba01ce6839ab19a0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpmuludq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae22fb7fe2656aa0f36ff649e5dceb7be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a13ef748e51724e01fd02fec377c9208e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8f3d372072063db3c4ab2c81249b0b5e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aed6e7ba8b7f14796584bafbb1c3dd74b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cc0d53ed7a086cebeeaaaab6f002755" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a538b4b0d46bf7a5838e7295e74be4c06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ebffdbc393448d2326822070b3c3b2d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af6c66b2822a9f26d516bcfcc4bee6823" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsadbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a04fbf698bcaaf02ba8769e2bc58788e1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69c22383e2e4898e7843dec76257db62" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05ee9316fcb383830c054ef828c25f4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c29cf24fdccfa9e818ff58dc262144e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acbb37f0699783277b7d8d9d8188d8410" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7358af113a3b5bd578cecf1078b2edee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2eb7443f5ff9267a9aa84217658ddf32" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6c970f6d938997f6e5145ee9aedc9556" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca6077eb044320500ec068b57bfd9640" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0f231ebd4c230faecaf5adbec2154ca" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac2ddf60a573cabdc3ac8c3170e5cfe15" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acd404d09e411872c276a11d3f3906d65" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aacea1105ce0c5a924d7d6170fa488516" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0277d1222464d841ca54dbd96c804bd0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a083d0ca4b4da5a2147ea74c7f237f967" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46fde2f648843e4f9d2b0b907d8d5346" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeec7de527fe3b61cebdabc5a6a58dc9a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a02d56ca462bcf21b6d5591e0f4db323e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0fd9a59b78010214a85c8df83c8f2225" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abd66a760dbe4a4c6cad22d51399bc47c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshufhw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae0349a096f8f170abf43c63689a35d26" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ce0e1aee0cca68228c46a42bab68412" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d19c94feeb2889ee0d427fb1e044552" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab1f7a2c23ffd469aef68ff17def3f38b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae44e02a1dbb34339d09d28ab45dab985" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af1a30211c79f978565e78fcfb584bbcc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0ea6e286ef8b60f53b4e6f7c6bc13d24" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad71f35dd98d0f1426f318f1662857ac2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpshuflw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aab3637b8dc942ea629a798943e4363b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad0b4dd5ce8eb194d9078a1fcaf5aa05b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af10e65d3fc3a126e048abf95ece6dad4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa567485357e9c50a6c75e5e01b134aee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5e2eb6709195259987ea2d854baf9e80" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af97e28a2c9993f1c417abfcd0a424c6e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6d3e0f62e15297f3889d0f2ad9cb0eb1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a3e2941817290622495f07cb0ae64be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad10a37806fcdc27e63b6132e5100c1fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcc5202a34d7144017533eaba8d377a5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c93da1f773001e6adf6eef98649f00c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a862e47a235f9eafa2668925ad6d830c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsignw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a560e79aeca415c578e3a1509fa45b953" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad07a0b9eae580e8f3e52563fae1696a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d550ffa748d1c3cc8a0a76d23a46adb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adb3aac94b2a5a84ed82b6228c2e645e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad3f663bc0c0f8aff645c55a4a76d043" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a0f5ceec5c1bbfc3bb923bb977f574d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a23eff9aa46da5c0feb417c6564dab170" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7df18c48e4ab5f8f3b53afb7cca436d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf02748ef5a651051a46a4c0ba754606" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a554953397f559b5734cd05e9045b0633" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a92b6ae5444c79026a3ef2a9544bb03e8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aee8f31e7459040fb6e8b586d2966ec4e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpslldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae95b7bcdb341fc607088ffe878dd2f0f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5b545d6ec716016eec2189042873e1a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9d59d6e471121f95a4f6f8f1ef2732f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69eba0f989d79e19c6acd1e0e56f15b9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a1613ab398d7c2e5e5267dce3017da9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f86cd25f4cdb2203909fae8a0e354b1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ababe80cde5dff2203855b0e5c29fa4cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb136f4053a3ad9acda4481ff9e206d0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a997e1ad3fd6b52491912dfcfd000059f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b8148589a221981b7dbb31afc380f83" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae2caec5129b12bbb54b951ac0f1b9bf1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff811259501cc73902c0859fabe88ce9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62eeb6c2070f8f9fb1dd9ddd06eda33f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5590c467fa59961ccaf047685d9b97b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5820c481077565a693670636e632f49a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c4bd171fb3884014fe0d5d1c954c80f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa2fc4a320b858f963741e193c2b4ade7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6b36030264c443e115f7dcd18cbb3a7d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2700d8d875832e0705952cb06d6b91df" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54b52854d117915557ba8dc3c98268c8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a565321554e8e66cce85ca0a6c4548b00" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afec59184ee14680878808d3d6c995d07" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a48b46d7d0db06c779475d643798a27d3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4cba5cce749b7a0613b41b7440d1db95" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsllw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af4ea53b778d75de194b4d1240bf59614" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4fdbf186adb96b4519dee2151ccb16f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f1f04fd19e1c5a28f04ec423fb60048" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a884f7b3267bf47a2450990a2d4ce82" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a057f9b3c980485805d68e1773f9c04cd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a77287cbd8a334f9d432daeecac13953e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a75b282f67285f5308d0893f1e10014e7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a224c849d7897cdaafb005312f8e089b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrad</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7f44e4b158ed6182152915038a7dd0db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsravd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a026cd904e7e5043dc317df7eedeb1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsravd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab6208250dd35216077f5116ebeb8b88e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsravd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a21f3e50ceb94b21f097e4b8623389862" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsravd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9c19f54ea12fc4ffde0e59f0410d8465" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a85d2732c3180648651c1634b59b0a959" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac8f979d46c1243a46b64a0cf3e02788b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2ee394705e4cbe634bb4eb930c94c00a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa7f74475aaba96de362bc8fdf3ef9b71" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab53032f87f41913e7d43d0a5246f85ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8d2d1373543af1798e72dc0cdbff62d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a67181114cd477ed96e03814c08757175" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsraw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a62baad87a4511b9a1de203fee3148c4b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8d3f49c4b5c03f57bfefff46dae9ba46" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5f7ee6740aa348155b2bf64945a33a8f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38a7c53bb0621ce6f0afce7fb9ce193a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a645ce467fd8165156ce8ae1fdb86d7c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5585e84be8bf5285744f4d85a4e8f1dc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfcb9541b6ac12e4b695b62cfcbfb8f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5da8c32c5ecde9711e9db8d4649d84ee" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrld</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab04395ea81c4833fe559e7a614f45b8c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab750b2c1e37a544cf6f675c8be96b932" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa64dffb8cd7f04255ff05c6f776224be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1eb32c1785fa30d02beb582ea90ab5f4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae6a5fe1c16023b1047430aa2581375b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc4f6144f06d16eae4c3ad9f82c26275" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a397db8ef638848db08ae6f03b67e0019" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9136edcc62520b7d62996fbd91b6d4cf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a38531ea886597c0797c848dabd1f9bbd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8c945b074500d4df6d8120286ed929f6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4adee1d2c54746699bb3b18ce70947a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6ace70e6fad494262da9e0465fe5c390" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb3080d311bbb73f6e1201849578bb43" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aba4f58dd68b90901c1aa92edf547cf68" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95d88086aae13937b66b1e917a86cf4c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a842a70fdede1244cc7cf4e0bb2119207" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a109ddb5adde2419bd58dcd9a72a843d4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8ebade15e9265ff984374884b28540fe" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac9ed52d84d39a95a196debd09307995e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a55f1ebb2238f0df17d2818e25d55998b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlvq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8e94490ff67b09da41a91b07183a28c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5a8a55a67d03b6362eafbf72d29d6c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af843d384f72f9c6c55fd51560ad69670" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9a850bff919d9c5d3864358265ac3e03" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a54c53aa562dd9f17f83c95725f5f06e6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a69df118773cfc7c8aa164654bacab727" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7490942e084a7be0f9e00ee5cee5ef64" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad6d8d9f203b60ea7cf5894067918a0a1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsrlw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a65242e27ea559fe6789de2e08c3a3341" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb8c00a86c8e9c961d8cecc4b44c3a7e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a18ccfac388d5ee9654e0f870f49870d6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a96fdb8cdb999e69c6ac68df962d8513a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2df4d8d0288599922250f70031fd577" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3b3a60599b8589d499e05f72dd6cdaad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a79ad0a5f1b024f8519ee1709d3f55790" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a31e4d91dba9e83828bc581d5c47d7b93" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afd4255829be42397d74ef765e7232ee0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a842a0e7cab7c353f54160f4c3aa68b7c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb939b899e8644b7afdc5b26a4596119" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac1ef7ac859ef31e2991e6440dbbca55" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe6542a0d1148f22ba18e7e7a4ad7180" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a64009261134bee3859c661e82d366bdd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afdd9b6d11f69d605c164fa2273a739d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe3be7ed9936ac9c9df338c57852e36e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a17bed72f6b5aca24d32016cc24e9bc1a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abef1934edf020adc55003abd5b7fc6de" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff13c6edda052dafcecba61871af3360" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a03485d26f408eb5e0dbb98ea68d071f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubsw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5ba85b9e42595eaaa6c96de0ca4453b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae67f64fe0c70907bfbba9acfecebf523" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6336e5e1d7484df192f2ae7a1be53c80" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab3e12aa04184e8d7141efcf6bb8bf1c0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusb</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2d623490ada6d9c3173a728c78d6d76c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ee1b71468b6479b230503634d8ab17a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90c65767f0e571ae21b4c09a3df4f90a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5699873bc6e40ec60cef0fde0f98706d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubusw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7227bbcfec7318c6cf72659a7701e50f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a95fe3e85a2e9ca9fc8543832da7b0f75" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1f8ee3125e9d4ab1d95251aadbfcc1dc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abb07ae1da6b858c8feebda050e05abe6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpsubw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afe46e257108a24bbf9cff53693154f86" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vptest</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a91255efca9379e457b99053e82f0bf9d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vptest</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a652c31a1461fe206f323e766f0ce50e3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vptest</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bf893ed3630475583828383179e4d0f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vptest</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af75fed537f5e80829383baae67fe63f9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af46aa47d83ed9bbb2578d374293068fd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6422bd264dbe5da5b77f34ae62a2c071" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a08fe52272376a52b588c31bb231bd93a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aca3678bc61431916aeac588a6c553f29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a389bd580f373ccae4458e02496828218" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4f5e271b2e77c37feb866026d5c25846" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a778f3ce767e7aba156cd01c1f9beb999" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afb30f224ab20462aaccbf26534e1f038" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae7adb397c38655506589495176f0113" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a6c9349510aa5623469110ad5c2ecd6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81450409c6c68e53ad935459ea4633cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0da8e15c8cfae4e17d85500e1c7026c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2a60e38900bf17c893d89a1efe71f38" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a49bcfaab8c8cc3291095362ca838cf33" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6387097e3353f8e964d7fc1fbe1d22a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckhwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3921d2c5bf024535037960c34d076943" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae712f74a49ea0215bfae5c2b1ed07c32" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abe735587453b3fe5f2b4f0d2abf0e472" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a198952fa460f2edfa01d0497fe09375a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklbw</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24d66500274f055ab908ef5cc9ca7ab2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a89b0c7455eadc3e314037a094a949d49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a11b24b03f9bc2eac0c64f3675392eea4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a499ec4e46c90b321a7be79a1344fd5ae" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpckldq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1a540625693400762155f485a7c9f6a7" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a248f135438d51db601c3e976dee4c589" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1fab7d51d3f8eaca90763866cbbe53be" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad082d07b8fbf635d1eb625b1b9ca3323" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklqdq</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8164202858787c72669f56a7a6f53b2f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4913b53130f19e5b513ccbb7905a45a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a86fc3de469b3b4e2fd8bd0e2b528ab29" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf2ffae822a946ad3223f9ec9da6f51c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpunpcklwd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aac7412daf96735a3386576572857cb0c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c511372f7c735da8b18effaad0a8017" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abcf51a922daf5ca951e2074a26041de1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada6eb1681e2d9b368ea3e3275b76222a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vpxor</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0e74c078415178e5ff0b51f79b35230e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrcpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac26d8818f1df611fdff2fa6829da4788" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrcpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90b18fb3b3737b000391960cec0bce9f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrcpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a58b4074a28f03fc4b4ad8b012979f19a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrcpps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaf46ee15eed625a38acb7364e8476573" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrcpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a46e73df356ab98201abf278b608624a8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrcpss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4147f2095f27de5e164da2c668af0323" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8b660228c23b76c0e260ce9bad18913f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afc4433d3e9c30e2653df2b7dd1d7af49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adcc4ead5304e0de8df857132e76ceee2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa4ff65e2d3c961626f254bd04b02a71f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac5dcf0120d5e972ceceaace415fbd0ec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a61608ac868f3b9f9b2d3ef2f1cc60ba9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3c822889193ae7455073feb23a2d633b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adc6c78bcdd9bb992972f295a0e2f02c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5825f9c16e726f4db94eae5e387b0908" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabd561699a0be9e8a8d9132c3156ad49" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8efac675c2e3d5be708eabcdbfe78d54" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2251823efc3c4ac7dc3396c7fe17646d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4b7dc58160c0e42bbdbe397e992d28f5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab763bf0f2866492ac5149713fad33561" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5be66a3c4fb026762dbf2e420e313afa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a9ad48b6d8a146679c2b9dbc8e0d4c3cc" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2f6fab49594d756a1f7529b71cd6c67" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aae23cc2d1b2cd437746cdddbe923c1ad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a134259b75b20d9a2654db8eee6ce3888" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2492e156de62815b3123a41dc3b700c3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ada1b8ef7377641a9bfbb8c2a27251ebf" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dfa1873a4dab555e3e48f91740c964f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4724d3fa52db4b647c8ddcd9d7c2e969" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vroundss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2a5aba1f719c4b1e9a538d4a954d4c08" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4418a4c00a37719dd3531c062ef820cb" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1979c82aaa8a7a71a3c7e29b5ac4a245" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6509ba3b9adb698c1efb5a422c53389e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a598a9f33698c122ec1c7fda4528c3849" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrsqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf1d736f8a15c2d7975053f0e71ebef6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vrsqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad9b433b8ec69f475849d33208ab6d3b3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a24c3eb3432a2f1612b96e8986e22c5a9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a10e95d159afa083d5ce6a9a1a5ccaec6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acb623e3685005c1c7e48b4a22966cb8d" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afacf3cff51711594ff74f2bd858f5cad" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af2c5d0f41817df54562c4ae391f45303" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a81f753f3d5c7a3141d610756311a37b4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a41b5aff912ff75e6ec4e633569ce04db" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1c23fb13a454a2ddcc2e3f1f11acf1c5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a648370903e31b8be6870e48532cbd6f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6f151d9e1175a5f6915684e8418c07f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aef3cac5afd3d763bfde3a9f0abd3da06" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad50a2e09fba2ba731cd65b75c78f6026" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad2a828b5642d340284e4979000e0402c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3d4c4adeff703c6b448544342df75728" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a321ba28a133e0535943dbdc58ecd0330" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vshufps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a90207a51c7d689aac2105177356091fa" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aeb6edf90f8a3f5939065f1e31b518ba9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa8550223571e7a8ac2ce689ac4a54798" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adff18feb07bfa61229498db0d80d0140" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a471ff28fc467c66682b8bea4d430a223" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aad79f2426fb0d939173b579aaf006751" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3bc1def4bb51a1ab7452642e577a8a01" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a05ee7235c9998b1dbe4121c29fb36b7e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabd463267562e14f654b7e09bd73dbd6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a68989ab3d7c3aff09d7514e6e06391c2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a76e7e118d8588442496e586253065486" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d37b9db93cf82f37b81ca1bf4865593" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsqrtss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2b587fc84fe8c63ae7d79697b4b5cdda" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vstmxcsr</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1abf70a69c4d6f8ae37600e91f10c691a2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af10e7b16e0159ec0a301238fe490743f" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad603517d7ada77d4049f790b871f56d1" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7a7af9b955e105ba4cb8bd7ac046bc72" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a547fd027d68e5909b1ae8c355b687266" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0d26b79b97c1687932a4dae52ff9d570" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a8660ce26e020f1db94c53431b50c7598" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cdf6eabe0b27b0a43d5cdb61cf870bd" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7cc42ff3a07f00915bfdc2ab51364044" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6cb2f1f7e2b65fa33fcfc2b568859b40" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubsd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aff49fdccb95a1fe1cc3aeab5390f4084" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf76a0bda7dbec3c4ecdc8b418ca3e55" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vsubss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a93e9081ee9b0fe43165f71ad6c0d7633" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa6a7e1aa75caaa977e1a6fc265e74397" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4fde3120f67e9000ee2985ec496e8b7e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c87519dc01487930aa2d065f988d13c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6dae00e5382553a5b980253fff405aec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7c697124071bdff879ad141a9951f9ff" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a032e9caaf72e6f795664c4fb4a6b1397" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aabc43c5909c9a298bb9dc23c7a447358" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vtestps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4ce205fe63da9f59179b43f32bd3d912" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vucomisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a686b73b918706b53f7161570443121ba" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vucomisd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b1105f2cf6a2e958cf67d21064bb9f2" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vucomiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a42ac01b335827c6b6549629add1f0eec" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vucomiss</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad58a511526a820cf7f88b1492443c2da" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab4ccbb9f90d4df0611c2470385279053" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adefb901a4323618c9a3b91317108e740" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae88b3bcb4c23716b28a4d6dce26f8c37" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1339deb0b9bfbd6ebcbee7407fd7c193" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3efa26b47d99d79ad9e3d57a53354548" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1afea61d134cb9806a9b5ea8284a63a360" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ac522b8fed74bc8eb2589f8e555b0c379" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpckhps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a1b58b52c32b668c7671e0abe556fcc4c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad280406ec404d20e05c8e5a9fcd69bf6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a052a98c242cc248dfc06e8f1e58f5c9c" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a28a483c5fad12b0fd0bc32931741716e" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a0698ec793b6f8b714e3e484a83881231" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1adf412322d963544fedb6452d5372bbce" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab8ad1c4aac0ea180eef482b5066f0a5a" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae3f549fa9c0800a2fbd3e200840990de" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vunpcklps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a4046e115ff358a3bb97eed99e065d1a3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a353e38d642a862de445634ea796a631b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a245df1bd00014af7016dc9aaf8caa628" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a364ee84e56b52a1872133422cdeba035" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a6a693b9fe1cf2b86549b66bda763a015" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae47ae8319f4bbef970e33f9658295ad3" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a493e239008db7edbc6969941878f471b" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a624494631a4a67e6d283c5dcc3db9dd9" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vxorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a2cfaf46645ed5714be1a126540f8c909" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vzeroall</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a5ad884126256e6f1f51b6513dff7b394" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>vzeroupper</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad5eb1ab081708a7d15d2db20d95b5b47" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>X86X64Assembler</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad3dd940f3f305da92d530e5d8153a2d8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aa1d96a4015f429092ffc68ac2f447713" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xadd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab2f153cf8070f4d6b0aa9a9530ed3af6" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xchg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae5867d1c285b63b8935d6b2ab3ff66b8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xchg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1acfb6f19167588dba6a81df452df43850" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xchg</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a25a297390d340c7fac57eebb6a6c3907" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a7e0e7c584329fe087105c7bf96c874f8" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8463c99ae18d5ea368bcf901b237813" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ab52151557c60f162f9882edcd807f3e4" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ad55725f89f1d40d55bc4edecc34d5d62" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af13f24f82178915218ae7697f5778f32" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a36a3479cfec127f43228af40ba9d1508" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xor_</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1ae8ff8afa7c49acf2e987e6042389b4f0" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1af9e565733d6fce1ed761e31f1e88d497" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xorpd</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a637702e9422f03410eb56c620f03a9b5" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xorps</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1a3498e6101d6d98d7d466e1888e7cfa02" prot="public" virt="non-virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>xorps</name></member>
      <member refid="structasmjit_1_1BaseAssembler_1a04edcae62e921dd125c9c67d4d042d8e" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>~BaseAssembler</name></member>
      <member refid="structasmjit_1_1CodeGen_1aaa96fd1cef6c0d59ba9f570b1d5d35c6" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>~CodeGen</name></member>
      <member refid="structasmjit_1_1x86x64_1_1X86X64Assembler_1aaad32b567ad4710ca211bd70809f9a13" prot="public" virt="virtual"><scope>asmjit::x86x64::X86X64Assembler</scope><name>~X86X64Assembler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
