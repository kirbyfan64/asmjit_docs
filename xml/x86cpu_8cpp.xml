<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="x86cpu_8cpp" kind="file">
    <compoundname>x86cpu.cpp</compoundname>
    <includes refid="build_8h" local="yes">../build.h</includes>
    <incdepgraph>
      <node id="2294">
        <label>../base/globals.h</label>
        <childnode refid="2287" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
      </node>
      <node id="2296">
        <label>../base/apiend.h</label>
      </node>
      <node id="2297">
        <label>stdarg.h</label>
      </node>
      <node id="2299">
        <label>stdint.h</label>
      </node>
      <node id="2290">
        <label>stdlib.h</label>
      </node>
      <node id="2295">
        <label>../base/apibegin.h</label>
        <childnode refid="2287" relation="include">
        </childnode>
      </node>
      <node id="2292">
        <label>../base/defs.h</label>
        <childnode refid="2293" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
      </node>
      <node id="2300">
        <label>limits.h</label>
      </node>
      <node id="2298">
        <label>new</label>
      </node>
      <node id="2286">
        <label>x86cpu.cpp</label>
        <link refid="x86cpu.cpp"/>
        <childnode refid="2287" relation="include">
        </childnode>
      </node>
      <node id="2288">
        <label>config.h</label>
      </node>
      <node id="2293">
        <label>../base/intutil.h</label>
        <childnode refid="2294" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
      </node>
      <node id="2287">
        <label>../build.h</label>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2298" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
      </node>
      <node id="2289">
        <label>stdio.h</label>
      </node>
      <node id="2291">
        <label>string.h</label>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2294" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="x86cpu_8cpp_1a4885b81a3643f489bcb59697d21cb21d" prot="public" static="no">
        <name>ASMJIT_EXPORTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/x86/x86cpu.cpp" line="8" bodyfile="/home/ryan/asmjit/src/asmjit/x86/x86cpu.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>[AsmJit]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complete<sp/>x86/x64<sp/>JIT<sp/>and<sp/>Remote<sp/>Assembler<sp/>for<sp/>C++.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[License]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zlib<sp/>-<sp/>See<sp/>LICENSE.md<sp/>file<sp/>in<sp/>the<sp/>package.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Export]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASMJIT_EXPORTS</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Guard]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../build.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ASMJIT_BUILD_X86)<sp/>||<sp/>defined(ASMJIT_BUILD_X64)</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Dependencies<sp/>-<sp/>AsmJit]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../base/intutil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../x86/x86cpu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2009-02-05:<sp/>Thanks<sp/>to<sp/>Mike<sp/>Tajmajer<sp/>for<sp/>VC7.1<sp/>compiler<sp/>support.<sp/>It<sp/>shouldn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>affect<sp/>x64<sp/>compilation,<sp/>because<sp/>x64<sp/>compiler<sp/>starts<sp/>with<sp/>VS2005<sp/>(VC8.0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&gt;=<sp/>1400)</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Api-Begin]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../base/apibegin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">asmjit<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">x86x64<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::x86x64::hostCpuId]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>messy,<sp/>I<sp/>know.<sp/>Cpuid<sp/>is<sp/>implemented<sp/>as<sp/>intrinsic<sp/>in<sp/>VS2005,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>support<sp/>other<sp/>compilers<sp/>as<sp/>well.<sp/>Main<sp/>problem<sp/>is<sp/>that<sp/>MS<sp/>compilers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>64-bit<sp/>mode<sp/>not<sp/>allows<sp/>to<sp/>use<sp/>inline<sp/>assembler,<sp/>so<sp/>we<sp/>need<sp/>intrinsic<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>also<sp/>asm<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hostCpuId()<sp/>and<sp/>detectCpuInfo()<sp/>for<sp/>x86<sp/>and<sp/>x64<sp/>platforms<sp/>begins<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ASMJIT_HOST_X86)<sp/>||<sp/>defined(ASMJIT_HOST_X64)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hostCpuId(uint32_t<sp/>inEax,<sp/>uint32_t<sp/>inEcx,<sp/>CpuId*<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>2009-02-05:<sp/>Thanks<sp/>to<sp/>Mike<sp/>Tajmajer<sp/>for<sp/>supporting<sp/>VC7.1<sp/>compiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASMJIT_HOST_X64<sp/>is<sp/>here<sp/>only<sp/>for<sp/>readibility,<sp/>only<sp/>VS2005<sp/>can<sp/>compile<sp/>64-bit<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>_MSC_VER<sp/>&gt;=<sp/>1400<sp/>||<sp/>defined(ASMJIT_HOST_X64)</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>by<sp/>intrinsics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>__cpuidex(reinterpret_cast&lt;int*&gt;(result-&gt;i),<sp/>inEax,<sp/>inEcx);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else<sp/>//<sp/>_MSC_VER<sp/>&lt;<sp/>1400</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>uint32_t<sp/>cpuid_eax<sp/>=<sp/>inEax;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>uint32_t<sp/>cpuid_ecx<sp/>=<sp/>inCax;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>uint32_t*<sp/>cpuid_out<sp/>=<sp/>result-&gt;i;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>__asm<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/><ref refid="group__asmjit__x86x64_1ga26df91f0fa40947bb620b176472bf3d3" kindref="member" tooltip="Gpd register.">eax</ref>,<sp/>cpuid_eax</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/><ref refid="group__asmjit__x86x64_1gaf030da0053911445efff9d86a7d0e251" kindref="member" tooltip="Gpd register.">ecx</ref>,<sp/>cpuid_ecx</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/><ref refid="group__asmjit__x86x64_1ga64bf639da31c64be79d6ab1f67b933af" kindref="member" tooltip="Gpd register.">edi</ref>,<sp/>cpuid_out</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>cpuid</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/>dword<sp/><ref refid="group__asmjit__x86x64_1gac030fe377fda8eac8f0dbcaac345f961" kindref="member" tooltip="Create a custom pointer operand.">ptr</ref>[edi<sp/>+<sp/><sp/>0],<sp/>eax</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/>dword<sp/>ptr[edi<sp/>+<sp/><sp/>4],<sp/><ref refid="group__asmjit__x86x64_1ga4bbee13a30d58526860dcfd0fa212590" kindref="member" tooltip="Gpd register.">ebx</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/>dword<sp/>ptr[edi<sp/>+<sp/><sp/>8],<sp/>ecx</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>mov<sp/><sp/><sp/><sp/><sp/>dword<sp/>ptr[edi<sp/>+<sp/>12],<sp/><ref refid="group__asmjit__x86x64_1gacc5e7948fbb4596d3e8407a858cb1817" kindref="member" tooltip="Gpd register.">edx</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/>//<sp/>_MSC_VER<sp/>&lt;<sp/>1400</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Note,<sp/>patched<sp/>to<sp/>preserve<sp/>ebx/rbx<sp/>register<sp/>which<sp/>is<sp/>used<sp/>by<sp/>GCC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(ASMJIT_HOST_X86)</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>__myCpuId(inEax,<sp/>inEcx,<sp/>outEax,<sp/>outEbx,<sp/>outEcx,<sp/>outEdx)<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/>asm<sp/>(&quot;mov<sp/>%%ebx,<sp/>%%edi\n&quot;<sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;cpuid\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;xchg<sp/>%%edi,<sp/>%%ebx\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;=a&quot;<sp/>(outEax),<sp/>&quot;=D&quot;<sp/>(outEbx),<sp/>&quot;=c&quot;<sp/>(outEcx),<sp/>&quot;=d&quot;<sp/>(outEdx)<sp/>:<sp/>&quot;a&quot;<sp/>(inEax),<sp/>&quot;c&quot;<sp/>(inEcx))</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>__myCpuId(inEax,<sp/>inEcx,<sp/>outEax,<sp/>outEbx,<sp/>outEcx,<sp/>outEdx)<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/>asm<sp/>(&quot;mov<sp/>%%rbx,<sp/>%%rdi\n&quot;<sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;cpuid\n&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;xchg<sp/>%%rdi,<sp/>%%rbx\n&quot;<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;=a&quot;<sp/>(outEax),<sp/>&quot;=D&quot;<sp/>(outEbx),<sp/>&quot;=c&quot;<sp/>(outEcx),<sp/>&quot;=d&quot;<sp/>(outEdx)<sp/>:<sp/>&quot;a&quot;<sp/>(inEax),<sp/>&quot;c&quot;<sp/>(inEcx))</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__myCpuId(inEax,<sp/>inEcx,<sp/>result-&gt;eax,<sp/>result-&gt;ebx,<sp/>result-&gt;ecx,<sp/>result-&gt;edx);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>Compiler<sp/>#ifdef.</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::x86x64::cpuSimplifyBrandString]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ASMJIT_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cpuSimplifyBrandString(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>clear<sp/>the<sp/>current<sp/>character<sp/>in<sp/>the<sp/>buffer.<sp/>It<sp/>ensures<sp/>that<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>no<sp/>garbage<sp/>after<sp/>the<sp/>string<sp/>NULL<sp/>terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>d<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>prev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>curr<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>s[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>==<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal"><sp/>||<sp/>s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_Skip;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>d[0]<sp/>=<sp/>curr;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>d++;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>curr;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">_Skip:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>curr<sp/>=<sp/>*++s;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>d[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::x86x64::CpuVendor]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CpuVendor<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>uint32_t<sp/>id;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>text[12];</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CpuVendor<sp/>cpuVendorTable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a6a2f3432bac2f693af105f463d13db02" kindref="member" tooltip="AMD CPU vendor.">kCpuVendorAmd</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a6a2f3432bac2f693af105f463d13db02" kindref="member" tooltip="AMD CPU vendor.">kCpuVendorAmd</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a608f861dd08c9029e7992419a82e13d9" kindref="member" tooltip="VIA CPU vendor.">kCpuVendorVia</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a84fcc958361f8be6594bacd4efbf3fac" kindref="member" tooltip="National Semiconductor CPU vendor (applies also to Cyrix processors).">kCpuVendorNSM</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a3e4d75ca28030952346e1228e0e135d1" kindref="member" tooltip="Intel CPU vendor.">kCpuVendorIntel</ref><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a3ce730dbe74d5cc9274aca654b2212c4" kindref="member" tooltip="Transmeta CPU vendor.">kCpuVendorTransmeta</ref>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a84fcc958361f8be6594bacd4efbf3fac" kindref="member" tooltip="National Semiconductor CPU vendor (applies also to Cyrix processors).">kCpuVendorNSM</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a3ce730dbe74d5cc9274aca654b2212c4" kindref="member" tooltip="Transmeta CPU vendor.">kCpuVendorTransmeta</ref>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a608f861dd08c9029e7992419a82e13d9" kindref="member" tooltip="VIA CPU vendor.">kCpuVendorVia</ref><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>{<sp/></highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/><sp/>0<sp/>,<sp/></highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/><sp/>0<sp/>,<sp/></highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/><sp/>0<sp/><sp/>}<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ASMJIT_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cpuVendorEq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CpuVendor&amp;<sp/>info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vendorString)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t*<sp/>a<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint32_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(info.text);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t*<sp/>b<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint32_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vendorString);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a[0]<sp/>==<sp/>b[0])<sp/>&amp;<sp/>(a[1]<sp/>==<sp/>b[1])<sp/>&amp;<sp/>(a[2]<sp/>==<sp/>b[2]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::x86x64::hostCpuDetect]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hostCpuDetect(Cpu*<sp/>out)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>CpuId<sp/>regs;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maxId;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>everything<sp/>except<sp/>the<sp/>&apos;_size&apos;<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>::memset(reinterpret_cast&lt;uint8_t*&gt;(out)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BaseCpu)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>safe<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>::memcpy(out-&gt;_vendorString,<sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">,<sp/>8);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>out-&gt;_coresCount<sp/>=<sp/><ref refid="structasmjit_1_1BaseCpu_1a3f3bf31b69395a2874364a63b75e9ca6" kindref="member" tooltip="Detect number of cores (or sum of all cores of all processors).">BaseCpu::detectNumberOfCores</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>vendor<sp/>string/id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>hostCpuId(0,<sp/>0,<sp/>&amp;regs);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>maxId<sp/>=<sp/>regs.eax;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>::memcpy(out-&gt;_vendorString,<sp/>&amp;regs.ebx,<sp/>4);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>::memcpy(out-&gt;_vendorString<sp/>+<sp/>4,<sp/>&amp;regs.edx,<sp/>4);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>::memcpy(out-&gt;_vendorString<sp/>+<sp/>8,<sp/>&amp;regs.ecx,<sp/>4);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpuVendorEq(cpuVendorTable[i],<sp/>out-&gt;_vendorString))<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;_vendorId<sp/>=<sp/>cpuVendorTable[i].id;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>feature<sp/>flags<sp/>in<sp/>ecx/edx<sp/>and<sp/>family/model<sp/>in<sp/>eax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>hostCpuId(1,<sp/>0,<sp/>&amp;regs);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>family<sp/>and<sp/>model<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>out-&gt;_family<sp/><sp/><sp/>=<sp/>(regs.eax<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>out-&gt;_model<sp/><sp/><sp/><sp/>=<sp/>(regs.eax<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>out-&gt;_stepping<sp/>=<sp/>(regs.eax<sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>extended<sp/>family<sp/>and<sp/>model<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out-&gt;_family<sp/>==<sp/>0x0F)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;_family<sp/>+=<sp/>((regs.eax<sp/>&gt;&gt;<sp/>20)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;_model<sp/><sp/>+=<sp/>((regs.eax<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x0F)<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>out-&gt;_processorType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>((regs.eax<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>out-&gt;_brandIndex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>((regs.ebx<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>out-&gt;_flushCacheLineSize<sp/><sp/><sp/>=<sp/>((regs.ebx<sp/>&gt;&gt;<sp/><sp/>8)<sp/>&amp;<sp/>0xFF)<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>out-&gt;_maxLogicalProcessors<sp/>=<sp/>((regs.ebx<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000001U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a4bf8f84a96633e79f91864797078cc28" kindref="member" tooltip="Cpu has SSE3.">kCpuFeatureSse3</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000002U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a0ac548e4bb98069d810d6797472c45cf" kindref="member" tooltip="Cpu has PCLMULQDQ.">kCpuFeaturePclmulqdq</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000008U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a68583b5d689f9cec52926a3923725e5f" kindref="member" tooltip="Cpu has MONITOR and MWAIT.">kCpuFeatureMonitorMWait</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000200U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a282de73f5cbdca0102ed347d9e9b8442" kindref="member" tooltip="Cpu has Supplemental SSE3 (SSSE3).">kCpuFeatureSsse3</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00002000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a84cfd9e8a465268571b75e7f06fb6e0f" kindref="member" tooltip="Cpu has CMPXCHG16B (x64).">kCpuFeatureCmpXchg16B</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00080000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a50fd175be091a46cd26859d3aca3dd78" kindref="member" tooltip="Cpu has SSE4.1.">kCpuFeatureSse41</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00100000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12aec78414fcf3f3376ac00db79d1bc5051" kindref="member" tooltip="Cpu has SSE4.2.">kCpuFeatureSse42</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00400000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a442cfd4864f19970a008b60850b90b12" kindref="member" tooltip="Cpu has MOVBE.">kCpuFeatureMovbe</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00800000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a7d3f3baeab17b7715a28f775bbd24e5b" kindref="member" tooltip="Cpu has POPCNT.">kCpuFeaturePopcnt</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x02000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12ac8b5be5dc60103a6f0c4916f7675f49e" kindref="member" tooltip="Cpu has AESNI.">kCpuFeatureAesni</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x40000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a4c5d259ea54da844d5116429a63b4576" kindref="member" tooltip="Cpu has RDRAND.">kCpuFeatureRdrand</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00000010U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a939385734116895b4c56cfa0fd0f9e3d" kindref="member" tooltip="Cpu has RDTSC.">kCpuFeatureRdtsc</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00000100U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a4b863841c3c70b7ea119715177c4ecb7" kindref="member" tooltip="Cpu has CMPXCHG8B.">kCpuFeatureCmpXchg8B</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00008000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a77ae1355d75ab52e7613935c14dd846c" kindref="member" tooltip="Cpu has CMOV.">kCpuFeatureCmov</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00800000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a8b2a2d2e4729619c2403abcd8da48a5b" kindref="member" tooltip="Cpu has MMX.">kCpuFeatureMmx</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x01000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a0b0b6dc58adb4dd649b3aca6e217b0d1" kindref="member" tooltip="Cpu has FXSAVE/FXRSTOR.">kCpuFeatureFxsr</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x02000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12aad2120f83453b6d51a33bea935cdcdcc" kindref="member" tooltip="Cpu has SSE.">kCpuFeatureSse</ref>).addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a87debfa17ac513a932ff94f7953bdfc4" kindref="member" tooltip="Cpu has extended MMX.">kCpuFeatureMmxExt</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x04000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12aad2120f83453b6d51a33bea935cdcdcc" kindref="member" tooltip="Cpu has SSE.">kCpuFeatureSse</ref>).addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a9d090d4fc00bb41bed251a57033c81b8" kindref="member" tooltip="Cpu has SSE2.">kCpuFeatureSse2</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x10000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a559604d4b1c5d8b11200b2c519d44709" kindref="member" tooltip="Cpu has multithreading.">kCpuFeatureMultithreading</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out-&gt;_vendorId<sp/>==<sp/><ref refid="group__asmjit__base_1ggaf99557bc959d675f99a7413c43b18491a6a2f3432bac2f693af105f463d13db02" kindref="member" tooltip="AMD CPU vendor.">kCpuVendorAmd</ref><sp/>&amp;&amp;<sp/>(regs.edx<sp/>&amp;<sp/>0x10000000U))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AMD<sp/>sets<sp/>Multithreading<sp/>to<sp/>ON<sp/>if<sp/>it<sp/>has<sp/>more<sp/>cores.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out-&gt;_coresCount<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;_coresCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>AVX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x10000000U)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a0984092714c3e456c48b75678cc8cf3d" kindref="member" tooltip="Cpu has AVX.">kCpuFeatureAvx</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000800U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12ab01c4287d37bd5fc1931d9e36eb5421e" kindref="member" tooltip="Cpu has XOP.">kCpuFeatureXop</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00004000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a11f57658cf3e0a328693d84a4985011c" kindref="member" tooltip="Cpu has FMA3.">kCpuFeatureFma3</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00010000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a8c959115cf213cec414ec206f078a0bb" kindref="member" tooltip="Cpu has FMA4.">kCpuFeatureFma4</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x20000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a9f25e33d3e522ea3651313a3c7e67daa" kindref="member" tooltip="Cpu has F16C.">kCpuFeatureF16C</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>new<sp/>features<sp/>if<sp/>the<sp/>processor<sp/>supports<sp/>CPUID-07.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxId<sp/>&gt;=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>hostCpuId(7,<sp/>0,<sp/>&amp;regs);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000001)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12aeb1e7c642d4d6f292be34e036a7b3816" kindref="member" tooltip="Cpu has FSGSBASE.">kCpuFeatureFsGsBase</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000008)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a2d091365c412a2178719762bda183084" kindref="member" tooltip="Cpu has BMI.">kCpuFeatureBmi</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000010)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a87c5d98ffb05fc3822f28784f0725d32" kindref="member" tooltip="Cpu has HLE.">kCpuFeatureHle</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000100)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a05da42f7c43a8e00a7ea03266d1b6c64" kindref="member" tooltip="Cpu has BMI2.">kCpuFeatureBmi2</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000200)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12ab270032aca7f1e49d3f1c5721ec3cafb" kindref="member" tooltip="Cpu has enhanced REP MOVSB/STOSB.">kCpuFeatureRepMovsbStosbExt</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000800)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a20360639916f2bc5f47fa80e896106aa" kindref="member" tooltip="Cpu has RTM.">kCpuFeatureRtm</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AVX2<sp/>depends<sp/>on<sp/>AVX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out-&gt;hasFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a0984092714c3e456c48b75678cc8cf3d" kindref="member" tooltip="Cpu has AVX.">kCpuFeatureAvx</ref>))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ebx<sp/>&amp;<sp/>0x00000020)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a20471fce5a2688bca84aa58d6d8d63f4" kindref="member" tooltip="Cpu has AVX2.">kCpuFeatureAvx2</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calling<sp/>cpuid<sp/>with<sp/>0x80000000<sp/>as<sp/>the<sp/>in<sp/>argument<sp/>gets<sp/>the<sp/>number<sp/>of<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extended<sp/>IDs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>hostCpuId(0x80000000,<sp/>0,<sp/>&amp;regs);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maxExtId<sp/>=<sp/>IntUtil::iMin&lt;uint32_t&gt;(regs.eax,<sp/>0x80000004);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>uint32_t*<sp/>brand<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint32_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(out-&gt;_brandString);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0x80000001;<sp/>i<sp/>&lt;=<sp/>maxExtId;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>hostCpuId(i,<sp/>0,<sp/>&amp;regs);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x80000001:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000001U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a4a77822c89742d567d38e4ba19f4a11d" kindref="member" tooltip="Cpu has LAHF/SAHF.">kCpuFeatureLahfSahf</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000020U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a7a71c5fed1747f386b86e51a75701f25" kindref="member" tooltip="Cpu has LZCNT.">kCpuFeatureLzcnt</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000040U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12ae8d1530bfe7455cdeb4c76d888248b69" kindref="member" tooltip="Cpu has SSE4.A.">kCpuFeatureSse4A</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000080U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12ac786ef180be789e6dda8304dc7e13c29" kindref="member" tooltip="Cpu has Misaligned SSE (MSSE).">kCpuFeatureMsse</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.ecx<sp/>&amp;<sp/>0x00000100U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12ab0e9efe2d38eeb553269d2de80726027" kindref="member" tooltip="Cpu has PREFETCH.">kCpuFeaturePrefetch</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00100000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12aed06d2dddd46606ef756dbafd87d8ed7" kindref="member" tooltip="Cpu has execute disable bit.">kCpuFeatureExecuteDisableBit</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00200000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a609f1466700f4c644c5aa4f0327f54f8" kindref="member" tooltip="Cpu has FXSAVE/FXRSTOR optimizations.">kCpuFeatureFfxsr</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x00400000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a87debfa17ac513a932ff94f7953bdfc4" kindref="member" tooltip="Cpu has extended MMX.">kCpuFeatureMmxExt</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x08000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a6cc7ea12d6268cdafd23b22f17e0778f" kindref="member" tooltip="Cpu has RDTSCP.">kCpuFeatureRdtscp</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x40000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a6e9ecae9decb57390735cc1ad2a4b160" kindref="member" tooltip="Cpu has enchanced 3dNow!">kCpuFeature3dNowExt</ref>).addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a87debfa17ac513a932ff94f7953bdfc4" kindref="member" tooltip="Cpu has extended MMX.">kCpuFeatureMmxExt</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regs.edx<sp/>&amp;<sp/>0x80000000U)<sp/>out-&gt;addFeature(<ref refid="group__asmjit__x86x64_1gga2e2003ff81acf82b29172c8c8dc68b12a1a287b89b7e835d3e719e2f8bf8d2520" kindref="member" tooltip="Cpu has 3dNow!">kCpuFeature3dNow</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x80000002:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x80000003:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x80000004:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*brand++<sp/>=<sp/>regs.eax;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*brand++<sp/>=<sp/>regs.ebx;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*brand++<sp/>=<sp/>regs.ecx;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*brand++<sp/>=<sp/>regs.edx;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>features<sp/>can<sp/>be<sp/>detected<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simplify<sp/>the<sp/>brand<sp/>string<sp/>(remove<sp/>unnecessary<sp/>spaces<sp/>to<sp/>make<sp/>printing<sp/>nicer).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>cpuSimplifyBrandString(out-&gt;_brandString);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>x86x64<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>asmjit<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Api-End]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../base/apiend.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Guard]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ASMJIT_BUILD_X86<sp/>||<sp/>ASMJIT_BUILD_X64</highlight></codeline>
    </programlisting>
    <location file="/home/ryan/asmjit/src/asmjit/x86/x86cpu.cpp"/>
  </compounddef>
</doxygen>
