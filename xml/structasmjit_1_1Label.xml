<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structasmjit_1_1Label" kind="struct" prot="public">
    <compoundname>asmjit::Label</compoundname>
    <basecompoundref refid="structasmjit_1_1Operand" prot="public" virt="non-virtual">asmjit::Operand</basecompoundref>
    <includes local="no">defs.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structasmjit_1_1Label_1a4a6c7bff9fb417be01710becd40e7a69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Label::Label</definition>
        <argsstring>()</argsstring>
        <name>Label</name>
        <briefdescription>
<para>Create new, unassociated label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1119" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1119" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1a03a30b3855ce8b5aad70274c2d0f270e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Label::Label</definition>
        <argsstring>(uint32_t id)</argsstring>
        <name>Label</name>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1124" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1124" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1a49bb35be18aae2cd1d75de225c354edd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Label::Label</definition>
        <argsstring>(BaseAssembler &amp;a)</argsstring>
        <name>Label</name>
        <param>
          <type><ref refid="structasmjit_1_1BaseAssembler" kindref="compound">BaseAssembler</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Create new initialized label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1130" bodyfile="/home/ryan/asmjit/src/asmjit/base/assembler.h" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1a2a91d937d92e72ff8620903b8a6e98f6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Label::Label</definition>
        <argsstring>(BaseCompiler &amp;c)</argsstring>
        <name>Label</name>
        <param>
          <type><ref refid="structasmjit_1_1BaseCompiler" kindref="compound">BaseCompiler</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Create new initialized label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1132" bodyfile="/home/ryan/asmjit/src/asmjit/base/compiler.h" bodystart="1959" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1a0ac1cb11998d68f74a1ff35a6df5a219" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Label::Label</definition>
        <argsstring>(const Label &amp;other)</argsstring>
        <name>Label</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create reference to another label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1135" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1135" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1a5a65f27dc9ea9c2b6ff4af6f03e72d17" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Label::Label</definition>
        <argsstring>(const _NoInit &amp;)</argsstring>
        <name>Label</name>
        <param>
          <type>const _NoInit &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1137" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1137" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1af83a1f1faf5999e0ed880792a2ba5d1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
        <definition>Label&amp; asmjit::Label::operator=</definition>
        <argsstring>(const Label &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1143" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1143" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1acb857089289990a888d3ca53ebc49d0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool asmjit::Label::operator==</definition>
        <argsstring>(const Label &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1145" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1145" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Label_1a32270234b4d41f266040e45cd7d1d188" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool asmjit::Label::operator!=</definition>
        <argsstring>(const Label &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1146" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1146" bodyend="1146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> (jump target or data location). </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="structasmjit_1_1Label" kindref="compound">Label</ref> represents locations typically used as jump targets, but may be also used as position where are stored constants or static variables. If you want to use <computeroutput><ref refid="structasmjit_1_1Label" kindref="compound">Label</ref></computeroutput> you need first to associate it with <ref refid="structasmjit_1_1BaseAssembler" kindref="compound">BaseAssembler</ref> or <ref refid="structasmjit_1_1BaseCompiler" kindref="compound">BaseCompiler</ref> instance. To create new label use <ref refid="structasmjit_1_1BaseAssembler_1ac4ff0a9995f59f13d62c015acae7ac89" kindref="member">BaseAssembler::newLabel()</ref> or <ref refid="structasmjit_1_1BaseCompiler_1a5eef24a0d411d3eb54677ef5a53957b3" kindref="member">BaseCompiler::newLabel()</ref>.</para><para>Example of using labels:</para><para><programlisting><codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Assembler/Compiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>Assembler<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Label<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><ref refid="structasmjit_1_1Label_1a4a6c7bff9fb417be01710becd40e7a69" kindref="member" tooltip="Create new, unassociated label.">Label</ref><sp/>L_1(a);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>...<sp/>your<sp/>code<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>label,<sp/>see<sp/>@ref<sp/>asmjit::BaseAssembler<sp/>or<sp/>@ref<sp/>asmjit::BaseCompiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.jump(L_1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>...<sp/>your<sp/>code<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>label<sp/>to<sp/>current<sp/>position,<sp/>see<sp/>@ref<sp/>asmjit::BaseAssembler::bind()</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>or<sp/>@ref<sp/>asmjit::BaseCompiler::bind().</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/>a.bind(L_1);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="930">
        <label>asmjit::Label</label>
        <link refid="structasmjit_1_1Label"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="931">
        <label>asmjit::Operand</label>
        <link refid="structasmjit_1_1Operand"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="932">
        <label>asmjit::Label</label>
        <link refid="structasmjit_1_1Label"/>
        <childnode refid="933" relation="public-inheritance">
        </childnode>
      </node>
      <node id="933">
        <label>asmjit::Operand</label>
        <link refid="structasmjit_1_1Operand"/>
      </node>
    </collaborationgraph>
    <location file="/home/ryan/asmjit/src/asmjit/base/defs.h" line="1113" bodyfile="/home/ryan/asmjit/src/asmjit/base/defs.h" bodystart="1113" bodyend="1147"/>
    <listofallmembers>
      <member refid="structasmjit_1_1Operand_1ab65e9aa7a15edd48cba687f03cb7347c" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_base</name></member>
      <member refid="structasmjit_1_1Operand_1ac155d3e43ef0cf0ea24e98b1fe906d36" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_copy</name></member>
      <member refid="structasmjit_1_1Operand_1a307e2e7b752000b12da59dad23e0ca90" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_imm</name></member>
      <member refid="structasmjit_1_1Operand_1a52353c7164e54d235314b175a9b05a6c" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_init</name></member>
      <member refid="structasmjit_1_1Operand_1a2d8b4647e75a71e854ad939e1cb4c2ed" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_init_packed_d0_d1</name></member>
      <member refid="structasmjit_1_1Operand_1a8cee9df3008f5956e37f876cc9026f45" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_init_packed_d2_d3</name></member>
      <member refid="structasmjit_1_1Operand_1a289c6ab4602acf459e248d3f3f724b8a" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_init_packed_op_sz_b0_b1_id</name></member>
      <member refid="structasmjit_1_1Operand_1a7b9c87fee92df184dea2c10fb30ea467" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_init_packed_op_sz_w0_id</name></member>
      <member refid="structasmjit_1_1Operand_1a706538f838a8416a7e8e7cc4fa6f1db8" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_label</name></member>
      <member refid="structasmjit_1_1Operand_1a1e918a093397232131e706fd436c1085" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_packed</name></member>
      <member refid="structasmjit_1_1Operand_1aae280895b95e1b083799a43306dd7e15" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_vmem</name></member>
      <member refid="structasmjit_1_1Operand_1a24f921b98561dea1f19faad624b9a147" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>_vreg</name></member>
      <member refid="structasmjit_1_1Operand_1a985b4db41884dae41b27d2d880c7e86f" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>clone</name></member>
      <member refid="structasmjit_1_1Operand_1ae043c994eaddfe587c1d248812b3d16c" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>getData</name></member>
      <member refid="structasmjit_1_1Operand_1a9871ba5815361a896771418b9d443935" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>getData</name></member>
      <member refid="structasmjit_1_1Operand_1a005389a2368b711612feda323d63766f" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>getId</name></member>
      <member refid="structasmjit_1_1Operand_1a2ea181bfeeae6d5467f7343dfddcb57c" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>getOp</name></member>
      <member refid="structasmjit_1_1Operand_1ae5bb07ef28e2c29ebf9b762ea8f36b7e" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>getSize</name></member>
      <member refid="structasmjit_1_1Operand_1ab85a3b5c7354a38ca52e78fea1739759" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isImm</name></member>
      <member refid="structasmjit_1_1Operand_1a2a77f09fc4951c9e58fccd18a6eaf1b3" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isLabel</name></member>
      <member refid="structasmjit_1_1Operand_1afb9863bc270de49d257dce8593e79cb4" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isMem</name></member>
      <member refid="structasmjit_1_1Operand_1ad09b5fd91f3d8c754980f98a2019be7b" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isNone</name></member>
      <member refid="structasmjit_1_1Operand_1ae0ce4d16beb59e0934942cba222054af" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isReg</name></member>
      <member refid="structasmjit_1_1Operand_1a1cd13703d63d231c97cf76c020e2b605" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isRegCode</name></member>
      <member refid="structasmjit_1_1Operand_1aea0d545eea3526cfb1ae0adb8871de78" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isRegOrMem</name></member>
      <member refid="structasmjit_1_1Operand_1a5dd129c65aac0057afdd4f844785437a" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isRegType</name></member>
      <member refid="structasmjit_1_1Operand_1a809703f677ab89fb8d619ad717c59a02" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isVar</name></member>
      <member refid="structasmjit_1_1Operand_1ae65f6fcaacdf3a299256f909fcda5576" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>isVarOrMem</name></member>
      <member refid="structasmjit_1_1Label_1a4a6c7bff9fb417be01710becd40e7a69" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Label</name></member>
      <member refid="structasmjit_1_1Label_1a03a30b3855ce8b5aad70274c2d0f270e" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Label</name></member>
      <member refid="structasmjit_1_1Label_1a49bb35be18aae2cd1d75de225c354edd" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Label</name></member>
      <member refid="structasmjit_1_1Label_1a2a91d937d92e72ff8620903b8a6e98f6" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Label</name></member>
      <member refid="structasmjit_1_1Label_1a0ac1cb11998d68f74a1ff35a6df5a219" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Label</name></member>
      <member refid="structasmjit_1_1Label_1a5a65f27dc9ea9c2b6ff4af6f03e72d17" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Label</name></member>
      <member refid="structasmjit_1_1Operand_1ad67efdbe93039d4ae3f77f84fcae6331" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Operand</name></member>
      <member refid="structasmjit_1_1Operand_1a55218d0096d0f0352484ecd0b7e3ef53" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Operand</name></member>
      <member refid="structasmjit_1_1Operand_1a50c0bde3edb955a4001a20a7d01bbf96" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>Operand</name></member>
      <member refid="structasmjit_1_1Label_1a32270234b4d41f266040e45cd7d1d188" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>operator!=</name></member>
      <member refid="structasmjit_1_1Label_1af83a1f1faf5999e0ed880792a2ba5d1b" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>operator=</name></member>
      <member refid="structasmjit_1_1Label_1acb857089289990a888d3ca53ebc49d0d" prot="public" virt="non-virtual"><scope>asmjit::Label</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
