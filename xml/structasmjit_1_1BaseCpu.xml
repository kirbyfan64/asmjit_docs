<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structasmjit_1_1BaseCpu" kind="struct" prot="public">
    <compoundname>asmjit::BaseCpu</compoundname>
    <derivedcompoundref refid="structasmjit_1_1x86x64_1_1Cpu" prot="public" virt="non-virtual">asmjit::x86x64::Cpu</derivedcompoundref>
    <includes local="no">cpu.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structasmjit_1_1BaseCpu_1a24012635c8274f5c4079ee4cc42994a6" prot="public" static="no">
        <name>@15</name>
        <enumvalue id="structasmjit_1_1BaseCpu_1a24012635c8274f5c4079ee4cc42994a6a7296792e89b5105b60a793ff0d8ece12" prot="public">
          <name>kFeaturesPerUInt32</name>
          <initializer> static_cast&lt;int&gt;(sizeof(uint32_t)) * 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="54" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="54" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a63b1391eaf5c68084b6fe16d7c0354f5" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
<para>Size of the structure in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="113" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a2242090cf8293bd1993836c88f644b0e" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char asmjit::BaseCpu::_vendorString[16]</definition>
        <argsstring>[16]</argsstring>
        <name>_vendorString</name>
        <briefdescription>
<para>Cpu short vendor string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="116" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a6a8a82c2fe9c901f9699d2d7763664b9" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char asmjit::BaseCpu::_brandString[64]</definition>
        <argsstring>[64]</argsstring>
        <name>_brandString</name>
        <briefdescription>
<para>Cpu long vendor string (brand). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="118" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a495231592fbc008595461fbb2045b3d3" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_vendorId</definition>
        <argsstring></argsstring>
        <name>_vendorId</name>
        <briefdescription>
<para>Cpu vendor id (see <computeroutput>asmjit::kCpuVendor</computeroutput> enum). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="121" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1aae7f103029b2104b1e41f7371ae9ff55" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_family</definition>
        <argsstring></argsstring>
        <name>_family</name>
        <briefdescription>
<para>Cpu family ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="123" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a6b765b4c329d863af47baad664c4d1e6" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_model</definition>
        <argsstring></argsstring>
        <name>_model</name>
        <briefdescription>
<para>Cpu model ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="125" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a6bd94261fb02212d1cffd0f5c1d88baf" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_stepping</definition>
        <argsstring></argsstring>
        <name>_stepping</name>
        <briefdescription>
<para>Cpu stepping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="127" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a7a6d6d546880dd57a75074c45c17d868" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_coresCount</definition>
        <argsstring></argsstring>
        <name>_coresCount</name>
        <briefdescription>
<para>Cpu cores count (or sum of all CPU cores of all processors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="129" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasmjit_1_1BaseCpu_1a4eb46fc6902f48e76b182bfdd13d8797" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::_features[4]</definition>
        <argsstring>[4]</argsstring>
        <name>_features</name>
        <briefdescription>
<para>Cpu features bitfield. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="132" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1acffd56dc2e689f2e716914e37ef722e1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::BaseCpu::BaseCpu</definition>
        <argsstring>(const BaseCpu &amp;other)</argsstring>
        <name>BaseCpu</name>
        <param>
          <type>const <ref refid="structasmjit_1_1BaseCpu" kindref="compound">BaseCpu</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a6bf3e9eab26d3aba3be4f47959fc9221" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1BaseCpu" kindref="compound">BaseCpu</ref> &amp;</type>
        <definition>BaseCpu&amp; asmjit::BaseCpu::operator=</definition>
        <argsstring>(const BaseCpu &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structasmjit_1_1BaseCpu" kindref="compound">BaseCpu</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a10728bb6f621fa11cb142f434d63078d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::BaseCpu::BaseCpu</definition>
        <argsstring>(uint32_t size=sizeof(BaseCpu))</argsstring>
        <name>BaseCpu</name>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
          <defval>sizeof(<ref refid="structasmjit_1_1BaseCpu" kindref="compound">BaseCpu</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="60" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a1596633d850aed49f001d4be35e20384" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* asmjit::BaseCpu::getVendorString</definition>
        <argsstring>() const </argsstring>
        <name>getVendorString</name>
        <briefdescription>
<para>Get CPU vendor string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="67" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a8eb2dec2c8374dd40c7f590d4e724677" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* asmjit::BaseCpu::getBrandString</definition>
        <argsstring>() const </argsstring>
        <name>getBrandString</name>
        <briefdescription>
<para>Get CPU brand string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="69" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a27f71127d565689bbb7c2c8677fe89b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::getVendorId</definition>
        <argsstring>() const </argsstring>
        <name>getVendorId</name>
        <briefdescription>
<para>Get CPU vendor ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="72" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a86ee66b3bf7e8c623f140fa614262272" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::getFamily</definition>
        <argsstring>() const </argsstring>
        <name>getFamily</name>
        <briefdescription>
<para>Get CPU family ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="74" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1ad3ed12c12bce38a12d1b42dc410c372d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::getModel</definition>
        <argsstring>() const </argsstring>
        <name>getModel</name>
        <briefdescription>
<para>Get CPU model ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="76" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1ae711d5fa18f161c7d2bad598af180190" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::getStepping</definition>
        <argsstring>() const </argsstring>
        <name>getStepping</name>
        <briefdescription>
<para>Get CPU stepping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="78" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a2aac6d6744a3cd6bf4a5ca9ea38ef0fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::getCoresCount</definition>
        <argsstring>() const </argsstring>
        <name>getCoresCount</name>
        <briefdescription>
<para>Get CPU cores count (or sum of all cores of all procesors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="80" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a7d362d56d07ee7e70be5288445943f19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool asmjit::BaseCpu::hasFeature</definition>
        <argsstring>(uint32_t feature) const </argsstring>
        <name>hasFeature</name>
        <param>
          <type>uint32_t</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Get whether CPU has a <emphasis>feature</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="83" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a79624b1c6b519d788be7063ab9d60179" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1BaseCpu" kindref="compound">BaseCpu</ref> &amp;</type>
        <definition>BaseCpu&amp; asmjit::BaseCpu::addFeature</definition>
        <argsstring>(uint32_t feature)</argsstring>
        <name>addFeature</name>
        <param>
          <type>uint32_t</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Add CPU <emphasis>feature</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="91" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="91" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a3f3bf31b69395a2874364a63b75e9ca6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASMJIT_API uint32_t</type>
        <definition>uint32_t asmjit::BaseCpu::detectNumberOfCores</definition>
        <argsstring>()</argsstring>
        <name>detectNumberOfCores</name>
        <briefdescription>
<para>Detect number of cores (or sum of all cores of all processors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="103" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.cpp" bodystart="41" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1BaseCpu_1a401b722e8a48d77c4031a28cd46f1fff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ASMJIT_API const <ref refid="structasmjit_1_1BaseCpu" kindref="compound">BaseCpu</ref> *</type>
        <definition>const BaseCpu * asmjit::BaseCpu::getHost</definition>
        <argsstring>()</argsstring>
        <name>getHost</name>
        <briefdescription>
<para>Get host cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="106" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.cpp" bodystart="70" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base cpu information. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ryan/asmjit/src/asmjit/base/cpu.h" line="51" bodyfile="/home/ryan/asmjit/src/asmjit/base/cpu.h" bodystart="51" bodyend="133"/>
    <listofallmembers>
      <member refid="structasmjit_1_1BaseCpu_1a6a8a82c2fe9c901f9699d2d7763664b9" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_brandString</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a7a6d6d546880dd57a75074c45c17d868" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_coresCount</name></member>
      <member refid="structasmjit_1_1BaseCpu_1aae7f103029b2104b1e41f7371ae9ff55" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_family</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a4eb46fc6902f48e76b182bfdd13d8797" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_features</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a6b765b4c329d863af47baad664c4d1e6" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_model</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a63b1391eaf5c68084b6fe16d7c0354f5" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_size</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a6bd94261fb02212d1cffd0f5c1d88baf" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_stepping</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a495231592fbc008595461fbb2045b3d3" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_vendorId</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a2242090cf8293bd1993836c88f644b0e" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>_vendorString</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a79624b1c6b519d788be7063ab9d60179" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>addFeature</name></member>
      <member refid="structasmjit_1_1BaseCpu_1acffd56dc2e689f2e716914e37ef722e1" prot="private" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>BaseCpu</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a10728bb6f621fa11cb142f434d63078d" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>BaseCpu</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a3f3bf31b69395a2874364a63b75e9ca6" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>detectNumberOfCores</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a8eb2dec2c8374dd40c7f590d4e724677" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getBrandString</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a2aac6d6744a3cd6bf4a5ca9ea38ef0fd" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getCoresCount</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a86ee66b3bf7e8c623f140fa614262272" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getFamily</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a401b722e8a48d77c4031a28cd46f1fff" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getHost</name></member>
      <member refid="structasmjit_1_1BaseCpu_1ad3ed12c12bce38a12d1b42dc410c372d" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getModel</name></member>
      <member refid="structasmjit_1_1BaseCpu_1ae711d5fa18f161c7d2bad598af180190" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getStepping</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a27f71127d565689bbb7c2c8677fe89b5" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getVendorId</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a1596633d850aed49f001d4be35e20384" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>getVendorString</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a7d362d56d07ee7e70be5288445943f19" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>hasFeature</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a24012635c8274f5c4079ee4cc42994a6a7296792e89b5105b60a793ff0d8ece12" prot="public" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>kFeaturesPerUInt32</name></member>
      <member refid="structasmjit_1_1BaseCpu_1a6bf3e9eab26d3aba3be4f47959fc9221" prot="private" virt="non-virtual"><scope>asmjit::BaseCpu</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
