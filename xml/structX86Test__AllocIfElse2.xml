<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structX86Test__AllocIfElse2" kind="struct" prot="public">
    <compoundname>X86Test_AllocIfElse2</compoundname>
    <basecompoundref prot="public" virt="non-virtual">X86Test</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structX86Test__AllocIfElse2_1abfe3afe596fcc81a1839b1b10e7cd23c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>X86Test_AllocIfElse2::X86Test_AllocIfElse2</definition>
        <argsstring>()</argsstring>
        <name>X86Test_AllocIfElse2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/app/test/testx86.cpp" line="998" bodyfile="/home/ryan/asmjit/src/app/test/testx86.cpp" bodystart="998" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="structX86Test__AllocIfElse2_1a080b7d33473d1bf7bab70f8124db9ed6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void X86Test_AllocIfElse2::compile</definition>
        <argsstring>(Compiler &amp;c)</argsstring>
        <name>compile</name>
        <param>
          <type>Compiler &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/app/test/testx86.cpp" line="1004" bodyfile="/home/ryan/asmjit/src/app/test/testx86.cpp" bodystart="1004" bodyend="1037"/>
      </memberdef>
      <memberdef kind="function" id="structX86Test__AllocIfElse2_1a8dbd349be9139ca49101f99297faea79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool X86Test_AllocIfElse2::run</definition>
        <argsstring>(void *_func, StringBuilder &amp;result, StringBuilder &amp;expect)</argsstring>
        <name>run</name>
        <param>
          <type>void *</type>
          <declname>_func</declname>
        </param>
        <param>
          <type><ref refid="structasmjit_1_1StringBuilder" kindref="compound">StringBuilder</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structasmjit_1_1StringBuilder" kindref="compound">StringBuilder</ref> &amp;</type>
          <declname>expect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/app/test/testx86.cpp" line="1039" bodyfile="/home/ryan/asmjit/src/app/test/testx86.cpp" bodystart="1039" bodyend="1050"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structX86Test__AllocIfElse2_1afe1849c7c50eb7ea353a22ec5363becf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void X86Test_AllocIfElse2::add</definition>
        <argsstring>(PodVector&lt; X86Test * &gt; &amp;tests)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structasmjit_1_1PodVector" kindref="compound">PodVector</ref>&lt; X86Test * &gt; &amp;</type>
          <declname>tests</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/app/test/testx86.cpp" line="1000" bodyfile="/home/ryan/asmjit/src/app/test/testx86.cpp" bodystart="1000" bodyend="1002"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ryan/asmjit/src/app/test/testx86.cpp" line="997" bodyfile="/home/ryan/asmjit/src/app/test/testx86.cpp" bodystart="997" bodyend="1051"/>
    <listofallmembers>
      <member refid="structX86Test_1ad0ff0e52a5eee3292982b9456c7cb76e" prot="public" virt="non-virtual"><scope>X86Test_AllocIfElse2</scope><name>_name</name></member>
      <member refid="structX86Test__AllocIfElse2_1afe1849c7c50eb7ea353a22ec5363becf" prot="public" virt="non-virtual"><scope>X86Test_AllocIfElse2</scope><name>add</name></member>
      <member refid="structX86Test__AllocIfElse2_1a080b7d33473d1bf7bab70f8124db9ed6" prot="public" virt="virtual"><scope>X86Test_AllocIfElse2</scope><name>compile</name></member>
      <member refid="structX86Test_1a89f06af1dca4b972b062757d49c87b7e" prot="public" virt="non-virtual"><scope>X86Test_AllocIfElse2</scope><name>getName</name></member>
      <member refid="structX86Test__AllocIfElse2_1a8dbd349be9139ca49101f99297faea79" prot="public" virt="virtual"><scope>X86Test_AllocIfElse2</scope><name>run</name></member>
      <member refid="structX86Test_1afe6e04f46e99989b9ca923cb56cf4615" prot="public" virt="non-virtual"><scope>X86Test_AllocIfElse2</scope><name>X86Test</name></member>
      <member refid="structX86Test__AllocIfElse2_1abfe3afe596fcc81a1839b1b10e7cd23c" prot="public" virt="non-virtual"><scope>X86Test_AllocIfElse2</scope><name>X86Test_AllocIfElse2</name></member>
      <member refid="structX86Test_1a8a094564d1826777794e991cae0fec3c" prot="public" virt="virtual"><scope>X86Test_AllocIfElse2</scope><name>~X86Test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
