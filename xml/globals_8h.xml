<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="globals_8h" kind="file">
    <compoundname>globals.h</compoundname>
    <includes refid="build_8h" local="yes">../build.h</includes>
    <includes refid="apibegin_8h" local="yes">../base/apibegin.h</includes>
    <includes refid="apiend_8h" local="yes">../base/apiend.h</includes>
    <includedby refid="intutil_8h" local="yes">intutil.h</includedby>
    <includedby refid="string_8h" local="yes">string.h</includedby>
    <includedby refid="podlist_8h" local="yes">podlist.h</includedby>
    <includedby refid="podvector_8h" local="yes">podvector.h</includedby>
    <includedby refid="func_8h" local="yes">func.h</includedby>
    <includedby refid="cpu_8h" local="yes">cpu.h</includedby>
    <includedby refid="base_8h" local="yes">base.h</includedby>
    <includedby refid="globals_8cpp" local="yes">globals.cpp</includedby>
    <includedby refid="memorymanager_8cpp" local="yes">memorymanager.cpp</includedby>
    <includedby refid="x86defs_8h" local="yes">x86defs.h</includedby>
    <incdepgraph>
      <node id="1104">
        <label>globals.h</label>
        <link refid="globals.h"/>
        <childnode refid="1105" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
        <childnode refid="1113" relation="include">
        </childnode>
      </node>
      <node id="1113">
        <label>../base/apiend.h</label>
      </node>
      <node id="1114">
        <label>stdarg.h</label>
      </node>
      <node id="1116">
        <label>stdint.h</label>
      </node>
      <node id="1108">
        <label>stdlib.h</label>
      </node>
      <node id="1112">
        <label>../base/apibegin.h</label>
        <childnode refid="1105" relation="include">
        </childnode>
      </node>
      <node id="1110">
        <label>../base/defs.h</label>
        <childnode refid="1111" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
        <childnode refid="1113" relation="include">
        </childnode>
      </node>
      <node id="1117">
        <label>limits.h</label>
      </node>
      <node id="1115">
        <label>new</label>
      </node>
      <node id="1106">
        <label>config.h</label>
      </node>
      <node id="1111">
        <label>../base/intutil.h</label>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
        <childnode refid="1113" relation="include">
        </childnode>
      </node>
      <node id="1105">
        <label>../build.h</label>
        <childnode refid="1106" relation="include">
        </childnode>
        <childnode refid="1107" relation="include">
        </childnode>
        <childnode refid="1108" relation="include">
        </childnode>
        <childnode refid="1109" relation="include">
        </childnode>
        <childnode refid="1115" relation="include">
        </childnode>
        <childnode refid="1116" relation="include">
        </childnode>
        <childnode refid="1117" relation="include">
        </childnode>
      </node>
      <node id="1107">
        <label>stdio.h</label>
      </node>
      <node id="1109">
        <label>string.h</label>
        <childnode refid="1110" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1114" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
        <childnode refid="1113" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1118">
        <label>globals.h</label>
        <link refid="globals.h"/>
        <childnode refid="1119" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
      </node>
      <node id="1130">
        <label>testopcode.cpp</label>
      </node>
      <node id="1174">
        <label>vmem.cpp</label>
      </node>
      <node id="1160">
        <label>error.cpp</label>
      </node>
      <node id="1121">
        <label>codegen.h</label>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1170">
        <label>lock.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
      </node>
      <node id="1143">
        <label>x86context_p.h</label>
      </node>
      <node id="1171">
        <label>memorymanager.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1156">
        <label>error.h</label>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1175">
        <label>defs.cpp</label>
      </node>
      <node id="1176">
        <label>globals.cpp</label>
      </node>
      <node id="1152">
        <label>logger.cpp</label>
      </node>
      <node id="1149">
        <label>runtime.cpp</label>
      </node>
      <node id="1125">
        <label>asmjit.h</label>
        <childnode refid="1126" relation="include">
        </childnode>
        <childnode refid="1127" relation="include">
        </childnode>
        <childnode refid="1129" relation="include">
        </childnode>
        <childnode refid="1131" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
        <childnode refid="1133" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
        <childnode refid="1128" relation="include">
        </childnode>
      </node>
      <node id="1162">
        <label>zone.h</label>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1155">
        <label>apibegin.h</label>
        <childnode refid="1118" relation="include">
        </childnode>
        <childnode refid="1119" relation="include">
        </childnode>
        <childnode refid="1120" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1132">
        <label>testdummy.cpp</label>
      </node>
      <node id="1151">
        <label>logger.h</label>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
      </node>
      <node id="1166">
        <label>func.cpp</label>
      </node>
      <node id="1122">
        <label>assembler.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
      </node>
      <node id="1120">
        <label>defs.h</label>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>memorymanager.cpp</label>
      </node>
      <node id="1148">
        <label>assembler.cpp</label>
      </node>
      <node id="1159">
        <label>podvector.cpp</label>
      </node>
      <node id="1164">
        <label>podlist.h</label>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
      </node>
      <node id="1138">
        <label>x86.h</label>
      </node>
      <node id="1146">
        <label>x86compiler.h</label>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
      </node>
      <node id="1140">
        <label>compiler.cpp</label>
      </node>
      <node id="1124">
        <label>testsizeof.cpp</label>
      </node>
      <node id="1158">
        <label>podvector.h</label>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
      </node>
      <node id="1123">
        <label>base.h</label>
        <childnode refid="1124" relation="include">
        </childnode>
        <childnode refid="1125" relation="include">
        </childnode>
        <childnode refid="1134" relation="include">
        </childnode>
        <childnode refid="1135" relation="include">
        </childnode>
        <childnode refid="1136" relation="include">
        </childnode>
        <childnode refid="1137" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
      </node>
      <node id="1136">
        <label>winremoteruntime.h</label>
        <childnode refid="1137" relation="include">
        </childnode>
      </node>
      <node id="1128">
        <label>testx86.cpp</label>
      </node>
      <node id="1147">
        <label>x86func.h</label>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
      </node>
      <node id="1173">
        <label>vmem.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
      </node>
      <node id="1167">
        <label>cpu.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1169">
        <label>x86cpu.h</label>
        <childnode refid="1138" relation="include">
        </childnode>
      </node>
      <node id="1181">
        <label>x86cpu.cpp</label>
      </node>
      <node id="1129">
        <label>genopcode.h</label>
        <childnode refid="1126" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
      </node>
      <node id="1141">
        <label>context_p.h</label>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
      </node>
      <node id="1179">
        <label>x86compiler.cpp</label>
      </node>
      <node id="1172">
        <label>vectypes.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
      </node>
      <node id="1127">
        <label>genblend.h</label>
        <childnode refid="1126" relation="include">
        </childnode>
        <childnode refid="1128" relation="include">
        </childnode>
      </node>
      <node id="1119">
        <label>intutil.h</label>
        <childnode refid="1120" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
      </node>
      <node id="1183">
        <label>x86func.cpp</label>
      </node>
      <node id="1142">
        <label>context.cpp</label>
      </node>
      <node id="1163">
        <label>zone.cpp</label>
      </node>
      <node id="1157">
        <label>runtime.h</label>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1145">
        <label>x86assembler.h</label>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
      </node>
      <node id="1150">
        <label>codegen.cpp</label>
      </node>
      <node id="1135">
        <label>winremoteruntime.cpp</label>
      </node>
      <node id="1133">
        <label>testmem.cpp</label>
      </node>
      <node id="1177">
        <label>string.cpp</label>
      </node>
      <node id="1134">
        <label>host.h</label>
        <childnode refid="1125" relation="include">
        </childnode>
      </node>
      <node id="1182">
        <label>x86defs.cpp</label>
      </node>
      <node id="1168">
        <label>cpu.cpp</label>
      </node>
      <node id="1154">
        <label>build.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1118" relation="include">
        </childnode>
        <childnode refid="1155" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1180" relation="include">
        </childnode>
        <childnode refid="1181" relation="include">
        </childnode>
        <childnode refid="1182" relation="include">
        </childnode>
        <childnode refid="1183" relation="include">
        </childnode>
      </node>
      <node id="1137">
        <label>contrib.h</label>
      </node>
      <node id="1178">
        <label>x86assembler.cpp</label>
      </node>
      <node id="1126">
        <label>benchx86.cpp</label>
      </node>
      <node id="1131">
        <label>testcpu.cpp</label>
      </node>
      <node id="1153">
        <label>string.h</label>
        <childnode refid="1126" relation="include">
        </childnode>
        <childnode refid="1131" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
        <childnode refid="1133" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
        <childnode refid="1124" relation="include">
        </childnode>
        <childnode refid="1128" relation="include">
        </childnode>
        <childnode refid="1154" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
      </node>
      <node id="1165">
        <label>func.h</label>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
      </node>
      <node id="1139">
        <label>compiler.h</label>
        <childnode refid="1123" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
      </node>
      <node id="1180">
        <label>x86context.cpp</label>
      </node>
      <node id="1144">
        <label>x86defs.h</label>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structasmjit_1_1__Init" prot="public">asmjit::_Init</innerclass>
    <innerclass refid="structasmjit_1_1__NoInit" prot="public">asmjit::_NoInit</innerclass>
    <innernamespace refid="namespaceasmjit">asmjit</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__asmjit__config_1ga9db1c56e8381f1728245475745b6213e" prot="public" static="no">
        <name>ASMJIT_ASSERT</name>
        <param><defname>_Exp_</defname></param>
        <initializer>ASMJIT_NOP()</initializer>
        <briefdescription>
<para>Assertion macro. Default implementation calls <computeroutput><ref refid="group__asmjit__base_1ga14c6796911b413c3fe1ad198e186901f" kindref="member">asmjit::assertionFailed()</ref></computeroutput> function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/globals.h" line="120" bodyfile="/home/ryan/asmjit/src/asmjit/base/globals.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="globals_8h_1affa84ebb448e8d949217ec7b60bdf8e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Z</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T asmjit_cast</definition>
        <argsstring>(Z *p)</argsstring>
        <name>asmjit_cast</name>
        <param>
          <type>Z *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Cast used to cast pointer to function. It&apos;s like reinterpret_cast&lt;&gt;, but uses internally C style cast to work with MinGW. </para>        </briefdescription>
        <detaileddescription>
<para>If you are using single compiler and <computeroutput>reinterpret_cast&lt;&gt;</computeroutput> works for you, there is no reason to use <computeroutput>asmjit_cast&lt;&gt;</computeroutput>. If you are writing cross-platform software with various compiler support, consider using <computeroutput>asmjit_cast&lt;&gt;</computeroutput> instead of <computeroutput>reinterpret_cast&lt;&gt;</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/globals.h" line="139" bodyfile="/home/ryan/asmjit/src/asmjit/base/globals.h" bodystart="139" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>[AsmJit]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complete<sp/>x86/x64<sp/>JIT<sp/>and<sp/>Remote<sp/>Assembler<sp/>for<sp/>C++.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[License]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zlib<sp/>-<sp/>See<sp/>LICENSE.md<sp/>file<sp/>in<sp/>the<sp/>package.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Guard]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMJIT_BASE_GLOBALS_H</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ASMJIT_BASE_GLOBALS_H</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Dependencies<sp/>-<sp/>AsmJit]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../build.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Api-Begin]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../base/apibegin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">asmjit<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">//!<sp/>@addtogroup<sp/>asmjit_base</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//!<sp/>@{</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::kGlobals]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kInvalidIndex<sp/>=<sp/>~static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;(0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__asmjit__base_1ga0e7868a21bae2d1653ab275d6020e4de" refkind="member"><highlight class="normal">ASMJIT_ENUM(<ref refid="group__asmjit__base_1ga0e7868a21bae2d1653ab275d6020e4de" kindref="member">kGlobals</ref>)<sp/>{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Invalid<sp/>value<sp/>or<sp/>operand<sp/>id.</highlight></codeline>
<codeline lineno="30" refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea4439703abd648103096349a5066d87fa" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea4439703abd648103096349a5066d87fa" kindref="member" tooltip="Invalid value or operand id.">kInvalidValue</ref><sp/>=<sp/>0xFFFFFFFF,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Invalid<sp/>register<sp/>index.</highlight></codeline>
<codeline lineno="33" refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea3a3f6193c6ec722bcbb41009493e6bc8" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea3a3f6193c6ec722bcbb41009493e6bc8" kindref="member" tooltip="Invalid register index.">kInvalidReg</ref><sp/>=<sp/>0xFF,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Minimum<sp/>reserved<sp/>bytes<sp/>in<sp/>@ref<sp/>Buffer.</highlight></codeline>
<codeline lineno="36" refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea2af85491aa499ddf71e1d5541f0f6990" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea2af85491aa499ddf71e1d5541f0f6990" kindref="member" tooltip="Minimum reserved bytes in Buffer.">kBufferGrow</ref><sp/>=<sp/>32U,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Minimum<sp/>size<sp/>of<sp/>assembler/compiler<sp/>code<sp/>buffer.</highlight></codeline>
<codeline lineno="39" refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea9ddef91955d2ced375c90287feda24a2" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea9ddef91955d2ced375c90287feda24a2" kindref="member" tooltip="Minimum size of assembler/compiler code buffer.">kMemAllocMinimum</ref><sp/>=<sp/>4096,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Memory<sp/>grow<sp/>threshold.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>//!</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>//!<sp/>After<sp/>the<sp/>grow<sp/>threshold<sp/>is<sp/>reached<sp/>the<sp/>capacity<sp/>won&apos;t<sp/>be<sp/>doubled</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>//!<sp/>anymore.</highlight></codeline>
<codeline lineno="45" refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4deaf57f10b0f67dc1de5f70188fc8b35dd6" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4deaf57f10b0f67dc1de5f70188fc8b35dd6" kindref="member" tooltip="Memory grow threshold.">kMemAllocGrowMax</ref><sp/>=<sp/>8192<sp/>*<sp/>1024,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Host<sp/>memory<sp/>allocator<sp/>overhead.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>//!</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>//!<sp/>We<sp/>decrement<sp/>the<sp/>overhead<sp/>from<sp/>our<sp/>pools<sp/>so<sp/>the<sp/>host<sp/>operating<sp/>system</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>//!<sp/>doesn&apos;t<sp/>need<sp/>allocate<sp/>an<sp/>extra<sp/>virtual<sp/>page<sp/>to<sp/>put<sp/>the<sp/>data<sp/>it<sp/>needs</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>//!<sp/>to<sp/>manage<sp/>the<sp/>requested<sp/>memory<sp/>block<sp/>(for<sp/>example<sp/>if<sp/>a<sp/>single<sp/>virtual</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>//!<sp/>page<sp/>is<sp/>4096<sp/>and<sp/>we<sp/>require<sp/>the<sp/>same<sp/>memory<sp/>size<sp/>we<sp/>decrease<sp/>our</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>//!<sp/>requirement<sp/>by<sp/>kMemAllocOverhead).</highlight></codeline>
<codeline lineno="54" refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea296578ff073ac37c73f692864a529129" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga0e7868a21bae2d1653ab275d6020e4dea296578ff073ac37c73f692864a529129" kindref="member" tooltip="Host memory allocator overhead.">kMemAllocOverhead</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(intptr_t)<sp/>*<sp/>4,</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::kArch]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">//!<sp/>@brief<sp/>Architecture.</highlight></codeline>
<codeline lineno="62" refid="group__asmjit__base_1ga2360fa86fd003572056ea5b790630e98" refkind="member"><highlight class="comment"></highlight><highlight class="normal">ASMJIT_ENUM(<ref refid="group__asmjit__base_1ga2360fa86fd003572056ea5b790630e98" kindref="member" tooltip="Architecture.">kArch</ref>)<sp/>{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>No/Unknown<sp/>architecture.</highlight></codeline>
<codeline lineno="64" refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a6fa38f2eb4a35299c100501c9111540e" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a6fa38f2eb4a35299c100501c9111540e" kindref="member" tooltip="No/Unknown architecture.">kArchNone</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>X86<sp/>architecture.</highlight></codeline>
<codeline lineno="67" refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a96351e645e40ec7757426b780d3dc9cc" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a96351e645e40ec7757426b780d3dc9cc" kindref="member" tooltip="X86 architecture.">kArchX86</ref><sp/>=<sp/>1,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>X64<sp/>architecture,<sp/>also<sp/>called<sp/>AMD64.</highlight></codeline>
<codeline lineno="69" refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98ac570137deb519c20e131c51ed65d2426" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98ac570137deb519c20e131c51ed65d2426" kindref="member" tooltip="X64 architecture, also called AMD64.">kArchX64</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Arm<sp/>architecture.</highlight></codeline>
<codeline lineno="72" refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a7352aeb10a9e020bcb42538a9480598f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a7352aeb10a9e020bcb42538a9480598f" kindref="member" tooltip="Arm architecture.">kArchArm</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ASMJIT_HOST_X86)</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>kArchHost<sp/>=<sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a96351e645e40ec7757426b780d3dc9cc" kindref="member" tooltip="X86 architecture.">kArchX86</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ASMJIT_HOST_X86</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ASMJIT_HOST_X64)</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>kArchHost<sp/>=<sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98ac570137deb519c20e131c51ed65d2426" kindref="member" tooltip="X64 architecture, also called AMD64.">kArchX64</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ASMJIT_HOST_X64</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ASMJIT_HOST_ARM)</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>kArchHost<sp/>=<sp/><ref refid="group__asmjit__base_1gga2360fa86fd003572056ea5b790630e98a7352aeb10a9e020bcb42538a9480598f" kindref="member" tooltip="Arm architecture.">kArchArm</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ASMJIT_HOST_ARM</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>//!<sp/>@brief<sp/>Whether<sp/>the<sp/>host<sp/>is<sp/>64-bit.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>kArchHost64Bit<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(intptr_t)<sp/>&gt;=<sp/>8</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::Init<sp/>/<sp/>NoInit]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_Init<sp/>{};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Init<sp/>Init<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_NoInit<sp/>{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NoInit<sp/>NoInit<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit::Assert]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">//!<sp/>@brief<sp/>Called<sp/>in<sp/>debug<sp/>build<sp/>on<sp/>assertion<sp/>failure.</highlight></codeline>
<codeline lineno="105"><highlight class="comment">//!</highlight></codeline>
<codeline lineno="106"><highlight class="comment">//!<sp/>@param<sp/>exp<sp/>Expression<sp/>that<sp/>failed.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">//!<sp/>@param<sp/>file<sp/>Source<sp/>file<sp/>name<sp/>where<sp/>it<sp/>happened.</highlight></codeline>
<codeline lineno="108"><highlight class="comment">//!<sp/>@param<sp/>line<sp/>Line<sp/>in<sp/>the<sp/>source<sp/>file.</highlight></codeline>
<codeline lineno="109"><highlight class="comment">//!</highlight></codeline>
<codeline lineno="110"><highlight class="comment">//!<sp/>If<sp/>you<sp/>have<sp/>problems<sp/>with<sp/>assertions<sp/>put<sp/>a<sp/>breakpoint<sp/>at<sp/>assertionFailed()</highlight></codeline>
<codeline lineno="111"><highlight class="comment">//!<sp/>function<sp/>(asmjit/base/assert.cpp)<sp/>to<sp/>see<sp/>what<sp/>happened.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight><highlight class="normal">ASMJIT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__asmjit__base_1ga14c6796911b413c3fe1ad198e186901f" kindref="member" tooltip="Called in debug build on assertion failure.">assertionFailed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>exp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ASMJIT_DEBUG)</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASMJIT_ASSERT(_Exp_)<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!(_Exp_))<sp/>::asmjit::assertionFailed(#_Exp_,<sp/>__FILE__,<sp/>__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="120" refid="group__asmjit__config_1ga9db1c56e8381f1728245475745b6213e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASMJIT_ASSERT(_Exp_)<sp/>ASMJIT_NOP()</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">//!<sp/>@}</highlight></codeline>
<codeline lineno="124"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>asmjit<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[asmjit_cast&lt;&gt;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">//!<sp/>@brief<sp/>Cast<sp/>used<sp/>to<sp/>cast<sp/>pointer<sp/>to<sp/>function.<sp/>It&apos;s<sp/>like<sp/>reinterpret_cast&lt;&gt;,</highlight></codeline>
<codeline lineno="132"><highlight class="comment">//!<sp/>but<sp/>uses<sp/>internally<sp/>C<sp/>style<sp/>cast<sp/>to<sp/>work<sp/>with<sp/>MinGW.</highlight></codeline>
<codeline lineno="133"><highlight class="comment">//!</highlight></codeline>
<codeline lineno="134"><highlight class="comment">//!<sp/>If<sp/>you<sp/>are<sp/>using<sp/>single<sp/>compiler<sp/>and<sp/>@c<sp/>reinterpret_cast&lt;&gt;<sp/>works<sp/>for<sp/>you,</highlight></codeline>
<codeline lineno="135"><highlight class="comment">//!<sp/>there<sp/>is<sp/>no<sp/>reason<sp/>to<sp/>use<sp/>@c<sp/>asmjit_cast&lt;&gt;.<sp/>If<sp/>you<sp/>are<sp/>writing</highlight></codeline>
<codeline lineno="136"><highlight class="comment">//!<sp/>cross-platform<sp/>software<sp/>with<sp/>various<sp/>compiler<sp/>support,<sp/>consider<sp/>using</highlight></codeline>
<codeline lineno="137"><highlight class="comment">//!<sp/>@c<sp/>asmjit_cast&lt;&gt;<sp/>instead<sp/>of<sp/>@c<sp/>reinterpret_cast&lt;&gt;.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Z&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ASMJIT_INLINE<sp/>T<sp/>asmjit_cast(Z*<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T)p;<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Api-End]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../base/apiend.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Guard]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_ASMJIT_BASE_GLOBALS_H</highlight></codeline>
    </programlisting>
    <location file="/home/ryan/asmjit/src/asmjit/base/globals.h"/>
  </compounddef>
</doxygen>
