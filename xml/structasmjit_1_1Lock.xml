<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structasmjit_1_1Lock" kind="struct" prot="public">
    <compoundname>asmjit::Lock</compoundname>
    <includes local="no">lock.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structasmjit_1_1Lock_1a7a00078b528146d10c3a021838361218" prot="public" static="no">
        <type>pthread_mutex_t</type>
        <definition>typedef pthread_mutex_t asmjit::Lock::Handle</definition>
        <argsstring></argsstring>
        <name>Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="64" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structasmjit_1_1Lock_1a8baaca0a1f6acc36ad515fa59b494617" prot="public" static="no" mutable="no">
        <type>Handle</type>
        <definition>Handle asmjit::Lock::_handle</definition>
        <argsstring></argsstring>
        <name>_handle</name>
        <briefdescription>
<para>Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="91" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structasmjit_1_1Lock_1a51e4cecfeabb0f10c181298159b14918" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Lock::Lock</definition>
        <argsstring>(const Lock &amp;other)</argsstring>
        <name>Lock</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Lock_1a89887a8a6cb028ae11f8ad9789c279b0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> &amp;</type>
        <definition>Lock&amp; asmjit::Lock::operator=</definition>
        <argsstring>(const Lock &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structasmjit_1_1Lock_1a5caaefd37e8e54f0dd2c95d572c149db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Lock::Lock</definition>
        <argsstring>()</argsstring>
        <name>Lock</name>
        <briefdescription>
<para>Create a new <ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="67" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Lock_1a072efef351daecbb3529f2c441a4ff1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>asmjit::Lock::~Lock</definition>
        <argsstring>()</argsstring>
        <name>~Lock</name>
        <briefdescription>
<para>Destroy the <ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="69" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Lock_1a9778a97877e3ef59b26ebd6a578c9751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::Lock::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
<para><ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="72" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Lock_1a390352fa1a235ee0bf9651a7e67fee9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void asmjit::Lock::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
<para>Unlock. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="74" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Lock_1a2a4e9905e5dc4aa88b2799d16609c012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Handle &amp;</type>
        <definition>Handle&amp; asmjit::Lock::getHandle</definition>
        <argsstring>()</argsstring>
        <name>getHandle</name>
        <briefdescription>
<para>Get handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="82" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structasmjit_1_1Lock_1a06b8323275f644fd38c4ddf41502cc03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Handle &amp;</type>
        <definition>const Handle&amp; asmjit::Lock::getHandle</definition>
        <argsstring>() const </argsstring>
        <name>getHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="84" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="84" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structasmjit_1_1Lock" kindref="compound">Lock</ref> - used in thread-safe code for locking. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ryan/asmjit/src/asmjit/base/lock.h" line="37" bodyfile="/home/ryan/asmjit/src/asmjit/base/lock.h" bodystart="37" bodyend="92"/>
    <listofallmembers>
      <member refid="structasmjit_1_1Lock_1a8baaca0a1f6acc36ad515fa59b494617" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>_handle</name></member>
      <member refid="structasmjit_1_1Lock_1a2a4e9905e5dc4aa88b2799d16609c012" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>getHandle</name></member>
      <member refid="structasmjit_1_1Lock_1a06b8323275f644fd38c4ddf41502cc03" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>getHandle</name></member>
      <member refid="structasmjit_1_1Lock_1a7a00078b528146d10c3a021838361218" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>Handle</name></member>
      <member refid="structasmjit_1_1Lock_1a9778a97877e3ef59b26ebd6a578c9751" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>lock</name></member>
      <member refid="structasmjit_1_1Lock_1a51e4cecfeabb0f10c181298159b14918" prot="private" virt="non-virtual"><scope>asmjit::Lock</scope><name>Lock</name></member>
      <member refid="structasmjit_1_1Lock_1a5caaefd37e8e54f0dd2c95d572c149db" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>Lock</name></member>
      <member refid="structasmjit_1_1Lock_1a89887a8a6cb028ae11f8ad9789c279b0" prot="private" virt="non-virtual"><scope>asmjit::Lock</scope><name>operator=</name></member>
      <member refid="structasmjit_1_1Lock_1a390352fa1a235ee0bf9651a7e67fee9a" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>unlock</name></member>
      <member refid="structasmjit_1_1Lock_1a072efef351daecbb3529f2c441a4ff1b" prot="public" virt="non-virtual"><scope>asmjit::Lock</scope><name>~Lock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
